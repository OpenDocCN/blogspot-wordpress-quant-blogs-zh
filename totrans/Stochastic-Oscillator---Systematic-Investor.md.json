["```\n\n############################################################################### \n# Super Smoother filter 2013 John F. Ehlers\n# http://www.stockspotter.com/files/PredictiveIndicators.pdf\n############################################################################### \nsuper.smoother.filter <- function(x) {\n    a1 = exp( -1.414 * pi / 10.0 )\n    b1 = 2.0 * a1 * cos( (1.414*180.0/10.0) * pi / 180.0 )\n    c2 = b1\n    c3 = -a1 * a1\n    c1 = 1.0 - c2 - c3\n\n    x = c1 * (x + mlag(x)) / 2\n        x[1] = x[2]\n\n    out = x * NA\n        out[] = filter(x, c(c2, c3), method='recursive', init=c(0,0))\n    out\n}\n\n# Roofing filter 2013 John F. Ehlers\nroofing.filter <- function(x) {\n    # Highpass filter cyclic components whose periods are shorter than 48 bars\n    alpha1 = (cos((0.707*360 / 48) * pi / 180.0 ) + sin((0.707*360 / 48) * pi / 180.0 ) - 1) / cos((0.707*360 / 48) * pi / 180.0 )\n\n    x = (1 - alpha1 / 2)*(1 - alpha1 / 2)*( x - 2*mlag(x) + mlag(x,2))\n        x[1] = x[2] = x[3]\n\n    HP = x * NA\n    HP[] = filter(x, c(2*(1 - alpha1), - (1 - alpha1)*(1 - alpha1)), method='recursive', init=c(0,0))\n\n    super.smoother.filter(HP)\n}\n\n# My Stochastic Indicator 2013 John F. Ehlers\nroofing.stochastic.indicator  <- function(x, lookback = 20) {\n    Filt = roofing.filter(x)\n\n    HighestC = runMax(Filt, lookback)\n        HighestC[1:lookback] = as.double(HighestC[lookback])\n    LowestC = runMin(Filt, lookback)\n        LowestC[1:lookback] = as.double(LowestC[lookback])\n    Stoc = (Filt - LowestC) / (HighestC - LowestC)\n\n    super.smoother.filter(Stoc)\n}\n\n```", "```\n\n###############################################################################\n# Load Systematic Investor Toolbox (SIT)\n# https://systematicinvestor.wordpress.com/systematic-investor-toolbox/\n###############################################################################\nsetInternet2(TRUE)\ncon = gzcon(url('http://www.systematicportfolio.com/sit.gz', 'rb'))\n    source(con)\nclose(con)\n\n    #*****************************************************************\n    # Load historical data\n    #******************************************************************   \n    load.packages('quantmod')  \n\n    tickers = spl('DG')\n    data = new.env()\n    getSymbols(tickers, src = 'yahoo', from = '1970-01-01', env = data, auto.assign = T)   \n        for(i in ls(data)) data[[i]] = adjustOHLC(data[[i]], use.Adjusted=T)\n    bt.prep(data)\n\n    #*****************************************************************\n    # Setup\n    #*****************************************************************\n    prices = data$prices  \n\n    models = list()\n\n    # John Ehlers Stochastic\n    stoch = roofing.stochastic.indicator(prices)\n\n    # 14 Day Stochastic\n    stoch14 = bt.apply(data, function(x) stoch(HLC(x),14)[,'slowD'])\n\n    #*****************************************************************\n    # Create plots\n    #******************************************************************           \n    dates = '2011:10::2012:9'\n\n    layout(1:3)\n\n    plota(prices[dates], type='l', plotX=F)\n    plota.legend('DG')\n\n    plota(stoch[dates], type='l', plotX=F)\n        abline(h = 0.2, col='red')\n        abline(h = 0.8, col='red')\n    plota.legend('John Ehlers Stochastic')\n\n    plota(stoch14[dates], type='l')\n        abline(h = 0.2, col='red')\n        abline(h = 0.8, col='red')\n    plota.legend('Stochastic')\n\n```", "```\n\n    #*****************************************************************\n    # Code Strategies\n    #*****************************************************************\n    # Figure 6: Conventional Wisdom is to Buy When the Indicator Crosses Above 20% and \n    # To Sell Short when the Indicator Crosses below 80%\n    data$weight[] = NA\n        data$weight[] = iif(cross.up(stoch, 0.2), 1, iif(cross.dn(stoch, 0.8), -1, NA))\n    models$post = bt.run.share(data, clean.signal=T, trade.summary=T)\n\n    data$weight[] = NA\n        data$weight[] = iif(cross.up(stoch, 0.2), 1, iif(cross.dn(stoch, 0.8), 0, NA))\n    models$post.L = bt.run.share(data, clean.signal=T, trade.summary=T)\n\n    data$weight[] = NA\n        data$weight[] = iif(cross.up(stoch, 0.2), 0, iif(cross.dn(stoch, 0.8), -1, NA))\n    models$post.S = bt.run.share(data, clean.signal=T, trade.summary=T)\n\n    # Figure 8: Predictive Indicators Enable You to Buy When the Indicator Crosses Below 20% and \n    # To Sell Short when the Indicator Crosses Above 80%\n    data$weight[] = NA\n        data$weight[] = iif(cross.dn(stoch, 0.2), 1, iif(cross.up(stoch, 0.8), -1, NA))\n    models$pre = bt.run.share(data, clean.signal=T, trade.summary=T)\n\n    data$weight[] = NA\n        data$weight[] = iif(cross.dn(stoch, 0.2), 1, iif(cross.up(stoch, 0.8), 0, NA))\n    models$pre.L = bt.run.share(data, clean.signal=T, trade.summary=T)\n\n    data$weight[] = NA\n        data$weight[] = iif(cross.dn(stoch, 0.2), 0, iif(cross.up(stoch, 0.8), -1, NA))\n    models$pre.S = bt.run.share(data, clean.signal=T, trade.summary=T)\n\n    #*****************************************************************\n    # Create Report\n    #****************************************************************** \t\t    \n    strategy.performance.snapshoot(models, T)\n\n```", "```\n\njohn.ehlers.custom.strategy.plot <- function(data, models, name, \n\tmain = name,\n\tdates = '::',\n\tlayout = NULL\t\t# flag to indicate if layout is already set\t\n) {\n    # John Ehlers Stochastic\n    stoch = roofing.stochastic.indicator(data$prices)\n\n    # highlight logic based on weight\n    weight = models[[name]]$weight[dates]\n    \tcol = iif(weight > 0, 'green', iif(weight < 0, 'red', 'white'))\n    plota.control$col.x.highlight = col.add.alpha(col, 100)\n    \thighlight = T\n\n    if(is.null(layout)) layout(1:2)\n\n    plota(data$prices[dates], type='l', x.highlight = highlight, plotX = F, main=main)\n    plota.legend('Long,Short,Not Invested','green,red,white')\n\n    plota(stoch[dates], type='l', x.highlight = highlight, plotX = F, ylim=c(0,1))        \t\n       \tcol = col.add.alpha('red', 100)\n        abline(h = 0.2, col=col, lwd=3)\n        abline(h = 0.8, col=col, lwd=3)\n    plota.legend('John Ehlers Stochastic')        \n}\n\n    layout(1:4, heights=c(2,1,2,1))\n\n    john.ehlers.custom.strategy.plot(data, models, 'post.L', dates = '2013::', layout=T,\n        main = 'post.L: Buy When the Indicator Crosses Above 20% and Sell when the Indicator Crosses Below 80%')\n\n    john.ehlers.custom.strategy.plot(data, models, 'pre.L', dates = '2013::', layout=T,\n\tmain = 'pre.L: Buy When the Indicator Crosses Below 20% and Sell when the Indicator Crosses Above 80%')\n\n```"]