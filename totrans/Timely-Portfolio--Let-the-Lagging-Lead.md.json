["```\n#get very helpful Ken French data\n#for this project we will look at Industry Portfolios\n#http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/ftp/17_Industry_Portfolios.zip   require(PerformanceAnalytics)\nrequire(quantmod)\nrequire(RColorBrewer)   #my.url will be the location of the zip file with the data\nmy.url=\"http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/ftp/17_Industry_Portfolios.zip\"\n#this will be the temp file set up for the zip file\nmy.tempfile<-paste(tempdir(),\"\\\\frenchindustry.zip\",sep=\"\")\n#my.usefile is the name of the txt file with the data\nmy.usefile<-paste(tempdir(),\"\\\\17_Industry_Portfolios.txt\",sep=\"\")\ndownload.file(my.url, my.tempfile, method=\"auto\", \n\tquiet = FALSE, mode = \"wb\",cacheOK = TRUE)\nunzip(my.tempfile,exdir=tempdir(),junkpath=TRUE)\n#read space delimited text file extracted from zip\nfrench_industry <- read.table(file=my.usefile,\n\theader = TRUE, sep = \"\",\n\tas.is = TRUE,\n\tskip = 11, nrows=1021)   #get dates ready for xts index\ndatestoformat <- rownames(french_industry)\ndatestoformat <- paste(substr(datestoformat,1,4),\n\tsubstr(datestoformat,5,7),\"01\",sep=\"-\")   #get xts for analysis\nfrench_industry_xts <- as.xts(french_industry[,1:17],\n\torder.by=as.Date(datestoformat))   french_industry_xts <- french_industry_xts/100   #get price series from monthly returns for utilities and transports\nUtils <- cumprod(1+french_industry_xts[,14])\nTrans <- cumprod(1+french_industry_xts[,13]) #use chemicals  #6 for best result\nUtilsmean <- runMean(Utils,n=4)   #get relative strength Utils to Transports\nUtilsTrans <- Utils/Trans   width = 3\nfor (i in (width+1):NROW(Utils)) {\n\tlinmod <- lm(Utils[((i-width):i),1]~index(Utils[((i-width):i)]))\n\tifelse(i==width+1,signal <- coredata(linmod$residuals[length(linmod$residuals)]),\n\t\tsignal <- rbind(signal,coredata(linmod$residuals[length(linmod$residuals)])))\n\tifelse(i==width+1,signal2 <- coredata(linmod$coefficients[2]),\n\t\tsignal2 <- rbind(signal2,coredata(linmod$coefficients[2])))\n\tifelse(i==width+1,signal3 <- cor(linmod$fitted.values,Utils[((i-width):i),1]),\n\t\tsignal3 <- rbind(signal3,cor(linmod$fitted.values,Utils[((i-width):i),1])))\n}   signal <- as.xts(signal,order.by=index(Utils[(width+1):NROW(Utils)]))\nsignal2 <- as.xts(signal2,order.by=index(Utils[(width+1):NROW(Utils)]))\nsignal3 <- as.xts(signal3,order.by=index(Utils[(width+1):NROW(Utils)]))\nsignal4 <- ifelse(Utils > Utilsmean,1,0)   price_ret_signal <- merge(Utils,\n\tlag(signal,k=1),\n\tlag(signal2,k=1),\n\tlag(signal3,k=1),\n\tlag(signal4,k=1),\n\tlag(ROC(Utils,type=\"discrete\",n=4),k=1),\n\tROC(Utils,type=\"discrete\",n=1))\nprice_ret_signal[,2] <- price_ret_signal[,2]/price_ret_signal[,1]\nprice_ret_signal[,3] <- price_ret_signal[,3]/price_ret_signal[,1]\nret <- ifelse((price_ret_signal[,5] == 1) | (price_ret_signal[,5] == 0  &\n \trunMean(price_ret_signal[,3],n=12) > 0 & runMean(price_ret_signal[,2],n=3) < 0 ),\n\t1, 0) * price_ret_signal[,7]\nretCompare <- merge(ret, price_ret_signal[,7])\ncolnames(retCompare) <- c(\"Linear System\", \"BuyHoldUtils\")\n#jpeg(filename=\"performance summary.jpg\",\n#\tquality=100,width=6.25, height = 8,  units=\"in\",res=96)\ncharts.PerformanceSummary(retCompare,ylog=TRUE,cex.legend=1.2,\n\tcolorset=c(\"black\",\"gray70\"),main=\"Utils System Return Comparison\")   #eliminate NA at start of return series\nretCompare[is.na(retCompare)] <- 0\nprice_system <- merge(Utils,ifelse((price_ret_signal[,5] == 1) |\n\t(price_ret_signal[,5] == 0  & \n\trunMean(price_ret_signal[,3],n=12) > 0 &\n\trunMean(price_ret_signal[,2],n=3) < 0 ),\n\tNA, 1),coredata(Utils)[width+12]*cumprod(retCompare[,1]+1))\nprice_system[,2] <- price_system[,1]*price_system[,2]\ncolnames(price_system) <- c(\"In\",\"Out\",\"System\")   chartSeries(price_system$System,theme=\"white\",log=TRUE,up.col=\"black\",\n\tyrange=c(min(price_system[,c(1,3)]),max(price_system[,c(1,3)])),\n\tTA=\"addTA(price_system$In,on=1,col=3);\n\taddTA(price_system$Out,on=1,col=2)\",\n\tname=\"Utils Linear Model System\")   #let's try an easy relative strength signal to choose small cap or large cap\n#know I can do this better in R but here is my ugly code\n#to calculate 12 month or 1 year slope of utils/trans\nwidth=12\n#get relative strength slope of high beta/low vol\nfor (i in 1:(NROW(UtilsTrans)-width)) {\n    model<-lm(UtilsTrans[i:(i+width),1]~index(UtilsTrans[i:(i+width)]))\n    ifelse(i==1,indexRS<-model$coefficients[2],indexRS<-rbind(indexRS,model$coefficients[2]))\n}\nindexRS<-xts(cbind(indexRS),order.by=index(UtilsTrans)[(width+1):NROW(UtilsTrans)])   price_ret_signal <- na.omit(merge(price_ret_signal, lag(indexRS,k=1), ROC(Trans,type=\"discrete\",n=1)))\n#use same linear system signal for in out but add RS to choose Russell 2000 or SP500\nretRS <- ifelse((price_ret_signal[,5] == 1) | (price_ret_signal[,5] == 0  &\n \trunMean(price_ret_signal[,3],n=12) > 0 & runMean(price_ret_signal[,2],n=3) < 0 ),\n\t1, 0) * ifelse(price_ret_signal[,8]<0,price_ret_signal[,9],price_ret_signal[,7])\nretCompareWithRS <- na.omit(merge(retRS,retCompare,ROC(Trans, n=1, type=\"discrete\")))\ncolnames(retCompareWithRS) <- c(\"Linear.With.RS\",colnames(retCompareWithRS)[2:3],\n\t\"BuyHoldTrans\")   #jpeg(filename=\"performance summary.jpg\",\n#\tquality=100,width=6.25, height = 8,  units=\"in\",res=96)\ncharts.PerformanceSummary(retCompareWithRS,ylog=TRUE,cex.legend=1.2,\n\tmain=\"Utility and Transports System Rotator\", colorset=brewer.pal(4,\"Paired\"))\nmtext(\"Source: http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html\",\n\tside=1,adj=0,cex=0.75)\n#dev.off()   corr <- runCor(price_ret_signal[,7],price_ret_signal[,9],n=12)\nplot.zoo(corr)\n```"]