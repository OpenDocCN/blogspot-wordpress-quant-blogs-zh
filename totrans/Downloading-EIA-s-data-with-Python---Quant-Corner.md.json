["```\nimport json\nimport numpy as np\nimport pandas as pd\nfrom urllib.error import URLError, HTTPError\nfrom urllib.request import urlopen\n\nclass EIAgov(object):\n    def __init__(self, token, series):\n        '''\n        Purpose:\n        Initialise the EIAgov class by requesting:\n        - EIA token\n        - id code(s) of the series to be downloaded\n\n        Parameters:\n        - token: string\n        - series: string or list of strings\n        '''\n        self.token = token\n        self.series = series\n\n    '''\n    def __repr__(self):\n        return str(self.series)\n    '''\n\n    def Raw(self, ser):\n        # Construct url\n        url = 'http://api.eia.gov/series/?api_key=' + self.token + '&series_id=' + ser.upper()\n\n        try:\n            # URL request, URL opener, read content\n            response = urlopen(url);\n            raw_byte = response.read()\n            raw_string = str(raw_byte, 'utf-8-sig')\n            jso = json.loads(raw_string)\n            return jso\n\n        except HTTPError as e:\n            print('HTTP error type.')\n            print('Error code: ', e.code)\n\n        except URLError as e:\n            print('URL type error.')\n            print('Reason: ', e.reason)\n\n    def GetData(self):\n        # Deal with the date series \n        date_ = self.Raw(self.series[0])        \n        date_series = date_['series'][0]['data']\n        endi = len(date_series) # or len(date_['series'][0]['data'])\n        date = []\n        for i in range (endi):\n            date.append(date_series[i][0])\n\n        # Create dataframe\n        df = pd.DataFrame(data=date)\n        df.columns = ['Date']\n\n        # Deal with data\n        lenj = len(self.series)\n        for j in range (lenj):\n            data_ = self.Raw(self.series[j])\n            data_series = data_['series'][0]['data']\n            data = []\n            endk = len(date_series)         \n            for k in range (endk):\n                data.append(data_series[k][1])\n            df[self.series[j]] = data\n\n        return df\n\nif __name__ == '__main__':\n    tok = 'YOUR_EIA_TOKEN'\n\n    # Natural Gas - Daily prices\n    # http://www.eia.gov/beta/api/qb.cfm?category=462457&sdid=NG.RNGC1.D\n    ng = ['NG.RNGC1.D']  # w/ several series at a time ['ELEC.REV.AL-ALL.M', 'ELEC.REV.AK-ALL.M', 'ELEC.REV.CA-ALL.M']\n    data = EIAgov(tok, ng)\n    print(data.GetData())\n\n'''\n              Date  NG.RNGC1.D\n0     20150714       2.840\n1     20150710       2.770\n2     20150709       2.726\n3     20150708       2.685\n4     20150707       2.716\n5     20150706       2.756\n6     20150702       2.822\n7     20150701       2.783\n8     20150630       2.832\n9     20150629       2.805\n10    20150626       2.773\n11    20150625       2.850\n12    20150624       2.759\n13    20150623       2.726\n14    20150622       2.733\n15    20150619       2.816\n16    20150618       2.777\n17    20150617       2.855\n18    20150616       2.894\n19    20150615       2.889\n20    20150612       2.750\n21    20150611       2.825\n22    20150610       2.891\n23    20150609       2.846\n24    20150608       2.705\n25    20150605       2.590\n26    20150604       2.626\n27    20150603       2.634\n28    20150602       2.698\n29    20150601       2.649\n...        ...         ...\n5359  19940224       2.248\n5360  19940223       2.232\n5361  19940222       2.296\n5362  19940218       2.418\n5363  19940217       2.385\n5364  19940216       2.345\n5365  19940215       2.253\n5366  19940214       2.252\n5367  19940211       2.356\n5368  19940210       2.374\n5369  19940209       2.358\n5370  19940208       2.411\n5371  19940207       2.347\n5372  19940204       2.369\n5373  19940203       2.383\n5374  19940202       2.585\n5375  19940201       2.639\n5376  19940131       2.554\n5377  19940128       2.528\n5378  19940127       2.417\n5379  19940126       2.359\n5380  19940125       2.246\n5381  19940124       2.470\n5382  19940121       2.305\n5383  19940120       2.250\n5384  19940119       2.252\n5385  19940118       2.318\n5386  19940117       2.360\n5387  19940114       2.268\n5388  19940113       2.194\n\n[5389 rows x 2 columns]\nPress any key to continue . . .\n'''\n\n```"]