- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-18 05:57:57'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Annotation Fun – AST (Abstract Syntax Tree) Transformations | Tales from a Trading
    Desk
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://mdavey.wordpress.com/2013/11/15/annotation-fun-ast-abstract-syntax-tree-transformations/#0001-01-01](https://mdavey.wordpress.com/2013/11/15/annotation-fun-ast-abstract-syntax-tree-transformations/#0001-01-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Annotation Fun – AST (Abstract Syntax Tree) Transformations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Another airport, another day. Kicking around some ideas with reactive, Java,
    data tables and protocols.  Whilst trying to achieve a more reactive solution
    that reduced a few coding problems, I considered leveraging annotations, but after
    kicking around a few coding ideas, I believe I might be better off with custom
    [AST](http://www.ibm.com/developerworks/library/j-lombok/) (Abstract Syntax Tree)
    transformations, via Lombok.  Lets hope AST’s achieve the elegant code solution
    I’m looking for.
  prefs: []
  type: TYPE_NORMAL
- en: ~ by mdavey on November 15, 2013.
  prefs: []
  type: TYPE_NORMAL
- en: Posted in [Java](https://mdavey.wordpress.com/category/languages/java/)
  prefs: []
  type: TYPE_NORMAL
