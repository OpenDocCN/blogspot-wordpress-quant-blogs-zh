["```\n\n# load Systematic Investor Toolbox\nsetInternet2(TRUE)\nsource(gzcon(url('https://github.com/systematicinvestor/SIT/raw/master/sit.gz', 'rb')))\n\n\t#--------------------------------------------------------------------------\n\t# Get Historical Data\n\t#--------------------------------------------------------------------------\n\tload.packages('quantmod')\n\n\t# load historical prices from Yahoo Finance\n\tsymbols = spl('FWWFX,EWA,EWC,EWQ,EWG,EWJ,EWU,SPY')\t\t\n\tsymbol.names = spl('Fund,Australia,Canada,France,Germany,Japan,UK,USA')\t\n\tgetSymbols(symbols, from = '1980-01-01', auto.assign = TRUE)\n\n\t# align dates for all symbols & convert to frequency \n\thist.prices = merge(FWWFX,EWA,EWC,EWQ,EWG,EWJ,EWU,SPY)\t\t\n\t\tperiod.ends = endpoints(hist.prices, 'months')\n\t\thist.prices = Ad(hist.prices)[period.ends, ]\n\n\t\tindex(hist.prices) = as.Date(paste('1/', format(index(hist.prices), '%m/%Y'), sep=''), '%d/%m/%Y')\n\t\tcolnames(hist.prices) = symbol.names\n\n\t# remove any missing data\t\n\thist.prices = na.omit(hist.prices['1990::2010'])\n\n\t# compute simple returns\t\n\thist.returns = na.omit( ROC(hist.prices, type = 'discrete') )\n\n\t#load 3-Month Treasury Bill from FRED\n\tTB3M = quantmod::getSymbols('TB3MS', src='FRED', auto.assign = FALSE)\t\n\tTB3M = processTBill(TB3M, timetomaturity = 1/4)\n\t\tindex(TB3M) = as.Date(paste('1/', format(index(TB3M), '%m/%Y'), sep=''), '%d/%m/%Y')\n\t\tTB3M = ROC(Ad(TB3M), type = 'discrete')\n\t\tcolnames(TB3M) = 'Cash'\n\n\t# add Cash to the asset classes\n\thist.returns = na.omit( merge(hist.returns, TB3M) )\n\n```", "```\n\n\t#--------------------------------------------------------------------------\n\t# Style Regression over 36 Month window, unconstrained\n\t#--------------------------------------------------------------------------\n\t# setup\n\tndates = nrow(hist.returns)\n\tn = ncol(hist.returns)-1\n\twindow.len = 36\n\n\tstyle.weights = hist.returns[, -1]\n\t\tstyle.weights[] = NA\n\tstyle.r.squared = hist.returns[, 1]\n\t\tstyle.r.squared[] = NA\n\n\t# main loop\n\tfor( i in window.len:ndates ) {\n\t\twindow.index = (i - window.len + 1) : i\n\n\t\tfit = lm.constraint( hist.returns[window.index, -1], hist.returns[window.index, 1] )\t\n\t\t\tstyle.weights[i,] = fit$coefficients\n\t\t\tstyle.r.squared[i,] = fit$r.squared\n\t}\n\n\t# plot \n\taa.style.summary.plot('Style UnConstrained', style.weights, style.r.squared, window.len)\n\n```", "```\n\n\t#--------------------------------------------------------------------------\n\t# Style Regression over Window, constrained\n\t#--------------------------------------------------------------------------\n\t# setup\n\tload.packages('quadprog')\n\n\tstyle.weights[] = NA\n\tstyle.r.squared[] = NA\n\n\t# Setup constraints\n\t# 0 <= x.i <= 1\n\tconstraints = new.constraints(n, lb = 0, ub = 1)\n\n\t# SUM x.i = 1\n\tconstraints = add.constraints(rep(1, n), 1, type = '=', constraints)\t\t\n\n\t# main loop\n\tfor( i in window.len:ndates ) {\n\t\twindow.index = (i - window.len + 1) : i\n\n\t\tfit = lm.constraint( hist.returns[window.index, -1], hist.returns[window.index, 1], constraints )\t\n\t\t\tstyle.weights[i,] = fit$coefficients\n\t\t\tstyle.r.squared[i,] = fit$r.squared\n\t}\n\n\t# plot\t\n\taa.style.summary.plot('Style Constrained', style.weights, style.r.squared, window.len)\n\n```", "```\n\n\t#--------------------------------------------------------------------------\n\t# Style Regression  over Window, constrained + limits on allocation\n\t#--------------------------------------------------------------------------\n\t# setup\n\tstyle.weights[] = NA\n\tstyle.r.squared[] = NA\n\n\t# Setup constraints\n\ttemp = rep(0, n)\n\t\tnames(temp) = colnames(hist.returns)[-1]\n\tlb = temp\n\tub = temp\n\tub[] = 1\n\n\tlb['Australia'] = 0\n\tub['Australia'] = 5\n\n\tlb['Canada'] = 0\n\tub['Canada'] = 5\n\n\tlb['France'] = 0\n\tub['France'] = 15\n\n\tlb['Germany'] = 0\n\tub['Germany'] = 15\n\n   \tlb['Japan'] = 0\n\tub['Japan'] = 15\n\n   \tlb['UK'] = 0\n\tub['UK'] = 25\n\n   \tlb['USA'] = 30\n\tub['USA'] = 100\n\n   \tlb['Cash'] = 2\n\tub['Cash'] = 15\n\n\t# 0 <= x.i <= 1\n\tconstraints = new.constraints(n, lb = lb/100, ub = ub/100)\n\n\t# SUM x.i = 1\n\tconstraints = add.constraints(rep(1, n), 1, type = '=', constraints)\t\t\n\n\t# main loop\n\tfor( i in window.len:ndates ) {\n\t\twindow.index = (i - window.len + 1) : i\n\n\t\tfit = lm.constraint( hist.returns[window.index, -1], hist.returns[window.index, 1], constraints )\t\n\t\t\tstyle.weights[i,] = fit$coefficients\n\t\t\tstyle.r.squared[i,] = fit$r.squared\n\t}\n\n\t# plot\n\taa.style.summary.plot('Style Constrained+Limits', style.weights, style.r.squared, window.len)\n\n```", "```\n\n\t#--------------------------------------------------------------------------\n\t# Look at Manager's Tracking Error\n\t#--------------------------------------------------------------------------\n\tmanager.returns = hist.returns[, 1]\n\t\tmanager.returns = manager.returns[window.len:ndates,]\n\timplied.returns = as.xts( rowSums(style.weights * hist.returns[, -1]), index(hist.returns))\n\t\timplied.returns = implied.returns[window.len:ndates,]\n\n\ttracking.error = manager.returns - implied.returns\n\talpha = 12*mean(tracking.error)\n\tcovar.alpha = 12* cov(tracking.error)\n\n\t# plot\n\tlayout(1:2)\n\tplota(cumprod(1+manager.returns), type='l')\n\t\tplota.lines(cumprod(1+implied.returns), col='red')\n\t\tplota.legend('Fund,Style', 'black,red')\n\n\tpar(mar = c(4,4,2,1))\n\thist(100*tracking.error, xlab='Monthly Tracking Error',\n\t\tmain= paste('Annualized Alpha =', round(100*alpha,1), 'Std Dev =', round(100*sqrt(covar.alpha),1))\n\t)\n\n```"]