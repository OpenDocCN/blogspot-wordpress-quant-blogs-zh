["```\n#thanks so much to the developers of quantstrat\n#99% of this code comes from the demos in the quantstrat package\n```", "```\n#now let's define our silly countupdown function\nCUD <- function(price,n) {\n\t#CUD takes the n-period sum of 1 (up days) and -1 (down days)\n\ttemp<-runSum(ifelse(ROC(price,1,type=\"discrete\") > 0,1,-1),n)\n\tcolnames(temp) <- \"CUD\"\n\ttemp\n}     \n```", "```\ntry(rm(\"order_book.CUD\",pos=.strategy),silent=TRUE)\ntry(rm(\"account.CUD\",\"portfolio.CUD\",pos=.blotter),silent=TRUE)\ntry(rm(\"account.st\",\"portfolio.st\",\"stock.str\",\"stratCUD\",\"initDate\",\"initEq\",'start_t','end_t'),silent=TRUE)   \n```", "```\n# Initialize a strategy object\nstratCUD <- strategy(\"CUD\")   \n```", "```\n# Add an indicator\nstratCUD <- add.indicator(strategy = stratCUD, name = \"CUD\", arguments = list(price = quote(Cl(mktdata)),n=20), label=\"CUD\")   \n```", "```\n# enter when CUD > 0\nstratCUD <- add.signal(strategy = stratCUD, name=\"sigThreshold\",arguments = list(threshold=-0.5, column=\"CUD\",relationship=\"gt\", cross=TRUE),label=\"CUD.gteq.0\")\n# exit when CUD < 0\nstratCUD <- add.signal(strategy = stratCUD, name=\"sigThreshold\",arguments = list(threshold=-0.5, column=\"CUD\",relationship=\"lt\",cross=TRUE),label=\"CUD.lt.0\")   \n```", "```\nstratCUD <- add.rule(strategy = stratCUD, name='ruleSignal', arguments = list(sigcol=\"CUD.gteq.0\", sigval=TRUE, orderqty=1000, ordertype='market', orderside='long', pricemethod='market', replace=FALSE), type='enter', path.dep=TRUE)\nstratCUD <- add.rule(strategy = stratCUD, name='ruleSignal', arguments = list(sigcol=\"CUD.lt.0\", sigval=TRUE, orderqty='all', ordertype='market', orderside='long', pricemethod='market', replace=FALSE), type='exit', path.dep=TRUE)       \n```", "```\ncurrency(\"USD\")\nsymbol = \"GSPC\"\nstock(symbol, currency=\"USD\",multiplier=1)\n#use paste with ^ to get index data\ngetSymbols(paste(\"^\",symbol,sep=\"\"),adjust=T,from=\"1900-12-31\")\n#I use weekly but comment this out if you want to use daily\nGSPC<-to.weekly(GSPC)     \n```", "```\ninitDate='1950-12-31'\ninitEq=100000\nport.st<-'CUD' #use a string here for easier changing of parameters and re-trying   \n```", "```\ninitPortf(port.st, symbols=symbol, initDate=initDate)\ninitAcct(port.st, portfolios=port.st, initDate=initDate)\ninitOrders(portfolio=port.st, initDate=initDate)   \n```", "```\nprint(\"setup completed\")   \n```", "```\n# Process the indicators and generate trades\nstart_t<-Sys.time()\nout<-try(applyStrategy(strategy=stratCUD , portfolios=port.st ) )\nend_t<-Sys.time()\nprint(\"Strategy Loop:\")\nprint(end_t-start_t)     \n```", "```\nstart_t<-Sys.time()\nupdatePortf(Portfolio=port.st,Dates=paste('::',as.Date(Sys.time()),sep=''))\nend_t<-Sys.time()\nprint(\"trade blotter portfolio update:\")\nprint(end_t-start_t)   \n```", "```\n# hack for new quantmod graphics, remove later\nthemelist<-chart_theme()\nthemelist$col$up.col<-'lightgreen'\nthemelist$col$dn.col<-'pink'   \n```", "```\nchart.Posn(Portfolio=port.st,Symbol=symbol,theme=themelist,log=TRUE)\n```"]