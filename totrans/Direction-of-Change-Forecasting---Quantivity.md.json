["```\n\nreturnRuns <- function(r, bound=0, doPlot=TRUE, startAvg=5, avgLen=-1)\n{\n  # Generate up/down runs and average runs for a return series, optionally\n  # plotting them.\n  #\n  # Args:\n  #   r: return series\n  #   bound: symmetric upper and lower bound, aka c\n  #   doPlot: flag indicating whether plots should be generated for runs\n  #   startAvg: Number of average runs which should be excluded for\n  #             eliminating unstable average with few leading observations\n  #   avgLen: number of periods over which to generate average; of -1 for\n  #           entire period\n  #\n  # Returns: none\n\n  up <- cumsum(ifelse(r > bound, 1, 0))\n  down <- cumsum(ifelse(r < -bound, 1, 0))\n\n  if (doPlot)\n  {\n    plot(up, main='Signed Runs: Up & Down', ylim=range(up,down))\n    lines(down, col='red')\n    legend(\"topleft\",legend=c(\"Up\",\"Down\"), fill=colors, cex=0.5)\n\n    plot(up-down, main=\"Signed Run Difference (up-down)\")\n  }\n\n  if (avgLen == -1)\n  {\n    avgUp <- xts(sapply(c(1:length(up)), function(i) {\n      up[i]/i\n    }), order.by=index(up))\n    avgDown <- xts(sapply(c(1:length(down)), function(i) {\n      down[i]/i\n    }), order.by=index(up))\n  } else\n  {\n    avgUp <- xts(sapply(c(avgLen:length(up)), function(i) {\n      start <- i - avgLen + 1\n      last(cumsum(ifelse(r[start:i] > bound, 1, 0))) / avgLen\n    }), order.by=index(up[avgLen:length(up)]))\n    avgDown <- xts(sapply(c(avgLen:length(down)), function(i) {\n      start <- i - avgLen + 1\n      last(cumsum(ifelse(r[start:i] < bound, 1, 0))) / avgLen\n    }), order.by=index(up[avgLen:length(up)]))\n  }\n\n  if (doPlot)\n  {\n    n <- length(avgUp)\n    plot(avgUp[startAvg:n], main=paste(\"Average Runs: Up & Down (\",avgLen,\" periods)\",sep=\"\"), type='l', ylim=range(avgUp,avgDown))\n    lines(avgDown[startAvg:n], col='red')\n    legend(\"topleft\",legend=c(\"Up\",\"Down\"), fill=colors, cex=0.5)\n  }\n\n  return (list(up=up, down=down, avgUp=avgUp, avgDown=avgDown))\n}\n\n```"]