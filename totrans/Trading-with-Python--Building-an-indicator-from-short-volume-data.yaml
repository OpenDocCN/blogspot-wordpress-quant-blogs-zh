- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-18 15:42:51'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: 'Trading with Python: Building an indicator from short volume data'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[http://tradingwithpython.blogspot.com/2013/08/building-indicator-from-short-volume.html#0001-01-01](http://tradingwithpython.blogspot.com/2013/08/building-indicator-from-short-volume.html#0001-01-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Price of an asset or an ETF is of course the best indicator there is, but unfortunately
    there is only only so much information contained in it. Some people seem to think
    that the more indicators (rsi, macd, moving average crossover etc) , the better,
    but if all of them are based at the same underlying price series, they will all
    contain a subset of the same limited information contained in the price.
  prefs: []
  type: TYPE_NORMAL
- en: We need more information
  prefs: []
  type: TYPE_NORMAL
- en: '*additional*'
  prefs: []
  type: TYPE_NORMAL
- en: to what is contained the price to make a more informed guess about what is going
    to happen in the near future. An excellent example of combining all sorts of info
    to a clever analysis can be found on the
  prefs: []
  type: TYPE_NORMAL
- en: '[The Short Side of Long blog](http://theshortsideoflong.blogspot.nl/)'
  prefs: []
  type: TYPE_NORMAL
- en: . Producing this kind of analysis requires a great amount of work, for which
    I simply don't have the time as I only trade part-time.
  prefs: []
  type: TYPE_NORMAL
- en: So I built my own 'market dashboard' that automatically collects information
    for me and presents it in an easily digestible form. In this post I'm going to
    show how to build an indicator based on short volume data. This post will illustrate
    the process of data gathering and processing.
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 1: Find data source. **'
  prefs: []
  type: TYPE_NORMAL
- en: BATS exchange provides daily volume data for free on their
  prefs: []
  type: TYPE_NORMAL
- en: '[site](http://www.batstrading.com/market_data/shortsales/)'
  prefs: []
  type: TYPE_NORMAL
- en: .
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 2: Get data manually & inspect**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Short volume data of the BATS exchange is contained in a text file that is
    zipped. Each day has its own zip file. After downloading and unzipping the txt
    file, this is what''s inside (first several lines):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '....'
  prefs: []
  type: TYPE_NORMAL
- en: In total a file contains around 6000 symbols.
  prefs: []
  type: TYPE_NORMAL
- en: This data is needs quite some work before it can be presented in a meaningful
    manner.
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 3: Automatically get data**'
  prefs: []
  type: TYPE_NORMAL
- en: What I really want is not just the data for one day, but a ratio of short volume
    to total volume for the past several years, and I don't really feel like downloading
    500+ zip files and copy-pasting them in excel manually.
  prefs: []
  type: TYPE_NORMAL
- en: 'Luckily, full automation is only a couple of code lines away:'
  prefs: []
  type: TYPE_NORMAL
- en: 'First we need to dynamically create an url from which a file will be downloaded:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Now we can download multiple files at once:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '**Step 4\. Parse downloaded files**'
  prefs: []
  type: TYPE_NORMAL
- en: 'We can use zip and pandas libraries to parse a single file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'It returns a ratio of Short Volume/Total Volume for all symbols in the zip
    file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
