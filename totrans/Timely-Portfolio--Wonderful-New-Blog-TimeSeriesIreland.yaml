- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-18 15:15:57'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: 'Timely Portfolio: Wonderful New Blog TimeSeriesIreland'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[http://timelyportfolio.blogspot.com/2011/05/wonderful-new-blog-timeseriesireland.html#0001-01-01](http://timelyportfolio.blogspot.com/2011/05/wonderful-new-blog-timeseriesireland.html#0001-01-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: I returned from Scotland to find a wonderful new blog from Ireland [http://timeseriesireland.wordpress.com](http://timeseriesireland.wordpress.com). 
    To highlight his work, I thought I would apply his most recent post [AIB Stock
    Price, EGARCH-M, and rgarch](http://timeseriesireland.wordpress.com/2011/05/17/aib-stock-price-egarch-m-and-rgarch/)
    to the S&P 500.  Clearly the author of TimeSeriesIreland has a much better grasp
    of time series statistics than I do, so I will not attempt to change lag orders
    or perfect the model.  Rather I will use his model specifications for AIB daily
    data for S&P 500 weekly data.  This should be fun; maybe this will provoke some
    comments.
  prefs: []
  type: TYPE_NORMAL
- en: And, it is a shame that I need to disclaim, but **THIS IS FOR ILLUSTRATIVE PURPOSES
    ONLY AND SHOULD NOT BE CONSIDERED INVESTMENT ADVICE.  YOU ARE RESPONSIBLE FOR
    YOUR OWN GAINS AND LOSSES.**  I built a very basic system around the fittedmodel$z
    just for fun.  Here are the results.
  prefs: []
  type: TYPE_NORMAL
- en: 'R code:'
  prefs: []
  type: TYPE_NORMAL
- en: '#all credit for this code goes to the very insightful author'
  prefs: []
  type: TYPE_NORMAL
- en: '#of [http://timeseriesireland.wordpress.com](http://timeseriesireland.wordpress.com)'
  prefs: []
  type: TYPE_NORMAL
- en: '#based on the first couple of posts I look forward to following him'
  prefs: []
  type: TYPE_NORMAL
- en: '#for explanation of the statistics and their use, please see'
  prefs: []
  type: TYPE_NORMAL
- en: '#[http://timeseriesireland.wordpress.com/2011/05/17/aib-stock-price-egarch-m-and-rgarch/#more-295](http://timeseriesireland.wordpress.com/2011/05/17/aib-stock-price-egarch-m-and-rgarch/#more-295)'
  prefs: []
  type: TYPE_NORMAL
- en: '#I change the code to use SP500 weekly xts data instead of AIB daily tseries
    data'
  prefs: []
  type: TYPE_NORMAL
- en: require(rgarch)
  prefs: []
  type: TYPE_NORMAL
- en: require(urca)
  prefs: []
  type: TYPE_NORMAL
- en: require(ggplot2)
  prefs: []
  type: TYPE_NORMAL
- en: require(quantmod)
  prefs: []
  type: TYPE_NORMAL
- en: require(PerformanceAnalytics)
  prefs: []
  type: TYPE_NORMAL
- en: '#define start and end dates'
  prefs: []
  type: TYPE_NORMAL
- en: start<-"1929-01-01"
  prefs: []
  type: TYPE_NORMAL
- en: 'end<- format(Sys.Date(),"%Y-%m-%d") # yyyy-mm-dd'
  prefs: []
  type: TYPE_NORMAL
- en: tckr<-"^GSPC"
  prefs: []
  type: TYPE_NORMAL
- en: '#use quantmod to get SP500 data'
  prefs: []
  type: TYPE_NORMAL
- en: getSymbols(tckr,from=start,to=end)
  prefs: []
  type: TYPE_NORMAL
- en: GSPC<-to.weekly(GSPC)
  prefs: []
  type: TYPE_NORMAL
- en: '#get log returns, could also use ROC with type = "continuous"'
  prefs: []
  type: TYPE_NORMAL
- en: LGSPC<-log(GSPC[,4])
  prefs: []
  type: TYPE_NORMAL
- en: retGSPC<-diff(LGSPC)
  prefs: []
  type: TYPE_NORMAL
- en: '#data frame allows us to use ggplot with date data from xts'
  prefs: []
  type: TYPE_NORMAL
- en: '#I have not found any better way to ggplot xts data'
  prefs: []
  type: TYPE_NORMAL
- en: df1<-data.frame(index(GSPC),coredata(GSPC[,4]))
  prefs: []
  type: TYPE_NORMAL
- en: colnames(df1)<-c("dates","sp500")
  prefs: []
  type: TYPE_NORMAL
- en: 'Plot sp500 price:'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: gg1.1<-ggplot(df1,aes(dates,sp500)) + xlab(NULL) + ylab("SP500 log Price") +
    scale_y_log10()
  prefs: []
  type: TYPE_NORMAL
- en: gg1.2<-gg1.1+geom_line(colour="darkblue") + opts(title="Weekly SP500 Price 1950-current")
  prefs: []
  type: TYPE_NORMAL
- en: gg1.2
  prefs: []
  type: TYPE_NORMAL
- en: '#set first return to 0'
  prefs: []
  type: TYPE_NORMAL
- en: retGSPC[1]<-0
  prefs: []
  type: TYPE_NORMAL
- en: df2<-data.frame(index(retGSPC),coredata(retGSPC))
  prefs: []
  type: TYPE_NORMAL
- en: colnames(df2)<-c("dates","sp500")
  prefs: []
  type: TYPE_NORMAL
- en: gg2.1<-ggplot(df2,aes(dates,sp500)) + xlab(NULL) + ylab("Log Changes")
  prefs: []
  type: TYPE_NORMAL
- en: gg2.2<-gg2.1+geom_line(colour="darkred") + opts(title="Weekly SP500 Price Return")
  prefs: []
  type: TYPE_NORMAL
- en: gg2.2
  prefs: []
  type: TYPE_NORMAL
- en: ACFs and PACFs
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: par(mfrow=c(2,1))
  prefs: []
  type: TYPE_NORMAL
- en: acf(retGSPC, main="ACF of SP500 Log Returns", lag = 50)
  prefs: []
  type: TYPE_NORMAL
- en: pacf(retGSPC, main="PACF of SP500 Log Returns", lag = 50)
  prefs: []
  type: TYPE_NORMAL
- en: ar9<-arima(retGSPC, order=c(9,0,0))
  prefs: []
  type: TYPE_NORMAL
- en: acf(ar9$residuals)
  prefs: []
  type: TYPE_NORMAL
- en: ressq<-(ar9$residuals)^2
  prefs: []
  type: TYPE_NORMAL
- en: Box.test(ressq, lag = 8, type = "Ljung-Box")
  prefs: []
  type: TYPE_NORMAL
- en: pacf(ressq, main="PACF of Squared Residuals", lag = 30)
  prefs: []
  type: TYPE_NORMAL
- en: Note that the GARCH order is revered from what I have discussed above
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: specm1 <- ugarchspec(variance.model=list(model="eGARCH", garchOrder=c(2,4),
    submodel = NULL),
  prefs: []
  type: TYPE_NORMAL
- en: mean.model=list(armaOrder=c(9,0), include.mean=TRUE, garchInMean = TRUE))
  prefs: []
  type: TYPE_NORMAL
- en: '#this might take a while'
  prefs: []
  type: TYPE_NORMAL
- en: fitm1 <- ugarchfit(data = retGSPC, spec = specm1)
  prefs: []
  type: TYPE_NORMAL
- en: fitm1
  prefs: []
  type: TYPE_NORMAL
- en: '#plot(fitm1) #use option 8'
  prefs: []
  type: TYPE_NORMAL
- en: fittedmodel <- fitm1@fit
  prefs: []
  type: TYPE_NORMAL
- en: sigma1<-fittedmodel$sigma
  prefs: []
  type: TYPE_NORMAL
- en: df2<-data.frame(index(retGSPC),coredata(retGSPC),sigma1)
  prefs: []
  type: TYPE_NORMAL
- en: colnames(df2)<-c("dates","sp500","sigma1")
  prefs: []
  type: TYPE_NORMAL
- en: gg3.1<-ggplot(df2,aes(dates)) + xlab(NULL) + ylab("Log Changes")
  prefs: []
  type: TYPE_NORMAL
- en: gg3.2<-gg3.1+geom_line(aes(y = sp500, colour="Log Returns")) + opts(title="Weekly
    Log Return with 2 Conditional Standard Deviations")
  prefs: []
  type: TYPE_NORMAL
- en: gg3.3<-gg3.2 + geom_line(aes(y = sigma1*2, colour="2 S.D.")) + geom_line(aes(y
    = sigma1*-2, colour="2 S.D.")) + scale_colour_hue("Series:") + opts(legend.position=c(.18,0.8))
  prefs: []
  type: TYPE_NORMAL
- en: gg3.3
  prefs: []
  type: TYPE_NORMAL
- en: fitm2 <- ugarchfit(data = retGSPC,out.sample = 10, spec = specm1)
  prefs: []
  type: TYPE_NORMAL
- en: fitm2
  prefs: []
  type: TYPE_NORMAL
- en: pred <- ugarchforecast(fitm2, n.ahead = 10,n.roll = 0)
  prefs: []
  type: TYPE_NORMAL
- en: pred.fpm <- fpm(pred)
  prefs: []
  type: TYPE_NORMAL
- en: pred.fpm
  prefs: []
  type: TYPE_NORMAL
- en: '#just because I cannot stand it'
  prefs: []
  type: TYPE_NORMAL
- en: '#I''ll play with a system'
  prefs: []
  type: TYPE_NORMAL
- en: '#not something I would bet my money on'
  prefs: []
  type: TYPE_NORMAL
- en: signal<-runMean(as.xts(fittedmodel$z,order.by=index(retGSPC)),50)
  prefs: []
  type: TYPE_NORMAL
- en: '#chartSeries(signal)'
  prefs: []
  type: TYPE_NORMAL
- en: signal<-lag(signal,k=1)
  prefs: []
  type: TYPE_NORMAL
- en: signal[is.na(signal)]<-0
  prefs: []
  type: TYPE_NORMAL
- en: ret<-ifelse(signal > 0,ROC(GSPC[,4],1,type="discrete"),0)
  prefs: []
  type: TYPE_NORMAL
- en: returnCompare<-merge(ret,ROC(GSPC[,4],1,type="discrete"))
  prefs: []
  type: TYPE_NORMAL
- en: colnames(returnCompare)<-c("ZSystem","SP500")
  prefs: []
  type: TYPE_NORMAL
- en: charts.PerformanceSummary(returnCompare,ylog=TRUE,main="Just for Fun Z System")
  prefs: []
  type: TYPE_NORMAL
