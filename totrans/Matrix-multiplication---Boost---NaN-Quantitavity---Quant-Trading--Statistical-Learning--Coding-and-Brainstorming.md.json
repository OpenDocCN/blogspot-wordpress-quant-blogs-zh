["```\n#include <sstream>\n#include <fstream>\n#include <iostream>\n#include <algorithm>\n#include <string>\n#include <vector>\n#include <boost/numeric/ublas/matrix.hpp>\n#include <boost/numeric/ublas/operation.hpp>\nusing namespace std;\nusing namespace boost::numeric::ublas;\ntypedef matrix<int> Bmatrix;\n\nvoid read(string filename, int& n, Bmatrix &A) {\n\tstring line;\n\tifstream infile;\n\tinfile.open (filename.c_str());\n\tint i=0, j=0, a;\n\n\twhile (getline(infile, line) && !line.empty() && i<n) {\n\t\tistringstream iss(line);\n\t\tj = 0;\n\t\twhile (iss >> a) {\n\t\t\tA(i,j) = a;\n\t\t\tj++;\n\t\t}\n\t\ti++;\n\t}\n\tinfile.close();\n}\n\nvoid printMatrix(Bmatrix matrix) {\n\tfor (int i=0; i < matrix.size1(); i++) {\n\t\tfor (int j=0; j < matrix.size2(); j++) {\n\t\t\tcout << matrix(i, j);\n\t\t\tif(j+1 != matrix.size2()) {\n\t\t\t\tcout << \"\\t\";\n\t\t\t}\n\t\t}\n\t\tcout << endl;\n\t}\n\tcout<<endl;\n}\n\nint main (int argc, char* argv[]) {\n\tstring filename = \"C:\\\\Projects\\\\2000.in\";\n\tint n = 3;\n\tBmatrix A(n,n), B(n,n), C(n,n);\n\tread (filename, n, A);\n\tread (filename, n, B);\n\tboost::numeric::ublas::axpy_prod(A, B, C);\n\tprintMatrix(A);\tprintMatrix(B);\tprintMatrix(C);\n\n\tchar tmp; cin>>tmp; return 0;\n} // http://martin-thoma.com/matrix-multiplication-python-java-cpp/\n// http://www.tohtml.com/cpp/\n```"]