["```\n/* Three Dimensional (3 by 5 by 2) Matrix dynamic memeory allocation */\n#include <iostream>\n#include <vector>\n#include <boost/numeric/ublas/matrix.hpp>\n#include \"boost/multi_array.hpp\"\nusing namespace std;\n\ntemplate <class Type> class Mymatrix\n{\nprivate:\n  size_t mWidth, mHeight, mDepth;\n  std::vector<Type> mArray;\n\npublic:\n  Mymatrix(const size_t inWidth, const size_t inHeight, const size_t inDepth) :\n   mWidth(inWidth), mHeight(inHeight), mDepth(inDepth)\n   {\n       mArray.resize(mWidth * mHeight * mDepth);\n\t   mArray = std::vector<Type>(mWidth * mHeight * mDepth,9.9);\n   }\n\n  Type Get(const size_t inX, const size_t inY, const size_t inZ) {\n     return mArray[(inX * mHeight * mDepth) + (inY * mDepth) + inZ];\n  }\n\n  void Set(const size_t inX, const size_t inY, const size_t inZ, Type val) {\n     mArray[(inX * mHeight * mDepth) + (inY * mDepth) + inZ] = val;\n  }\n\n};\n\nint main (int argc, char* argv[]) {\n\t// Method 1: pointer to pointer to pointer\n\tdouble*** M1 = new double** [3];\n\tfor (int i=0;i<3;++i){\n\t\tM1[i] = new double* [5];\n\t\tfor (int j=0;j<5;j++){\n\t\t\tM1[i][j] = new double [2];\n\t\t\tfor (int k=0;k<2;k++)\n\t\t\t\tM1[i][j][k]=i*100+j*10+k;\n\t\t}\n\t}\n\tcout<<M1[2][2][0]<<endl;\n\tfor (int i=0;i<3;++i){\n\t\tfor (int j=0;j<5;j++){\n\t\t\tdelete[] M1[i][j];\n\t\t}\n\t\tdelete[] M1[i];\n\t}\n\tdelete[] M1;\n\n\t// Method 2 - matrix notation in C\n\tdouble (*M2)[5][2];\n\tM2 = new double[3][5][2];\n\tcout<<M2[2][2][0]<<endl;\n\tdelete[] M2;\n\n\t// Method 3 - Boost :: matrix for 2-dim\n\ttypedef boost::numeric::ublas::matrix<double> Bmatrix;\n\tBmatrix M3(3,5);\n\tfor (int i=0;i<3;i++)\n\t\tfor (int j=0;j<5;j++)\n\t\t\t\tM3(i,j)=i*100+j*10;\n\tcout<<M3(2,2)<<endl;\n\n\t// Method 4 - Boost :: multi_array\n\ttypedef boost::multi_array<double, 3> Trmatrix;\n\ttypedef Trmatrix::index index;\n\tTrmatrix M4(boost::extents[3][5][2]);\n\tfor (int i=0;i<3;i++)\n\t\tfor (int j=0;j<5;j++)\n\t\t\t\tfor (int k=0;k<2;k++)\n\t\t\t\t\tM4[i][j][k]=i*100+j*10+k;\n\tcout<<M4[2][3][1]<<endl;\n\n\t// Method 5 - Self-defined class\n\tMymatrix<double> M5(3,5,2);\n\tM5.Set(2,4,1, 352.22);\n\tcout<<M5.Get(2,4,1)<<endl;\n\n\tchar tmp; cin>>tmp; return 0;\n}\n// http://www.tohtml.com/cpp/\n```"]