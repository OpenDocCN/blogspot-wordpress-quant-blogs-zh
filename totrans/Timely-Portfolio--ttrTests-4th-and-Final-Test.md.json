["```\n#let's define our silly countupdown function\n#as a sample of a custom ttr rule\nCUD <- function(x,params=50,...) {\n\t#CUD takes the n-period sum of 1 (up days) and -1 (down days)\n\ttemp <- ifelse(runSum(ifelse(ROC(x,1,type=\"discrete\") > 0,1,-1),params)>=0,1,0)\n\t#replace NA with 0 at beginning of period\n\ttemp[is.na(temp)] <- 0\n\ttemp\n}   require(ttrTests)\nrequire(quantmod)\nrequire(lattice)\nrequire(reshape2)\nrequire(PerformanceAnalytics)   #defaults functions is overridden by ggplot2 and plyr if loaded\n#and will cause problems if you want to use ttrTests concurrently   tckrs <- c(\"GSPC\",\"RUT\",\"N225\",\"GDAXI\",\"DJUBS\")   #use 1 or GSPC but adjust however you would like\ni=1\ngetSymbols(paste(\"^\",tckrs[i],sep=\"\"),from=\"1896-01-01\",to=Sys.Date())\ntest_price <- as.vector(get(tckrs[i])[,4])   #run subperiods and paramPersist to test for luck across subperiods\n#\"asks whether or not good choices of parameters\"\n#\"were robust across different time periods\"\n#chose 6 since data is from 1950 will approximate by decade\nsubper <- subperiods(x=test_price, periods = 6, ttr = CUD,\n\tstart = 20, nSteps = 30, stepSize = 10, restrict = FALSE,\n\tburn = 0, short = FALSE, condition = NULL,\n\tsilent = TRUE, TC = 0.001, loud = TRUE, alpha = 0.025,\n\tfile = \"\", benchmark = \"hold\")   #make output slightly more usable with some naming\n#believe I got this right\nnames(subper[[2]]) <- \"obs.correlation\"\n#while we are in a nasty for loop; grab some data also\nfor (j in 3:length(subper)) {\n\tnames(subper[[j]]) <- paste(c(\"excess.return\",\"z.score\",\"adj.excess.return\",\n\t\t\"Sharpe.ratio\",\"best\",\"best.repeat\",\"best.adjusted\",\n\t\tpaste(\"tested.parameters\",c(1:(NROW(subper[[j]])-7)),sep=\"\")))\n\t\t# add this if desired\t\t\".subper\",j-2, sep=\"\")\n\tifelse(j==3, excess.df <- cbind(rep(j-2,length(subper[[j]]$tested.parameters)),\n\t\tsubper[[j]]$tested.parameters,\n\t\tsubper[[j]]$excess.return),\n\t\texcess.df <- rbind(excess.df,\n\t\tcbind(rep(j-2,length(subper[[j]]$tested.parameters)),\n\t\tsubper[[j]]$tested.parameters,\n\t\tsubper[[j]]$excess.return)))\n}\nexcess.df <- as.data.frame(excess.df)\ncolnames(excess.df) <- c(\"subperiod\",\"parameter\",\"excess.ret\")   #run boxplot of excess returns by parameter\njpeg(filename=\"boxplot.jpg\",\n\tquality=100,width=6.25, height = 6.25,  units=\"in\",res=96)\nboxplot(excess.df$excess.ret~excess.df$parameter, \n\txlab=\"Parameter\", ylab=\"Excess Return\",\n\tmain=\"Boxplot of Excess Returns by Parameter\")\ndev.off()   #jpeg(filename=\"strip chart.jpg\",\n#\tquality=100,width=6.25, height = 6.25,  units=\"in\",res=96)\nstripchart(excess.df$excess.ret~excess.df$parameter, pch=19,\n\txlab=\"Parameter\", ylab=\"Excess Return\", vertical=TRUE,\n\tcol=topo.colors(NROW(subper[[j]]$tested.parameters)),\n\tmain=\"Stripchart of Excess Returns by Parameter\")\n#dev.off()     #and my favorite of all\n#\"tests if the persistence measure from subperiods()\"\n#\"is statistically significant\"\n#this takes the longest (about 28 minutes on my i7 laptop)\n#if you want to play \n#change periods to 2 or bsamples to 10 to speed time\nparpersist <- paramPersist(x=test_price, ttr = CUD, periods=6,\n\tstart = 20, nSteps = 30, stepSize = 10,\n\tbSamples=100,\n\trestrict = FALSE, burn = 0, short = FALSE, condition = NULL,\n\tsilent = TRUE, TC = 0.001, loud = TRUE, alpha = 0.025,\n\tfile = \"\")\nnames(parpersist) <- c(\"act.corr\",\"obs.corr.samples\",\"p.value\")   #jpeg(filename=\"paramPersist correlations.jpg\",\n#\tquality=100,width=6.25, height = 6.25,  units=\"in\",res=96)\nplot(parpersist$obs.corr.samples,ylab=\"Correlation\",xlab=\"Sample\",\n\tmain=\"paramPersist for CUD\")\nabline(h=parpersist$act.corr,col=\"darkslateblue\")\ntext(0,parpersist$act.corr, \"actual\", col = \"darkslateblue\", adj = c(0, -.1))\n#dev.off()   #make output slightly more usable with some naming\n#believe I got this right\nnames(snoop) <- c(\"details\",\"V1\",\"V2\",\n\t\"V3\",\"p1.for.l\",\"p2.for.c\",\"p3.for.u\")   #jpeg(filename=\"dataSnoop values.jpg\",\n\tquality=100,width=6.25, height = 6.25,  units=\"in\",res=96)\nplot(snoop$V3,\n\ttype=\"l\", col=2,\n\tmain=\"ttrTests dataSnoop V1,V2,and V3 on CUD\",\n\txlab=\"Bootstrap Sample\", ylab=\"Values\")\npoints(snoop$V2, type=\"l\", col=3)\npoints(snoop$V1, col=4)\nlegend(\"topright\",legend=c(\"V1\",\"V2\",\"V3\"),col=c(4,3,2),pch=19,lty=1)\n#dev.off()\n```"]