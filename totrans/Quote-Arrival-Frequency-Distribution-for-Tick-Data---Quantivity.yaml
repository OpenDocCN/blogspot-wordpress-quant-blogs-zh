- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: '-   <!--yml'
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '-   分类：未分类'
- en: 'date: 2024-05-18 13:55:13'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '-   date: 2024-05-18 13:55:13'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '-   -->'
- en: Quote Arrival Frequency Distribution for Tick Data | Quantivity
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '-   Quote Arrival Frequency Distribution for Tick Data | Quantivity'
- en: 来源：[https://quantivity.wordpress.com/2009/12/27/quote-arrival-frequency-distribution-for-tick-data/#0001-01-01](https://quantivity.wordpress.com/2009/12/27/quote-arrival-frequency-distribution-for-tick-data/#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '-   来源：[https://quantivity.wordpress.com/2009/12/27/quote-arrival-frequency-distribution-for-tick-data/#0001-01-01](https://quantivity.wordpress.com/2009/12/27/quote-arrival-frequency-distribution-for-tick-data/#0001-01-01)'
- en: High-frequency systems development is built upon the analysis of tick data.
    A classic example is statistically characterizing the frequency and arrival times
    of intra-day quotes, useful for building systems which exploit [market microstructure](http://en.wikipedia.org/wiki/Market_microstructure)
    effects.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '-   高频系统开发是基于成交量数据的分析。一个经典例子是统计日内报价的频率和到达时间，这对于构建利用[市场微观结构](http://en.wikipedia.org/wiki/Market_microstructure)效应的系统很有用。'
- en: 'Yet, the temporal regularity of such analysis fundamentally differs from traditional
    quantitative analysis: ticks arrive at irregularly-spaced times (even multiple
    at the same time), with time intervals ranging from zero to a few seconds (or
    even minutes). The irregular time arrival of ticks conflicts with the regularly-spaced
    assumption of classic statistical time series methods and corresponding computational
    tools.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '-   然而，此类分析的时间规律性与传统的定量分析有根本的不同：成交量以不规则的时间间隔到达（甚至在同一时间到达多个），时间间隔从零到几秒（甚至几分钟）。成交量的非规律时间到达与经典统计时间序列方法的规律时间假设以及相应的计算工具相冲突。'
- en: Recent analysis bore out this challenge.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '-   最近的研究证实了这一挑战。'
- en: 'Consider generating a [frequency distribution](http://en.wikipedia.org/wiki/Frequency_distribution)
    for quote arrival times for a single currency instrument, say EURUSD stored in
    a standard CSV file of the following format (with header line):'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '-   考虑为单一货币工具生成报价到达频率分布，例如存储在标准CSV文件中的EURUSD，以下为文件格式（带标题行）：'
- en: '`pair,date,bid,ask'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '-   `pair,date,bid,ask'
- en: EURUSD,2009-01-26 00:00:11.000,1.294500,1.294800`
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '-   EURUSD,2009-01-26 00:00:11.000,1.294500,1.294800`'
- en: Considering all such irregularly-spaced quotes for 26 Jan 2009, calculate the
    temporal frequency distribution by both hour and minute. Turns out this is a bit
    harder in R than one naïvely expects. Any readers with R expertise, suggestions
    are welcome for improving the below code (admittedly not the most beautiful).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '-   考虑到2009年1月26日所有这些不规则间隔的报价，通过小时和分钟计算时间频率分布。结果在R中比天真预期的要难得多。任何有R专业知识的读者，建议欢迎改进下面的代码（承认不是最漂亮的）。'
- en: 'Assume a data frame, named *data*, has been loaded which contains all the above
    tick data. Begin by parsing the dates assuming a non-standard format, generating
    an ordered vector of *numeric* timestamps, measured in number of seconds since
    the epoch:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '-   假设已经加载了一个名为*data*的数据框，其中包含了所有的上述成交量数据。首先，解析日期，假设一个非标准格式，生成一个按顺序的*数值*时间戳向量，测量的是自纪元以来的秒数。'
- en: '`datesNum <- as.numeric(as.POSIXct(strptime(as.character(data$date), "%Y-%m-%d
    %H:%M:%OS")))`'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '`datesNum <- as.numeric(as.POSIXct(strptime(as.character(data$date), "%Y-%m-%d
    %H:%M:%OS")))`'
- en: 'Next, truncate timestamps to be zero-based and convert to desired time unit
    (divide by 60 for minutes, 360 for hours):'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '-   接下来，将时间戳截断为零基，并转换为所需的时间单位（除以60转为分钟，360转为小时）：'
- en: '`datesNum <- datesNum - min(datesNum)'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '-   `datesNum <- datesNum - min(datesNum)'
- en: datesNum <- datesNum / 60`
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '-   `datesNum <- datesNum / 60`'
- en: 'Now comes the R magic, made possible by converting the quote arrival timestamps
    into numerics:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '-   现在迎来了R的魔法，通过将报价到达时间戳转换为数值变为可能：'
- en: '`plot(cbind(table(cut(datesNum, seq(min(datesNum), max(datesNum), by=1), right=FALSE))),
    type="l", xlab="Minutes", ylab="Quote Frequency")`'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '-   `plot(cbind(table(cut(datesNum, seq(min(datesNum), max(datesNum), by=1),
    right=FALSE))), type="l", xlab="Minutes", ylab="Quote Frequency")`'
- en: 'This expression requires a bit of unpacking to see how it fits together (for
    more detailed explanation, see [r-tutor](http://www.r-tutor.com/elementary-statistics/quantitative-data/frequency-distribution-quantitative-data)):'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '-   这个表达式需要稍微展开一下，看看它是如何组合在一起的（更多详细解释，请参见[r-tutor](http://www.r-tutor.com/elementary-statistics/quantitative-data/frequency-distribution-quantitative-data)）：'
- en: 'Range: calculate the range of timestamps, as returned by `min()` and `max()`'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   范围：计算时间戳的范围，如`min()`和`max()`返回的值'
- en: 'Subinterval partitions: partition the range into non-overlapping sub-intervals
    by defining a sequence of equal distance break points, via `seq()`'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '-   子区间划分：通过定义一个等距序列的断点，将范围划分为非重叠的子区间，使用`seq()`'
- en: 'Classification: classify each of the timestamps according to the sub-intervals,
    left closed and right open, via `cut()`'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分类：使用`cut()`函数，根据子时间间隔（左闭右开）对每个时间戳进行分类。
- en: 'Frequencies: compute frequency of timestamps in each sub-interval via `table()`'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 频率：通过`table()`函数计算每个子时间间隔内时间戳的频率。
- en: 'Column binding: bind the sub-interval time and frequency columns via `cbind()`'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列绑定：通过`cbind()`将子时间间隔和频率列绑定在一起。
- en: Given that, `plot()` generates a simple line graph whose x-axis is the sub-interval
    time unit values (*i.e.* minutes or hours) and y-axis is the frequency of quotes
    which arrived in that sub-interval of time.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到这一点，`plot()`函数生成一个简单的折线图，其x轴是子时间间隔的单位值（*即*分钟或小时），y轴是在该时间间隔内到达的报价的频率。
- en: For those conducting high-frequency analysis, R packages suited for irregular-spaced
    methods include [zoo](http://cran.r-project.org/web/packages/zoo/index.html),
    [xts](http://cran.r-project.org/web/packages/xts/index.html), [its](http://cran.r-project.org/web/packages/its/index.html),
    [tseries](http://cran.r-project.org/web/packages/tseries/index.html), and [fts](http://cran.r-project.org/web/packages/fts/index.html).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些进行高频分析的人，适合于非等间距方法的R包包括[zoo](http://cran.r-project.org/web/packages/zoo/index.html)、[xts](http://cran.r-project.org/web/packages/xts/index.html)、[its](http://cran.r-project.org/web/packages/its/index.html)、[tseries](http://cran.r-project.org/web/packages/tseries/index.html)和[fts](http://cran.r-project.org/web/packages/fts/index.html)。
