- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-18 05:13:59'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-18 05:13:59'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Magmasystems Blog: CAB, EventBroker, and Wildcards'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 'Magmasystems Blog: CAB, EventBroker, and Wildcards'
- en: 来源：[http://magmasystems.blogspot.com/2006/12/cab-eventbroker-and-wildcards.html#0001-01-01](http://magmasystems.blogspot.com/2006/12/cab-eventbroker-and-wildcards.html#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[http://magmasystems.blogspot.com/2006/12/cab-eventbroker-and-wildcards.html#0001-01-01](http://magmasystems.blogspot.com/2006/12/cab-eventbroker-and-wildcards.html#0001-01-01)
- en: I will be blogging about the CAB EventBroker soon. But, I think that I like
    mine (previously published here) better. I would like to see wildcard support
    in the EventBroker's subscription strings.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我很快就会写关于CAB EventBroker的博客。但是，我认为我更喜欢我的（之前在这里发布过）。我希望在EventBroker的订阅字符串中看到通配符支持。
- en: 'In CAB, you can define an event to be published like this:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在CAB中，您可以这样定义一个发布事件：
- en: '[EventPublication("event://Trade/Update", PublicationScope.Global)]public event
    EventHandler <instrumentupdatedeventargs>TradeUpdated;</instrumentupdatedeventargs>........public
    void TradeIsUpdated(Trade trade){ if (this.TradeUpdated != null) { this.TradeUpdated(this,
    new InstrumentUpdatedEventArgs(trade)); }}'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[事件发布("event://Trade/Update", 发布范围.全局)]public 事件处理<instrumentupdatedeventargs>TradeUpdated;</instrumentupdatedeventargs>........public
    void TradeIsUpdated(Trade trade){ if (this.TradeUpdated != null) { this.TradeUpdated(this,
    new InstrumentUpdatedEventArgs(trade)); }}'
- en: 'In some other module, you can subscribe to an event like this:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在其他模块中，您可以这样订阅一个事件：
- en: '[EventSubscription("event://Trade/Update")public void OnTradeUpdated(object
    sender, InstrumentUpdatedEventArgs e){}'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[事件订阅("event://Trade/Update")public void OnTradeUpdated(object sender, InstrumentUpdatedEventArgs
    e){}'
- en: 'I need wildcards. I might like to have a function that gets called when any
    operation happens to a Trade object. So, I would like to see subscription topics
    like these:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我需要通配符。我可能希望有一个函数，当对Trade对象执行任何操作时调用。因此，我希望看到这样的订阅主题：
- en: '"event://Trade/*"'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '"event://Trade/*"'
- en: or
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 或者
- en: '"event://Trade'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '"event://Trade'
- en: 'Both of these would cover the case when any operation happens to a trade. The
    subscription string would catch the following topic:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个都会涵盖对交易对象执行任何操作的情况。订阅字符串将捕获以下主题：
- en: event://Trade/Updatedevent://Trade/Deletedevent://Trade/Created
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: event://Trade/Updatedevent://Trade/Deletedevent://Trade/Created
- en: I need Tibco-lite as my internal message bus.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我需要Tibco-lite作为我的内部消息总线。
- en: ©2006 Marc Adler - All Rights Reserved
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: ©2006 Marc Adler - 版权所有
