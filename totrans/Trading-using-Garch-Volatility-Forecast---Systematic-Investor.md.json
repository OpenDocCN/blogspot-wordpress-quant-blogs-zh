["```\n\n###############################################################################\n# Load Systematic Investor Toolbox (SIT)\n###############################################################################\ncon = gzcon(url('http://www.systematicportfolio.com/sit.gz', 'rb'))\n    source(con)\nclose(con)\n\n\t#*****************************************************************\n\t# Load historical data\n\t#****************************************************************** \n\tload.packages('quantmod')\t\n\ttickers = 'SPY'\n\n\tdata <- new.env()\n\tgetSymbols(tickers, src = 'yahoo', from = '1970-01-01', env = data, auto.assign = T)\n\t\tfor(i in ls(data)) data[[i]] = adjustOHLC(data[[i]], use.Adjusted=T)\t\t\n\tbt.prep(data, align='remove.na', dates='2000::2012')\n\n\t#*****************************************************************\n\t# Code Strategies\n\t#****************************************************************** \n\tprices = data$prices  \n\tn = len(tickers)  \n\tnperiods = nrow(prices)\n\n\t# Buy & Hold\t\n\tdata$weight[] = 1\n\tbuy.hold = bt.run(data)\t\n\n\t# Mean-Reversion(MR) strategy - RSI2\n\trsi2 = bt.apply.matrix(prices, RSI, 2)\n\tdata$weight[] = NA\n\t\tdata$weight[] = iif(rsi2 < 50, 1, -1)\t\n\t\tcapital = 100000\n\t\tdata$weight[] = (capital / prices) * bt.exrem(data$weight)\n\tmr = bt.run(data, type='share', capital=capital, trade.summary=T)\n\n\t# Trend Following(TF) strategy - MA 50/200 crossover\n\tsma.short = bt.apply.matrix(prices, SMA, 50)\n\tsma.long = bt.apply.matrix(prices, SMA, 200)\n\tdata$weight[] = NA\n\t\tdata$weight[] = iif(sma.short > sma.long, 1, -1)\n\t\tcapital = 100000\n\t\tdata$weight[] = (capital / prices) * bt.exrem(data$weight)\n\ttf = bt.run(data, type='share', capital=capital, trade.summary=T)\n\n\t#*****************************************************************\n\t# Create Report\n\t#****************************************************************** \n\tplotbt.custom.report.part1(mr, tf, buy.hold)\n\n```", "```\n\n\t#*****************************************************************\n\t# Regime Switching based on historical market volatility\n\t# Classify current volatility by percentile using a 252 day look-back period\n\t# percentrank(MA(percentrank(Stdev( diff(log(close)) ,21),252),21),250)\n\t#****************************************************************** \n\tret.log = bt.apply.matrix(prices, ROC, type='continuous')\n\thist.vol = bt.apply.matrix(ret.log, runSD, n = 21)\n\tvol.rank = percent.rank(SMA(percent.rank(hist.vol, 252), 21), 250)\n\n\t# Regime Switching Historical\n\tdata$weight[] = NA\n\t\tdata$weight[] = iif(vol.rank > 0.5, \n\t\t\t\t\tiif(rsi2 < 50, 1, -1),\n\t\t\t\t\tiif(sma.short > sma.long, 1, -1)\n\t\t\t\t)\n\t\tcapital = 100000\n\t\tdata$weight[] = (capital / prices) * bt.exrem(data$weight)\n\tregime.switching = bt.run(data, type='share', capital=capital, trade.summary=T)\n\n\t#*****************************************************************\n\t# Create Report\n\t#****************************************************************** \n\tplotbt.custom.report.part1(regime.switching, mr, tf, buy.hold)\n\n```", "```\n\n\t#*****************************************************************\n\t# Benchmarking Garch algorithms \n\t#****************************************************************** \n\tload.packages('tseries,fGarch,rbenchmark')\t\n\ttemp = garchSim(n=252)\n\n\ttest1 <- function() {\n\t\tfit1=garch(temp, order = c(1, 1), control = garch.control(trace = F))\n\t}\n\ttest2 <- function() {\n\t\tfit2=garchFit(~ garch(1,1), data = temp, include.mean=FALSE, trace=F)\n\t}\n\n\tbenchmark(\n\t\ttest1(),\n\t\ttest2(),\n\t\tcolumns=spl('test,replications,elapsed,relative'),\n\t\torder='relative',\n\t\treplications=100\n\t)\n\n```", "```\n\n\t#*****************************************************************\n\t# Forecast Volatility using Garch\t\n\t# garch from tseries is fast, but does not consistently converge\n\t# garchFit from fGarch is slower, but converges consistently\n\t#****************************************************************** \n\tload.packages('tseries,fGarch')\t\n\n\t# Sigma[t]^2 = w + a* Sigma[t-1]^2 + b*r[t-1]^2\n\tgarch.predict.one.day <- function(fit, r.last) \n\t{\n\t\th.last = tail( fitted(fit)[,1] ,1)\t\t\t\n\t\tsqrt(sum( coef(fit) * c(1,  r.last^2, h.last^2) ))\t\n\t}\n\n\t# same as predict( fit, n.ahead=1, doplot=F)[3]\n\tgarchFit.predict.one.day <- function(fit, r.last) \n\t{\n\t\th.last = tail(sqrt(fit@h.t), 1)\n\t\tsqrt(sum( fit@fit$matcoef[,1] * c(1,  r.last^2, h.last^2) ))\n\t}\n\n\tgarch.vol = NA * hist.vol\n\tfor( i in (252+1):nperiods ) {\n\t\ttemp = as.vector(ret.log[ (i-252+1):i, ])\n\t\tr.last =  tail( temp, 1 )\n\n\t\tfit = tryCatch( garch(temp, order = c(1, 1), control = garch.control(trace = F)),\n\t    \t\t\t\terror=function( err ) FALSE, warning=function( warn ) FALSE )\n\n\t\tif( !is.logical( fit ) ) {\n\t\t\tif( i == 252+1 ) garch.vol[1:252] = fitted(fit)[,1]\n\t\t\tgarch.vol[i] = garch.predict.one.day(fit, r.last)\n\t\t} else {\n\t\t\tfit = tryCatch( garchFit(~ garch(1,1), data = temp, include.mean=FALSE, trace=F),\n\t    \t\t\t\terror=function( err ) FALSE, warning=function( warn ) FALSE )\n\n\t\t\tif( !is.logical( fit ) ) {\n\t\t\t\tif( i == 252+1 ) garch.vol[1:252] = sqrt(fit@h.t)\n\t\t\t\tgarch.vol[i] = garchFit.predict.one.day(fit, r.last)\n\t\t\t} \n\t\t}\t\t\t\n\t\tif( i %% 100 == 0) cat(i, '\\n')\n\t}\n\tgarch.vol = ifna.prev(garch.vol)\n\n```", "```\n\n\t#*****************************************************************\n\t# Regime Switching using Garch\n\t#****************************************************************** \t\t\n\tvol.rank = percent.rank(SMA(percent.rank(garch.vol, 252), 21), 250)\n\n\t# Regime Switching Garch\n\tdata$weight[] = NA\n\t\tdata$weight[] = iif(vol.rank > 0.5, \n\t\t\t\t\tiif(rsi2 < 50, 1, -1),\n\t\t\t\t\tiif(sma.short > sma.long, 1, -1)\n\t\t\t\t)\n\t\tcapital = 100000\n\t\tdata$weight[] = (capital / prices) * bt.exrem(data$weight)\n\tregime.switching.garch = bt.run(data, type='share', capital=capital, trade.summary=T)\t\n\n\t#*****************************************************************\n\t# Create Report\n\t#****************************************************************** \n\tplotbt.custom.report.part1(regime.switching.garch, regime.switching, buy.hold)\n\n```"]