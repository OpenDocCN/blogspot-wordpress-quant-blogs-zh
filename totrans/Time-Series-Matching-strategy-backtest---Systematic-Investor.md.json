["```\n\n###############################################################################\n# Load Systematic Investor Toolbox (SIT)\n###############################################################################\ncon = gzcon(url('http://www.systematicportfolio.com/sit.gz', 'rb'))\n    source(con)\nclose(con)\n\n\t#*****************************************************************\n\t# Load historical data\n\t#****************************************************************** \n\tload.packages('quantmod')\t\n\ttickers = spl('SPY,^GSPC')\n\n\tdata <- new.env()\n\tgetSymbols(tickers, src = 'yahoo', from = '1950-01-01', env = data, auto.assign = T)\n\tbt.prep(data, align='keep.all')\n\n\t# combine SPY and ^GSPC\n\tscale = as.double( data$prices$SPY['1993:01:29'] / data$prices$GSPC['1993:01:29'] )\n\thist = c(scale * data$prices$GSPC['::1993:01:28'], data$prices$SPY['1993:01:29::'])\n\n\t#*****************************************************************\n\t# Backtest setup:\n\t# Starting January 1994, each month search for the 10 best matches \n\t# similar to the last 90 days in the last 10 years of history data\n\t#\n\t# Invest next month if distance weighted prediction is positive\n\t# otherwise stay in cash\n\t#****************************************************************** \n\tmonth.ends = endpoints(hist, 'months')\n\t\tmonth.ends = month.ends[month.ends > 0]\t\t\n\n\tstart.index = which(date.year(index(hist[month.ends])) == 1994)[1]\n\tweight = hist * NA\n\n\tfor( i in start.index : len(month.ends) ) {\n\t\tobj = bt.matching.find(hist[1:month.ends[i],], normalize.fn = normalize.first)\n\t\tmatches = bt.matching.overlay(obj)\n\n\t\t# compute prediction for next month\n\t\tn.match = len(obj$min.index)\n\t\tn.query = len(obj$query)\t\t\t\t\n\t\tmonth.ahead.forecast = matches[,(2*n.query+22)]/ matches[,2*n.query] - 1\n\n\t\t# Distance weighted average\n\t\ttemp = round(100*(obj$dist / obj$dist[1] - 1))\t\t\n\t\t\tn.weight = max(temp) + 1\n\t\t\tweights = (n.weight - temp) / ( n.weight * (n.weight+1) / 2)\n\t\tweights = weights / sum(weights)\n\t\t\t# barplot(weights)\n\t\tavg.direction = weighted.mean(month.ahead.forecast[1:n.match], w=weights)\n\n\t\t# Logic\n\t\tweight[month.ends[i]] = 0\n\t\tif( avg.direction > 0 ) weight[month.ends[i]] = 1\n\t}\n\n```", "```\n\n\t#*****************************************************************\n\t# Code Strategies\n\t#****************************************************************** \n\ttickers = 'SPY'\n\n\tdata <- new.env()\n\tgetSymbols(tickers, src = 'yahoo', from = '1950-01-01', env = data, auto.assign = T)\n\tbt.prep(data, align='keep.all')\n\n\tprices = data$prices  \n\n\t# Buy & Hold\t\n\tdata$weight[] = 1\n\tbuy.hold = bt.run(data)\t\n\n\t# Strategy\n\tdata$weight[] = NA\n\t\tdata$weight[] = weight['1993:01:29::']\n\t\tcapital = 100000\n\t\tdata$weight[] = (capital / prices) * bt.exrem(data$weight)\n\ttest = bt.run(data, type='share', capital=capital, trade.summary=T)\n\n\t#*****************************************************************\n\t# Create Report\n\t#****************************************************************** \n\tplotbt.custom.report.part1(test, buy.hold, trade.summary=T)\n\n```"]