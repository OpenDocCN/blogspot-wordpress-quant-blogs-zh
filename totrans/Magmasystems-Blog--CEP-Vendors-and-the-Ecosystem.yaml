- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-18 05:05:05'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: 'Magmasystems Blog: CEP Vendors and the Ecosystem'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[http://magmasystems.blogspot.com/2007/12/cep-vendors-and-ecosystem.html#0001-01-01](http://magmasystems.blogspot.com/2007/12/cep-vendors-and-ecosystem.html#0001-01-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: While my wife and son cavort around Australia and New Zealand for the next few
    weeks (I get to stay home and watch my daughter, who only has one week off from
    high school), I hope to be able to catch up on some of the blog posts that I owe
    people.
  prefs: []
  type: TYPE_NORMAL
- en: One of the things that is most important for me in choosing a
  prefs: []
  type: TYPE_NORMAL
- en: CEP
  prefs: []
  type: TYPE_NORMAL
- en: vendor is the ecosystem that surrounds the
  prefs: []
  type: TYPE_NORMAL
- en: CEP
  prefs: []
  type: TYPE_NORMAL
- en: engine. In a company such as mine, we need to interface with many different
    legacy systems. These legacy systems can hold crucial data, such as historical
    orders, customer trades, market data, volatility curves, customer and security
    reference data, etc. This data may reside statically in a database, be published
    out as flow over some kind of
  prefs: []
  type: TYPE_NORMAL
- en: middleware
  prefs: []
  type: TYPE_NORMAL
- en: ', or interfaced with an object cache or data fabric. We have every color and
    shape of database technology in our firm, whether it be more traditional relational
    databases like Oracle,'
  prefs: []
  type: TYPE_NORMAL
- en: SQL
  prefs: []
  type: TYPE_NORMAL
- en: Server, and
  prefs: []
  type: TYPE_NORMAL
- en: Sybase
  prefs: []
  type: TYPE_NORMAL
- en: ', or newer tick databases like'
  prefs: []
  type: TYPE_NORMAL
- en: KDB
  prefs: []
  type: TYPE_NORMAL
- en: +.
  prefs: []
  type: TYPE_NORMAL
- en: From the input and output points of the
  prefs: []
  type: TYPE_NORMAL
- en: CEP
  prefs: []
  type: TYPE_NORMAL
- en: engine, we need seamless integration with all sorts of systems. Most
  prefs: []
  type: TYPE_NORMAL
- en: CEP
  prefs: []
  type: TYPE_NORMAL
- en: engines have the concept of in-process and out-of-process adapters. In-process
    adapters are more
  prefs: []
  type: TYPE_NORMAL
- en: performant
  prefs: []
  type: TYPE_NORMAL
- en: that out-of-process adapters. We would love to see as many in-process adapters
    delivered out-of-the-box by our
  prefs: []
  type: TYPE_NORMAL
- en: CEP
  prefs: []
  type: TYPE_NORMAL
- en: vendor. We do not want to spend time writing our own in-process adapters.
  prefs: []
  type: TYPE_NORMAL
- en: So far, none of the
  prefs: []
  type: TYPE_NORMAL
- en: CEP
  prefs: []
  type: TYPE_NORMAL
- en: vendors support
  prefs: []
  type: TYPE_NORMAL
- en: KDB
  prefs: []
  type: TYPE_NORMAL
- en: + as an out-of-the-box solution. In fact, many of the
  prefs: []
  type: TYPE_NORMAL
- en: CEP
  prefs: []
  type: TYPE_NORMAL
- en: vendors did not even know what
  prefs: []
  type: TYPE_NORMAL
- en: KDB
  prefs: []
  type: TYPE_NORMAL
- en: + was. (Is the same true for
  prefs: []
  type: TYPE_NORMAL
- en: Vhayu
  prefs: []
  type: TYPE_NORMAL
- en: as well?) My feeling is that, if a
  prefs: []
  type: TYPE_NORMAL
- en: CEP
  prefs: []
  type: TYPE_NORMAL
- en: vendor is going to be successful on Wall Street, then they must support
  prefs: []
  type: TYPE_NORMAL
- en: KDB
  prefs: []
  type: TYPE_NORMAL
- en: +. Is it even feasible for the
  prefs: []
  type: TYPE_NORMAL
- en: CEP
  prefs: []
  type: TYPE_NORMAL
- en: vendors to provide an abstraction layer around
  prefs: []
  type: TYPE_NORMAL
- en: KDB
  prefs: []
  type: TYPE_NORMAL
- en: +, and let the
  prefs: []
  type: TYPE_NORMAL
- en: CEP
  prefs: []
  type: TYPE_NORMAL
- en: developer write all queries in
  prefs: []
  type: TYPE_NORMAL
- en: SQL
  prefs: []
  type: TYPE_NORMAL
- en: instead of writing them in K or Q?
  prefs: []
  type: TYPE_NORMAL
- en: One of the most important things that I would like to see from the
  prefs: []
  type: TYPE_NORMAL
- en: CEP
  prefs: []
  type: TYPE_NORMAL
- en: vendors are tools to enable the analysis of all of the data that pass through
    the
  prefs: []
  type: TYPE_NORMAL
- en: CEP
  prefs: []
  type: TYPE_NORMAL
- en: engine. Many groups might not have the budget to hire a specialized mathematician
    or
  prefs: []
  type: TYPE_NORMAL
- en: quant
  prefs: []
  type: TYPE_NORMAL
- en: to perform time-series analysis on the data. Learning specialized languages
    like R or
  prefs: []
  type: TYPE_NORMAL
- en: SPlus
  prefs: []
  type: TYPE_NORMAL
- en: might not be possible for smaller groups that do not have a mathematical bent.
    The same goes for packages like
  prefs: []
  type: TYPE_NORMAL
- en: Mathematica
  prefs: []
  type: TYPE_NORMAL
- en: and
  prefs: []
  type: TYPE_NORMAL
- en: Matlab
  prefs: []
  type: TYPE_NORMAL
- en: .
  prefs: []
  type: TYPE_NORMAL
- en: Would it be worth it for the
  prefs: []
  type: TYPE_NORMAL
- en: CEP
  prefs: []
  type: TYPE_NORMAL
- en: vendors to come out with a
  prefs: []
  type: TYPE_NORMAL
- en: pre
  prefs: []
  type: TYPE_NORMAL
- en: -packaged "stack" for various financial verticals that incorporates analysis
    tools? Or, would writing a detailed cookbook be better? And, where does the responsibility
    of the
  prefs: []
  type: TYPE_NORMAL
- en: CEP
  prefs: []
  type: TYPE_NORMAL
- en: vendor end? Should we expect the
  prefs: []
  type: TYPE_NORMAL
- en: CEP
  prefs: []
  type: TYPE_NORMAL
- en: vendor to provide a one-stop shop for all of our needs, or should be just expect
    the
  prefs: []
  type: TYPE_NORMAL
- en: CEP
  prefs: []
  type: TYPE_NORMAL
- en: vendors to provide strong integration points?
  prefs: []
  type: TYPE_NORMAL
- en: Better yet, does this open up an opportunity for a third party company to provide
    this service? Like the many laptop vendors who buy a motherboard (the
  prefs: []
  type: TYPE_NORMAL
- en: CEP
  prefs: []
  type: TYPE_NORMAL
- en: engine), and slap together a disk drive, CD drive, screen and keyboard to make
    a complete system?
  prefs: []
  type: TYPE_NORMAL
- en: In examining the various
  prefs: []
  type: TYPE_NORMAL
- en: CEP
  prefs: []
  type: TYPE_NORMAL
- en: vendors, I have come to the conclusion that the offerings from
  prefs: []
  type: TYPE_NORMAL
- en: Streambase
  prefs: []
  type: TYPE_NORMAL
- en: ', Coral8 and'
  prefs: []
  type: TYPE_NORMAL
- en: Aleri
  prefs: []
  type: TYPE_NORMAL
- en: are very similar. Given another year, I might expect each vendor to fill in
    the gaps with regards to their competitors' offerings, and at that point, we might
    have practically
  prefs: []
  type: TYPE_NORMAL
- en: identical
  prefs: []
  type: TYPE_NORMAL
- en: technologies from 3 different vendors.
  prefs: []
  type: TYPE_NORMAL
- en: '***In my opinion, the real win for these CEP vendors will come in the analysis
    tools they provide.***'
  prefs: []
  type: TYPE_NORMAL
- en: ©2007 Marc Adler - All Rights Reserved
  prefs: []
  type: TYPE_NORMAL
