- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-17 23:30:30'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-17 23:30:30'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Heston Model Calibration using Adjoint Algorithmic Differentiation – HPC-QuantLib
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用Adjoint Algorithmic Differentiation的Heston模型校准 - HPC-QuantLib
- en: 来源：[https://hpcquantlib.wordpress.com/2015/04/01/heston-model-calibration-using-adjoint-algorithmic-differentiation/#0001-01-01](https://hpcquantlib.wordpress.com/2015/04/01/heston-model-calibration-using-adjoint-algorithmic-differentiation/#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://hpcquantlib.wordpress.com/2015/04/01/heston-model-calibration-using-adjoint-algorithmic-differentiation/#0001-01-01](https://hpcquantlib.wordpress.com/2015/04/01/heston-model-calibration-using-adjoint-algorithmic-differentiation/#0001-01-01)
- en: Algorithmic Differentiation becomes more and more popular in financial engineering
    since the method was first brought to the attention of a wider audience in [1].
    Key factors for the popularity are
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 自从[1]首次将此方法带到更广泛的受众面前以来，算法计算在金融工程领域变得越来越流行。其受欢迎的关键因素包括：
- en: 'Adjoint Algorithmic Differentiation (AAD): computational cost to calculate
    all first order partial derivatives of a function (or a computer program) with
    this method is loosely speaking three to six times larger than the cost of evaluating
    the function itself.  If the function has a large number of first order partial
    derivatives then this method clearly overtakes the finite difference method, for
    which the computational cost is proportional to the number of partial derivatives.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Adjoint Algorithmic Differentiation (AAD)：计算函数（或计算机程序）的所有一阶偏导数的计算成本大致是计算函数本身的三到六倍。
    如果函数有大量一阶偏导数，这种方法显然比有限差分法更有效，有限差分法的计算成本与偏导数的数量成正比。
- en: Easy to use C++ libraries, among others e.g. [CppAD](http://www.coin-or.org/CppAD/)
    or [ADOL-C](http://www.coin-or.org/projects/ADOL-C.xml)
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简单易用的C++库，其中包括[CppAD](http://www.coin-or.org/CppAD/) 或 [ADOL-C](http://www.coin-or.org/projects/ADOL-C.xml)
    等等。
- en: 'Accuracy: The partial derivatives are the direct result of a function evaluation
    and do not depend on an arbitrary bumping parameter.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 准确度：偏导数直接是函数评估的结果，不依赖于任意扰动参数。
- en: Adjoint Algorithmic Differentiation was first mentioned in conjunction with
    QuantLib in Sebastian and Jan’s talk at the 2013 User Group Meeting [2]. The topic
    has gain further momentum with Peter’s initial blog on [Adjoint Greeks](https://quantlib.wordpress.com/2014/12/20/adjoint-greeks/%20)
    and with Alexander’s [announcement](http://permalink.gmane.org/gmane.comp.finance.quantlib.devel/5438)
    that [CompatibL](http://compatibl.com) is working on an AAD port of QuantLib.
    Alexander will give a [talk](http://compatibl.com/research/events/global-derivatives-2015/)
    at this years Global Derivatives Conference on the techniques involved to port
    QuantLib.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Adjoint Algorithmic Differentiation首次在2013年用户组会议上与QuantLib一起被提及。这个话题随着Peter在[Adjoint
    Greeks](https://quantlib.wordpress.com/2014/12/20/adjoint-greeks/%20)的博客和Alexander的[通告](http://permalink.gmane.org/gmane.comp.finance.quantlib.devel/5438)以及[CompatibL](http://compatibl.com)对QuantLib
    AAD的移植工作而进一步获得推动。Alexander将在今年的全球衍生品会议上 [分享](http://compatibl.com/research/events/global-derivatives-2015/)
    移植QuantLib所涉及的技术
- en: Almost all efficient local optimisation algorithms used for model calibration
    like the Levenberg-Marquardt algorithm are based on gradient methods and therefore
    need to calculate the Jacobian matrix of the target function *Z*. The target function
    for the Heston model calibration is defined by the goodness of fit measure
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎所有用于模型校准的高效局部优化算法，比如Levenberg-Marquardt算法，都是基于梯度方法的，因此需要计算目标函数*Z*的Jacobian矩阵。Heston模型校准的目标函数由拟合度量定义
- en: '![\displaystyle \zeta = \min_\Theta \|Z\|^2 = \min_\Theta \sum_{i=1}^N Z_i^2
    = \min_\Theta \sum_{i=1}^N \left( \sigma_i^{model}(K_i, T_i) - \sigma_i^{market}(K_i,
    T_i, \Theta) \right)^2](img/4ffca1c67b307890148bc222542f7a42.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![\displaystyle \zeta = \min_\Theta \|Z\|^2 = \min_\Theta \sum_{i=1}^N Z_i^2
    = \min_\Theta \sum_{i=1}^N \left( \sigma_i^{model}(K_i, T_i) - \sigma_i^{market}(K_i,
    T_i, \Theta) \right)^2](img/4ffca1c67b307890148bc222542f7a42.png)'
- en: for the model parameters
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 对于模型参数
- en: '![\Theta = \{ x_1, .., x_5\} = \{ \nu_0, \kappa, \theta, \sigma, \rho\}](img/c5a9faa10c87e2ab4984a925fba21379.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![\Theta = \{ x_1, .., x_5\} = \{ \nu_0, \kappa, \theta, \sigma, \rho\}](img/c5a9faa10c87e2ab4984a925fba21379.png)'
- en: 'The model prices of the calibration options are evaluated using Gauss-Laguerre
    integration of the characteristic functions ![\phi_j(k) (j=1,2)](img/d2c8aab5d8b1150606d147d233b3cd89.png):'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 模型校准期权的模型价格是使用拉盖尔-高斯积分的特征函数 ![\phi_j(k) (j=1,2)](img/d2c8aab5d8b1150606d147d233b3cd89.png)
    来进行评估：
- en: '![\begin{array}{rcl} \displaystyle \Pi_j &=& \displaystyle \frac{1}{2} + \frac{1}{\pi}
    \int_0^\infty\Re\left[\frac{\phi_j(u)\mathrm{e}^{-iu \ln K}}{iu}\right]\mathrm{d}u
    \\[0.9em] \nonumber \displaystyle P_j(\varphi) &=& \displaystyle \frac{1-\varphi}{2}
    + \varphi \Pi_j \\[0.9em] \nonumber \displaystyle \mathrm{NPV} &=& \varphi\left[\mathrm{e}^{-qT}SP_1(\varphi)
    - \mathrm{e}^{-rT}KP_2(\varphi)\right] \end{array} ](img/8793ffda7fcbd7f2d51074b449cdcc64.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: 可以以类似的方式进行移植，并且AnalyticHestonADEngine::doCalculation方法现在变为
- en: with the binary variable ![\varphi=+1](img/3bde729a88eccd0efa43a97ed0245d13.png)
    for a call and ![\varphi=-1](img/ee084af747521ea6288cf1c20d765847.png) for a put.
    The first step in order to use AAD for the model calibration is an implementation
    of the Gauss-Laquerre integration based on the CppAD library. The only change
    needed is to replace the data type Real by CppAD::AD<Real> in
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 将Real数据类型替换为CppAD::AD<Real>
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Using this AAD version of the Gauss-Laguerre integration the method
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 使用高斯-拉盖尔积分的AAD版本的方法
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: can be ported in a similar manner and the AnalyticHestonADEngine::doCalculation
    method now reads
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: "具有二进制变量![\a\\varphi=+1](img/3bde729a88eccd0efa43a97ed0245d13.png)，对于看涨期权和![\a\
    \\varphi=-1](img/ee084af747521ea6288cf1c20d765847.png)看跌期权。为了使用AAD进行模型校准的第一步是基于CppAD库实现基于Gauss-Laquerre积分的方法。唯一需要更改的是在"
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: All first order Greeks for the calibration instruments can now be calculated
    using AAD. The Jacobian of the target function *Z* w.r.t. the first order Greeks
    is given by
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在可以使用AAD计算校准仪器的所有一阶希腊字母。目标函数*Z*相对于一阶希腊字母的Jacobi矩阵如下
- en: '![\begin{array}{rcl} \displaystyle\frac{\partial Z_i}{\partial x_j} &=& \displaystyle
    \frac{\partial \sigma_i^{model}(\Theta)}{\partial x_j} = \displaystyle \frac{1}{\frac{\partial
    NPV_i}{\partial \sigma_i}}\frac{\partial NPV_i}{\partial x_j} \\[0.9em] \nonumber
    &=& \displaystyle \frac{1}{\nu_{BS}}\frac{\partial NPV_i}{\partial x_j} \end{array}](img/fb96909fc18e9f123b4767200768a46c.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: "![\a\\begin{array}{rcl} \\displaystyle\\frac{\\partial Z_i}{\\partial x_j}\
    \ &=& \\displaystyle \\frac{\\partial \\sigma_i^{模型}(\\Theta)}{\\partial x_j}\
    \ = \\displaystyle \\frac{1}{\\frac{\\partial NPV_i}{\\partial \\sigma_i}}\\frac{\\\
    partial NPV_i}{\\partial x_j} \\\\[0.9em] \\nonumber &=& \\displaystyle \\frac{1}{\\\
    nu_{BS}}\\frac{\\partial NPV_i}{\\partial x_j} \\end{array}](img/fb96909fc18e9f123b4767200768a46c.png)"
- en: The advantage of using AAD for the Heston model is not calculation speed but
    precision. In fact the AAD version of the Heston model calibration is slower than
    the finite difference based method but the AAD method does not need an arbitrary,
    fine-tuned bumping parameter or any higher order finite difference schemes to
    come up with high precision first order derivatives. The diagram below shows the
    relative difference between the AAD value and several finite difference approximations
    for ![\frac{\partial NPV}{\partial \nu_0}](img/1a50cf0866bc258e4f33876cde97011f.png)
    of an ATM option with two years to maturity and
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 使用AAD对Heston模型的优势不在于计算速度，而在于精度。事实上，Heston模型校准的AAD版本比有限差分方法慢，但AAD方法不需要任意的、精密调整的颠簸参数或任何高阶有限差分方案来得到高精度的一阶导数。下图显示了AAD值与数个有限差分近似![\frac{\partial
    NPV}{\partial \nu_0}](img/1a50cf0866bc258e4f33876cde97011f.png)之间的相对差异，对于到期两年的ATM期权
- en: '![\nu_0=0.1, \kappa=1.0, \theta=0.1, \sigma=0.5, \rho=-0.75](img/1ee1235856966731e68f38edaeef281f.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: "![\aν₀=0.1, κ=1.0, θ=0.1, σ=0.5, ρ=-0.75](img/1ee1235856966731e68f38edaeef281f.png)"
- en: Only the six point central finite difference scheme with optimal bumping size
    gives the AAD value within/close to machine precision. The two point forward scheme,
    which is used by default in the MINPACK implementation of the Levenberg-Marquardt
    algorithm, reproduces only the first eight digits. A more detailed analysis for
    the forward scheme can be found in [3] or [4]. Especially the latter paper calculates
    the values for the optimal choice of the bumping size for the different schemes.
    Please find the source code for the AAD pricing engine [here](http://hpc-quantlib.de/src/hestonad.zip).[![plot](img/4af3051d2b5ca41aaeeeac184f4b6d57.png)](https://hpcquantlib.wordpress.com/wp-content/uploads/2015/03/plot2.png)
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 只有六点中心有限差分方案具有最佳振幅大小，可以获得在机器精度内/接近机器精度的AAD值。MINPACK实现的Levenberg-Marquardt算法默认使用的两点前向方案只能重现前八位数字。前向方案的更详细分析可在[3]或[4]找到。特别是后者的论文计算出了不同方案的最佳振幅大小的值。请在这里找到AAD定价引擎的源码（http://hpc-quantlib.de/src/hestonad.zip）[![plot](img/4af3051d2b5ca41aaeeeac184f4b6d57.png)](https://hpcquantlib.wordpress.com/wp-content/uploads/2015/03/plot2.png)
- en: The rate of convergence can be improved by using the [Richardson extrapolation](https://hpcquantlib.wordpress.com/2012/06/10/richardson-extrapolation-for-american-options/).
    For the diagram below the same analysis was repeated including a Richardson extrapolation
    step.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用[理查德逊外推](https://hpcquantlib.wordpress.com/2012/06/10/richardson-extrapolation-for-american-options)可以提高收敛速度。在下面的图表中，相同的分析被重复，包括理查德逊外推步骤。
- en: '[![plotRE](img/65a15159abd83fddeb7ec29f7915027c.png)](https://hpcquantlib.wordpress.com/wp-content/uploads/2015/04/plotre.png)'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[![plotRE](img/65a15159abd83fddeb7ec29f7915027c.png)](https://hpcquantlib.wordpress.com/wp-content/uploads/2015/04/plotre.png)'
- en: '[1] Giles, M. and Glasserman, P., (2006) [Smoking adjoints: fast Monte Carlo
    Greeks.](http://people.maths.ox.ac.uk/gilesm/files/risk_gg06.pdf) Risk, 19:88–92\.
    1'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] Giles, M. and Glasserman, P., (2006) [烟雾伴随: 快速蒙特卡洛希腊](http://people.maths.ox.ac.uk/gilesm/files/risk_gg06.pdf)
    风险, 19:88–92\. 1'
- en: '[2] Schlenkrich, S. and Riehme J., (2013) [Design Patterns for Algorithmic
    Differentiation](http://quantlib.org/slides/qlws13/schlenkrich.pdf)'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] Schlenkrich, S. and Riehme J., (2013) [用于算法微分的设计模式](http://quantlib.org/slides/qlws13/schlenkrich.pdf)'
- en: '[3] Kopecky, K. (2007) [Numerical Differentiation](http://www.karenkopecky.net/Teaching/eco613614/Notes_NumericalDifferentiation.pdf),
    Lecture Notes'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[3] Kopecky, K. (2007) [数值微分](http://www.karenkopecky.net/Teaching/eco613614/Notes_NumericalDifferentiation.pdf)，讲座笔记'
- en: '[4] [Numerical Differentiation in Integration](http://www.uio.no/studier/emner/matnat/math/MAT-INF1100/h08/kompendiet/diffint.pdf),
    Lecture Notes'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[4] [积分中的数值微分](http://www.uio.no/studier/emner/matnat/math/MAT-INF1100/h08/kompendiet/diffint.pdf)，讲座笔记'
