- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-18 05:54:33'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024年05月18日 05:54:33
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: WPF BDD – Options? | Tales from a Trading Desk
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: WPF BDD – 选项？ | 一个交易台的故事
- en: 来源：[https://mdavey.wordpress.com/2014/02/05/wpf-bdd-options/#0001-01-01](https://mdavey.wordpress.com/2014/02/05/wpf-bdd-options/#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://mdavey.wordpress.com/2014/02/05/wpf-bdd-options/#0001-01-01](https://mdavey.wordpress.com/2014/02/05/wpf-bdd-options/#0001-01-01)
- en: WPF BDD – Options?
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: WPF BDD – 选项？
- en: I’m back in WPF land for a bit of a code kick around – another aeroplane coding
    challenge.  Thus, since its the usual spike project, I thought I might as well
    update to Visual Studio [2013](http://www.visualstudio.com/downloads/download-visual-studio-vs). 
    Given I’ve for Scala/Java on the server side of my spike with the usual cukes
    behaviour testing, I’m at the junction of deciding what [BDD](http://www.natontesting.com/2011/08/27/step-by-step-example-of-bdding-a-wpf-app-with-cucumber-rspec-ironruby-and-bewildr/)
    framework to use in WPF land.  Nat’s somewhat old article on BDD, “Step-by-step
    example of BDD’ing a WPF app with Cucumber, RSpec, IronRuby and Bewildr” provides
    one option.  Other old BDD options include [Aubergine](http://www.codeproject.com/Articles/43632/Getting-started-with-BDD-Behavior-Driven-Developme)
    and [NSpec](http://nspec.org/).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我又回到了WPF的世界，做一些代码上的探讨 - 又是一次飞机上的编程挑战。因此，由于这是一项通常的探索项目，我想我可能会更新到Visual Studio
    [2013](http://www.visualstudio.com/downloads/download-visual-studio-vs)。鉴于我在服务器端用Scala/Java进行了一些研究，而且通常还会进行一些cukes行为测试，我正在决定在WPF领域使用什么[BDD](http://www.natontesting.com/2011/08/27/step-by-step-example-of-bdding-a-wpf-app-with-cucumber-rspec-ironruby-and-bewildr/)框架。Nat的一篇有点老旧的关于BDD的文章，“使用Cucumber、RSpec、IronRuby和Bewildr逐步例举如何对WPF应用进行BDD处理”的提供了一个选项。其他老旧的BDD选项包括[Aubergine](http://www.codeproject.com/Articles/43632/Getting-started-with-BDD-Behavior-Driven-Developme)和[NSpec](http://nspec.org/)。
- en: So I’m guessing I should go the [NSpec](http://msdn.microsoft.com/en-us/magazine/dn385712.aspx)
    road for my WPF application, especially as Ted has an [article](http://msdn.microsoft.com/en-us/magazine/dn385712.aspx)
    on NSpec in the MSDN September 2013.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我猜我应该选择[NSpec](http://msdn.microsoft.com/en-us/magazine/dn385712.aspx)这条路来做我的WPF应用，尤其是因为Ted在MSDN
    2013年9月有一篇关于NSpec的[文章](http://msdn.microsoft.com/en-us/magazine/dn385712.aspx)。
- en: ~ by mdavey on February 5, 2014.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: ~ 作者 mdavey，于2014年2月5日。
- en: Posted in [.NET](https://mdavey.wordpress.com/category/languages/net/)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 发布在[.NET](https://mdavey.wordpress.com/category/languages/net/)类别下
