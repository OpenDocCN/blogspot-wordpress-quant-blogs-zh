- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-12 19:37:54'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: F# for single dealer platforms | Coding the markets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://etrading.wordpress.com/2009/12/21/f-for-single-dealer-platforms/#0001-01-01](https://etrading.wordpress.com/2009/12/21/f-for-single-dealer-platforms/#0001-01-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: F# for single dealer platforms
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: December 21, 2009
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Matt [shares his thoughts](http://mdavey.wordpress.com/2009/12/21/thoughts-on-f-within-a-single-dealer-platform-sdp/)
    on F# for SDP implementation [here](http://mdavey.wordpress.com/2009/12/21/thoughts-on-f-within-a-single-dealer-platform-sdp/).
    I don’t know as much about F# as he does, but I have dabbled with VS2010 and played
    with OCAML on Ubuntu at home. I’m sure the stateless functional approach will
    be a big help in structuring asynchrony and concurrency in server processes. So
    I agree with the general thrust of his argument here.
  prefs: []
  type: TYPE_NORMAL
- en: 'I would take issue with one of Matt’s statements: “If you think about an SDP,
    its primarily an integration build”. I have heard the same view espoused by managers
    who think an SDP build is just a trivial matter of hooking up some vendor servers
    like Caplin’s Liberator to internal middleware like the TIB, and hey presto, quotes
    and executions will flow. It’s nowhere near that simple. I prefer to say that
    building an SDP is like building an ECN. Think of it as building you’re own Bloomberg
    or TradeWeb.'
  prefs: []
  type: TYPE_NORMAL
