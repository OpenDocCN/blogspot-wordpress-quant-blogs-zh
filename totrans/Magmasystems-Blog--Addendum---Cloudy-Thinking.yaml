- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-18 05:03:08'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: 'Magmasystems Blog: Addendum - Cloudy Thinking'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[http://magmasystems.blogspot.com/2008/04/addendum-cloudy-thinking.html#0001-01-01](http://magmasystems.blogspot.com/2008/04/addendum-cloudy-thinking.html#0001-01-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In my
  prefs: []
  type: TYPE_NORMAL
- en: previous
  prefs: []
  type: TYPE_NORMAL
- en: post, I don't think that I stated my question properly.
  prefs: []
  type: TYPE_NORMAL
- en: I was asking how to actually implement the Event Cloud in a Streaming
  prefs: []
  type: TYPE_NORMAL
- en: SQL
  prefs: []
  type: TYPE_NORMAL
- en: -like
  prefs: []
  type: TYPE_NORMAL
- en: CEP
  prefs: []
  type: TYPE_NORMAL
- en: engine, so that we can build up hierarchies of events. I was looking for
  prefs: []
  type: TYPE_NORMAL
- en: schemas
  prefs: []
  type: TYPE_NORMAL
- en: ','
  prefs: []
  type: TYPE_NORMAL
- en: SQL
  prefs: []
  type: TYPE_NORMAL
- en: statements, best practices, etc.
  prefs: []
  type: TYPE_NORMAL
- en: I am well aware of POSETS, but what might be easy to implement in C# or Java-based
    data structures is not that easy in a quasi-relational system such as CORAL8.
  prefs: []
  type: TYPE_NORMAL
- en: So, I was hunting for advice from people who might have implemented event clouds
    in Coral8, Streambase, and Aleri, all three which are based on SQL.
  prefs: []
  type: TYPE_NORMAL
- en: I will follow up this post with a more concrete example.
  prefs: []
  type: TYPE_NORMAL
- en: ©2008 Marc Adler - All Rights Reserved
  prefs: []
  type: TYPE_NORMAL
