- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-12 17:47:04'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Parsimony | CSSA
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://cssanalytics.wordpress.com/2015/04/27/parsimony/#0001-01-01](https://cssanalytics.wordpress.com/2015/04/27/parsimony/#0001-01-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[![parsimony](img/9881d1ed676203b2c2389eca9d195d94.png)](https://cssanalytics.files.wordpress.com/2015/04/parsimony1.png)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Note:** *James Picerno of  [The Capital Spectator](http://www.capitalspectator.com/)
    recently did an [interesting piece](http://www.capitalspectator.com/modeling-chaos-stability-in-the-stock-market/)
    evaluating the [Self-Similarity Metric](https://cssanalytics.wordpress.com/2015/03/13/using-a-self-similarity-metric-with-intraday-data-to-define-market-regimes/
    "Using a Self-Similarity Metric with Intraday Data to Define Market Regimes")
    and provides some R code which is valuable for many of our readers. *'
  prefs: []
  type: TYPE_NORMAL
- en: The principle of parsimony relates to being frugal with resources such as money
    or the use of computing time. It is closely tied to the principles of simplicity,
    elegance and efficiency.  It also complements the philosophical theory of Occam’s
    Razor which states that the simplest explanation with the fewest assumptions is
    often closest to the truth.  Whether doing statistical modelling or building trading
    systems, it would be wise to respect the power of this principle. **Parsimonious
    models or trading systems are often robust, while overly complex models with too
    many assumptions are not.** The difficulty is in telling the difference- which
    is not obvious even to a talented and experienced developer.  The ability to distinguish
    between parsimony and excess complexity is virtually invisible to almost everyone
    else.
  prefs: []
  type: TYPE_NORMAL
- en: 'The backtest is the problem and great distractor in the quest for parsimony.
    It is like a picture of a beautiful woman that is scantily clothed beside a paragraph
    of important text– no one is interested in the fine print. A beautiful backtest
    is admittedly just as satisfying to look at (perhaps even more so for quants!)
    and can blind us from the details that got us to the end point. And while we all
    appreciate some good “chart porn”, there are some important questions to consider:
    What universe did we select and why? Why did we omit certain assets or choose
    certain parameters over others? Why did we choose one indicator or variable over
    another-and how do we know it is superior? Why do we trade at a certain rebalancing
    frequency versus another and is this relevant to the model? Most importantly is:
    **Can I create a trading system with similar results with far fewer assumptions
    and with less computational power?** That should be your goal- to achieve the
    maximum results with the least number of assumptions and resource usage.'
  prefs: []
  type: TYPE_NORMAL
- en: For example, I am well aware than the [Minimum Correlation Algorithm](https://cssanalytics.wordpress.com/2012/09/21/minimum-correlation-algorithm-paper-release/
    "Minimum Correlation Algorithm Paper Release") does not mathematically optimize
    the correlation matrix or find the most diversified portfolio. The [Minimum Variance
    Algorithm](https://cssanalytics.wordpress.com/2013/04/19/minimum-variance-algorithm-comparison-snapshot/
    "Minimum Variance Algorithm Comparison Snapshot") does not minimize variance either
    relative to a true MVP solution. But they both use an intuitive and simple method
    that meets or often exceeds the results of the more complex solutions with less
    resources, and hence can be considered parsimonious.They are also less dependent
    on estimates for optimization inputs. Such  systems are more likely to work in
    the uncertain and messy world that we actually live in. Cooking is a hobby of
    mine, and more recently I have strived to achieve the most with the least, and
    ensuring that all of my marginal choices of ingredients or differences in traditional
    technique are actually adding value. There is no point sounding fancy by adding
    exotic ingredients or using fancy techniques if they don’t change the taste for
    the better. These give the illusion of expertise to the unsophisticated, but to
    top chefs judging these dishes on FoodTV they only serve to highlight their deficiencies
    as cooks. **My advice is to work with things that you can understand or intuitively
    grasp and be very careful when trying newer and more complex methodologies**.
    Master what you can with the tools you have at your disposal instead of reaching
    for latest and greatest new toy. This may sound strange coming from a blog that
    was built around offering new ideas and concepts-  but rest assured this is some
    of the best advice you will ever receive.
  prefs: []
  type: TYPE_NORMAL
- en: All of the questions  I posed above relating to trading systems are quite material,
    and many cannot be answered quantitatively. Unfortunately for the quantitatively
    inclined, the principles of good logic often get lost while decoding proofs, cleaning
    data, or debugging computer code. Furthermore, the elegance of complex math is
    like comfort food for those that are highly intelligent and it is easy to forget
    that the assumptions of these models are a far cry from describing reality. Even
    for the more experienced developers that are aware of these problems, they may
    arrive at the wrong approach to system development. **The solution is not to avoid
    making ANY decisions or assumptions (although relying less on specific parameters
    or universes is desirable for example), but rather to make sensible choices with
    few assumptions.  Another alternative is to build a methodology that directly
    makes choices quantitatively to create a parsimonious model. Both methods have
    their strengths and weaknesses. **
  prefs: []
  type: TYPE_NORMAL
- en: At the end of the day, there is no point making something more complicated than
    it needs to be unless the benefits are material. The same is true for the length
    of time/complexity of the run for the computer program that runs the trading.
    My brother is a professional hiker and has traversed extreme mountain terrain.
    Unlike most amateurs, he does not pack everything under the sun that might be
    useful for his trip. Instead he focuses only on the essentials and on minimizing
    weight. **More importantly, he focuses on planning for what can go wrong and makes
    his choice of gear and specific hiking route accordingly**. The black and white
    realities of survival bring these questions to the forefront. In contrast the
    more comfortable and forgiving world of offices and computers make trading system
    decisions seem almost like a video game. Rest assured, it is not…..
  prefs: []
  type: TYPE_NORMAL
