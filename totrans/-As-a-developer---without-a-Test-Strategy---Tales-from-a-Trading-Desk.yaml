- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-18 05:39:21'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-18 05:39:21
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: “As a developer…” without a Test Strategy | Tales from a Trading Desk
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: “作为一名开发者……”没有测试策略 | 来自交易桌的故事
- en: 来源：[https://mdavey.wordpress.com/2015/10/14/as-a-developer-without-a-test-strategy/#0001-01-01](https://mdavey.wordpress.com/2015/10/14/as-a-developer-without-a-test-strategy/#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://mdavey.wordpress.com/2015/10/14/as-a-developer-without-a-test-strategy/#0001-01-01](https://mdavey.wordpress.com/2015/10/14/as-a-developer-without-a-test-strategy/#0001-01-01)
- en: “As a developer…” without a Test Strategy
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: “作为一名开发者……”没有测试策略
- en: Testing for me is critical on any project – obvious, but worth stating.  What
    I don’t get are the teams who are happy to code without tests, especially given
    the amount that has been written over the years about testing – TDD and BDD.  Personally,
    I’m pro-BBD.  BDD allows we to clarify how I want the software to work before
    I’ve written a line of code – anything else in my view is hacking.  We can all
    hack.  BDD forces the brain to clarify the behaviour of the application (and thus
    code), forcing a better design prior to any code being written, rather than an
    immediate refactor after the first x lines are written.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 对我来说，测试在任何项目中都是至关重要的——显而易见，但值得强调。我不理解的是那些乐于编码而不进行测试的团队，尤其是考虑到多年来关于测试——TDD和BDD——的大量文献。就我个人而言，我是BDD的支持者。BDD允许我在编写任何代码之前明确我希望软件如何工作——在我看来，其他任何做法都是“黑客”行为。我们都可以“黑”。BDD迫使大脑在编写代码之前明确应用程序的行为（从而明确代码），迫使在编写任何代码之前进行更好的设计，而不是在编写前几行代码后立即进行重构。
- en: 'This leads to a number of issues which I don’t quite understand why people
    appear willing to accept on projects:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这导致了一系列我不太理解为什么人们似乎愿意在项目中接受的问题：
- en: A lack of awareness of the testing [pyramid](http://martinfowler.com/bliki/TestPyramid.html)
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对测试[金字塔](http://martinfowler.com/bliki/TestPyramid.html)缺乏认识
- en: No definition of done – green bar on tests etc
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有完成的定义——测试通过的绿色条等
- en: Lack of [integration](http://jamescrisp.org/2011/05/30/automated-testing-and-the-test-pyramid/)
    tests, and specifically validation of payloads
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺乏[集成](http://jamescrisp.org/2011/05/30/automated-testing-and-the-test-pyramid/)测试，特别是有效载荷的验证
- en: The believe that the performance framework should testing a different set of
    behaviours not tested anywhere else.  Shouldn’t the performance framework test
    differing frequencies of behaviours from the overall behaviours set that an application
    has been design to exhibit?
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 认为性能框架应该测试一组在其他地方未测试的行为。性能框架不应该测试应用程序设计展示的整体行为集中的不同行为频率吗？
- en: Acceptance of the [cupcake](https://www.thoughtworks.com/insights/blog/introducing-software-testing-cupcake-anti-pattern)
    anti-pattern
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接受[纸杯蛋糕](https://www.thoughtworks.com/insights/blog/introducing-software-testing-cupcake-anti-pattern)反模式
- en: No care in the world of keeping the automated tests green that run in Continuous [Delivery](https://en.wikipedia.org/wiki/Continuous_delivery)
    process
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在持续[交付](https://en.wikipedia.org/wiki/Continuous_delivery)过程中，对保持自动化测试通过的绿色状态毫不在意。
- en: The disconnect between Quality (Assurance) and Software Engineering which allows
    either duplication of tests, or more worryingly, the anti-pattern Split-Brain Testing
    Strategy – each party has a different view of behaviours that the application
    should adhere to.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 质量（保证）与软件工程之间的脱节，这导致测试的重复，或者更令人担忧的是，反模式“分裂脑”测试策略——各方对应用程序应遵守的行为有不同的看法。
- en: Lack of any test results database to allow analysis
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺乏任何测试结果数据库以供分析
- en: I’m not a fan of the Quality Assurance (QA) word.  My preference is Quality
    Engineering, simple because if quality doesn’t start in the software engineering
    codebase, then there is no hope of real quality.  The entire team has to embrace
    quality to make an application successful.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我不喜欢“质量保证（QA）”这个词。我更喜欢“质量工程”，原因很简单，如果质量不是从软件工程代码库开始的，那么真正的质量就没有希望。整个团队必须拥抱质量才能使应用程序成功。
- en: ~ by mdavey on October 14, 2015.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: ~ 由mdavey于2015年10月14日发布。
- en: Posted in [Agile](https://mdavey.wordpress.com/category/agile/)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 发布于[敏捷](https://mdavey.wordpress.com/category/agile/)
