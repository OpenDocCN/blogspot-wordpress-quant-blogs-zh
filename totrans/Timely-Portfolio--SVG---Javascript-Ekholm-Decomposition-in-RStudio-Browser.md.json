["```\nlibrary(htmltools)\nlibrary(pipeR)\nlibrary(jsonlite)\nlibrary(Quandl)\nlibrary(xts)\n\n# use Quandl Kenneth French Fama/French factors\n# http://www.quandl.com/KFRENCH/FACTORS_D\n#f <- Quandl(\"KFRENCH/FACTORS_D\",type = \"xts\", start_date=\"2010-12-31\") / 100\n\ntagList(\n  #pull in the bridge to span all the week's topics\n  #Portland Vector Bridges http://timelyportfolio.github.io/portland_vector_bridges\n  tags$div( style = \"height:15%;width:100%\"\n    ,readLines(\n      \"http://timelyportfolio.github.io/portland_vector_bridges/Burnside Bridge.svg\"\n    ) %>>% HTML\n  )\n  ,tags$h1( \"Sparsest Test in Javascript of Ekholm\")\n  , tags$div( style = \"width:100%\"\n    ,tags$div( style = \"background-color:red;\"\n     ,\"Note: Date range currently limited to one year, but there is a fairly easy workaround\n      for the next version.\"\n    )\n    ,tags$div(\n      style = \"display:inline-block; width: 25%;float:left;\"\n      ,\"Mutual Fund Symbol\", tags$input( id = \"mfsymbol\" )\n      ,tags$br()\n      ,\"Start Date \"\n      , tags$span( style=\"font-size:75%;fill:lightgray\", \"(2013-08-29)\" )\n      , tags$input( type = \"date\", id = \"stdate\" )\n      ,tags$br()\n      ,\"End Date\"\n      ,tags$span( style=\"font-size:75%;fill:lightgray\", \"(2014-08-29)\" )\n      , tags$input( type = \"date\", id= \"enddate\" )\n      ,tags$br()\n      ,tags$input(\n        type=\"submit\", id = \"calc\", value = \"Calculate\"\n      )\n      ,tags$br()\n    )\n    , tags$div(style = \"display:inline-block;height:100%;width:60%;margin-left:30px\"\n      , tags$textarea(id = \"results\", style=\"width:100%; height:150px\")\n    )\n  )\n  ,tags$script(sprintf(\n'\n  var french = %s;\n' \n  , toJSON(data.frame(\"Date\"=index(f),f)) %>>% HTML\n  ))\n  ,tags$script(\n'\n    function calculateEkholm( data ) { // data in form of x,y or fund-rf, mkt-rf\n       /* get an error with regression.js\n var myReg = regression(\n \"linear\",\n data\n )\n */\n\n         // so use the great simple-statistics library\n       var myReg = ss.linear_regression().data(data);\n\n       //get residuals\n       var resid = data.map(function(p){return myReg.line()(p[0]) - p[1]});\n\n       //regress residuals^2 on (mkt-rf)^2\n       var myReg2 = ss.linear_regression().data(\n         data.map(function(d,i){\n           return [ Math.pow(d[0],2), Math.pow(resid[i],2) ]\n         })\n       )\n       //coefficients ^ 1/2 will give us ActiveAlpha and ActiveBeta\n       var activeAlpha = Math.pow( myReg2.b(), 0.5 );\n       var activeBeta = Math.pow( myReg2.m(), 0.5 );\n\n       //now do the next step to get ActiveShare and SelectionShare\n       var selectionShare = Math.pow(activeAlpha, 2 ) / ( ss.variance(data.map(function(d){return d[1]})) * (data.length - 1) / data.length )\n       var timingShare = Math.pow(activeBeta, 2 ) * ss.mean( data.map(function(d){return Math.pow(d[0],2)}) ) / ( ss.variance(data.map(function(d){return d[1]})) * (data.length - 1) / data.length )\n\n       //pass correlation result also\n       var correlation = ss.sample_correlation(data.map(function(d){return d[0]}),data.map(function(d){return d[1]}));\n\n       return { \n         regression: myReg,\n         correlation: correlation,\n         activeAlpha: activeAlpha,\n         activeBeta: activeBeta,\n         selectionShare: selectionShare,\n         timingShare: timingShare\n       }\n    }\n\n  // thanks https://gist.github.com/fincluster/6145995\n   function getStock(opts, type, complete) {\n        var defs = {\n            desc: false,\n            baseURL: \"http://query.yahooapis.com/v1/public/yql?q=\",\n            query: {\n                quotes: \\'select * from yahoo.finance.quotes where symbol = \\\"{stock}\\\" | sort(field=\\\"{sortBy}\\\", descending=\\\"{desc}\\\")\\',\n                historicaldata: \\'select * from yahoo.finance.historicaldata where symbol = \\\"{stock}\\\" and startDate = \\\"{startDate}\\\" and endDate = \\\"{endDate}\\\"\\'\n            },\n            suffixURL: {\n                quotes: \"&env=store://datatables.org/alltableswithkeys&format=json&callback=?\",\n                historicaldata: \"&env=store://datatables.org/alltableswithkeys&format=json\"\n            }\n        };\n\n        opts = opts || {};\n\n        if (!opts.stock) {\n            complete(\"No stock defined\");\n            return;\n        }\n\n        var query = defs.query[type]\n          .replace(\"{stock}\", opts.stock)\n          .replace(\"{sortBy}\", defs.sortBy)\n          .replace(\"{desc}\", defs.desc)\n          .replace(\"{startDate}\", opts.startDate)\n          .replace(\"{endDate}\", opts.endDate)\n\n        var url = defs.baseURL + query + (defs.suffixURL[type] || \"\");\n\n        return url;\n    }\n\n    d3.select(\"#calc\").on(\"click\",function(){\n      calculateFund(\n        d3.select(\"#mfsymbol\")[0][0].value,\n        d3.select(\"#stdate\")[0][0].value,\n        d3.select(\"#enddate\")[0][0].value\n      )\n    })\n\n    function calculateFund( symbol, startdate, enddate ) {\n\n      d3.json(getStock({stock:symbol.toUpperCase(),startDate:startdate,endDate:enddate},\"historicaldata\"), function(e1,fund){\n\n          if( e1 || !fund.query.results ) {\n            updateResults ( {e1:e1, e2:e2, queryresults: \"query problems\"} );\n          } else {\n            var fund_factor = [];\n\n            //manipulate data to join fund with factors\n            //would be nice to have a xts merge in javascript\n\n            // query.results.quote will have the data stripped of meta\n            // also we will sort date ascending\n            fund = fund.query.results.quote\n                .sort(function(a,b){\n                  return d3.ascending(\n                    d3.time.format(\"%Y-%m-%d\").parse(a.Date),\n                    d3.time.format(\"%Y-%m-%d\").parse(b.Date)\n                  )\n                } );\n\n            // now lets go period by period with fund.map\n            fund.map( function(per, i){\n              if( i > 0 ) {\n                var frenchThisPer = french.filter(function(d){return d.Date == per.Date})[0];\n                fund_factor.push([\n                  //Date: per.Date,\n                  //FundPrice: \n                  per.Adj_Close / fund[ i - 1 ].Adj_Close - 1 - frenchThisPer[\"RF\"],\n                  //Rm_Rf:\n                  +frenchThisPer[\"Mkt.RF\"],\n                  //Rf: +frenchThisPer[\"RF\"]/100\n                ])\n              }\n            })\n\n            updateResults( calculateEkholm( fund_factor ) );\n          }\n\n      })\n    }\n\n    function updateResults( ekholmCalc ){\n      var ekhArr = [];\n      Object.keys(ekholmCalc).map(function(k){\n        ekhArr.push( [ k,\": \", ekholmCalc[k] ].join(\"\") )\n      })\n      d3.select(\"#results\").text(ekhArr.join(\"\\\\n\"))\n    }\n ' %>>% HTML )\n) %>>%\n  attachDependencies(\n    list(\n      htmlDependency(\n        name=\"d3\"\n        ,version=\"3.4\"\n        ,src=c(\"href\"=\"http://d3js.org/\")\n        ,script=\"d3.v3.min.js\"\n      )\n      ,htmlDependency(\n        name=\"simple_statistics\"\n        ,version=\"0.1\"\n        ,src=c(\"href\"=\n           \"http://timelyportfolio.github.io/rCharts_factor_analytics/js\"\n        )\n        ,script = \"simple_statistics.js\"\n      )\n    )\n  ) %>>% html_print\n```"]