["```\n################################################################################################\n# Quantitative Trading Strategies - Volatility Trading:\n# Date Created: 2012-10-18\n# Author:       Nan Zhou, zhounan1983@gmail.com\n#\n# Use volatility futures, shortdate vs medium dated\n# VXX iPath S&P 500 VIX Short-Term Futures ETN (VXX)\n# VXZ iPath S&P 500 VIX Mid-Term Futures ETN (VXZ)\n#\n# Plan is to check for trade entry at the open, and exit the trade at the close:\n# IF signal < signalLowLim then in contango and do a carry trade\n# IF signal > signalUpperLim then in backwardation so do a reverse carry\n# ELSE do nothing\n\n################################################################################################\n## Install all required packages:\nrm(list=ls())\nlibrary(\"quantmod\"); library(\"PerformanceAnalytics\")\npar(ask=T); memory.size(max = 4000); options(digits=8, digits.secs=4)\n\n## PLEASE CHANGE THE WORKFOLD TO YOUR WORK FOLD FIRST ##\nworkfold <- \"H:\\\\My References\\\\Research\\\\2012_10_Trading Codes\";\n# workfold <- \"C:\\\\Dropbox\\\\Research\\\\2012-10 VIX Trading Strategies\";\nsetwd(workfold);\n\n################################################################################################\n# INPUT OF PARAMETERS\n################################################################################################\n\nsignalLowLim   <- 0.9\nsignalUpperLim <- 1.1\nsymbolLst      <- c(\"VXX\", \"VXZ\", \"^GSPC\")\ndataSrc        <- \"yahoo\"\ndataSrc        <- \"csv\"\nstartDate      <- as.Date(\"2010-01-01\") #Specify what date to get the prices from\nhedgeTrainingStartDate <- startDate #Start date for training the hedge ratio\nhedgeTrainingEndDate   <- as.Date(\"2011-01-01\") #End date for training the hedge ratio\ntradingStartDate       <- as.Date(\"2011-01-02\") #Date to run the strategy from\n# tradingEndDate         <- as.Date(\"2011-12-31\") #Date to run the strategy from\ntradingEndDate         <- Sys.Date()\n\n#--------------------------------------------------------------\n### SECTION 1 - Download Data & Calculate Returns ###\n\n## Download the data:\npnlEnv <- new.env() #Make a new environment for quantmod to store data in\n\nimportOHLC <- function(symbolLst = NULL, env = .GlobalEnv, src = \"yahoo\", format = \"%m/%d/%Y\",\n                        return.class = \"xts\", from = Sys.Date()-365, end = Sys.Date()){\n    if (src == \"csv\"){\n        for (i in 1:length(symbolLst)){\n            symbolLst <- toupper(gsub(\"\\\\^\", \"\", symbolLst))\n            symbol <- symbolLst[i]\n            namesData <- c(\"Open\", \"High\", \"Low\", \"Close\", \"Volume\", \"Adj.Close\")\n            fr     <- read.csv(file = paste(symbol,'csv',sep='.'))\n            fr     <- xts(fr[, namesData], as.Date(as.character(fr[, \"Date\"]), format = format))\n            colnames(fr) <- paste(symbol, c(\"Open\", \"High\", \"Low\", \"Close\", \"Volume\", \"Adjusted\"), sep = \".\")\n            fr <- quantmod:::convert.time.series(fr = fr, return.class = return.class)\n            fr <- window(fr, start = from, end = end, extend = TRUE)\n            assign(symbol, fr, env)\n        }\n    }\n    else{\n        getSymbols(symbolLst, env = env, src = src, from = from, end = end)\n    }\n\n    return(symbolLst)    \n}\n\nimportOHLC(symbolLst, env = pnlEnv, src = \"csv\", format = \"%m/%d/%Y\", from = startDate, end = Sys.Date())\n\n## Calculate returns for VXX and VXZ:\nvxxRet <- (Cl(pnlEnv$VXX)/Op(pnlEnv$VXX))-1\ncolnames(vxxRet) <- \"Ret\"\npnlEnv$VXX <- cbind(pnlEnv$VXX,vxxRet)\nvxzRet <- (Cl(pnlEnv$VXZ)/Op(pnlEnv$VXZ))-1\ncolnames(vxzRet) <- \"Ret\"\npnlEnv$VXZ <- cbind(pnlEnv$VXZ,vxzRet)\n\n#--------------------------------------------------------------\n### SECTION 2 - Calculating the hedge ratio ###\n## Want to work out a hedge ratio, so that we can remain Vega neutral (the futures contact are trading VEGA)\n\ntrainVxx <- window(pnlEnv$VXX$Ret,start=hedgeTrainingStartDate ,end=hedgeTrainingEndDate)\ntrainVxz <- window(pnlEnv$VXZ$Ret,start=hedgeTrainingStartDate ,end=hedgeTrainingEndDate)\ntrainData = na.omit(cbind(trainVxx,trainVxz))\ncolnames(trainData) <- c(\"VXX\",\"VXZ\")\n\n## Simply linearly regress the returns of Vxx with Vxz:\nregression <- lm(trainData[,\"VXZ\"] ~ trainData[,\"VXX\"]) #Linear Regression\nhedgeratio <- regression$coefficient[2]\nplot(x=as.vector(trainData[,\"VXX\"]), y=as.vector(trainData[,\"VXZ\"]),\n     main=paste(\"Hedge Regression: Y =\", regression$coefficient[2], \" * X + intercept\"),\n  \t xlab=\"Vxx Return\", ylab=\"Vxz Return\", pch=19)\nabline(regression, col = 2 )\n\n#--------------------------------------------------------------\n### SECTION 3 - Generate trading signals ###\ntSig <- Op(pnlEnv$VXX)/Op(pnlEnv$VXZ)\ncolnames(tSig) <- \"Signal\"\nvxxSignal <- apply(tSig,1, function(x) {if(x<signalLowLim) { return (-1) } else { if(x>signalUpperLim) { return(1) } else { return (0) }}})\nvxzSignal <- -1 * vxxSignal\n\nstrategyRet <- ((vxxSignal * pnlEnv$VXX$Ret) + hedgeratio * (vxzSignal * pnlEnv$VXZ$Ret) )\nstrategyRet <- window(strategyRet,start=tradingStartDate,end=tradingEndDate, extend = FALSE)\n#Normalise the amount of money being invested on each trade so that we can compare to the S&P index later\nstrategyRet <- strategyRet * 1 / (1+abs(hedgeratio))\ncolnames(strategyRet) <- \"StrategyReturns\"\n\n#--------------------------------------------------------------\n### SECTION 5 - Performance Analysis ###\n\n## Get the S&P 500 index data:\nindexData <- pnlEnv\nindexRet  <- (Cl(indexData$GSPC)-lag(Cl(indexData$GSPC),1))/lag(Cl(indexData$GSPC),1)\ncolnames(indexRet) <- \"IndexRet\"\npnlVec <- cbind(as.zoo(strategyRet),as.zoo(indexRet)) #Convert to zoo object\ncolnames(pnlVec) <- c(\"Vol Carry Trade\",\"S&P500\")\npnlVec <- na.omit(pnlVec)\n\ncharts.PerformanceSummary(pnlVec,main=\"Performance of Volatility Carry Trade\",geometric=FALSE)\n#Lets calculate a table of montly returns by year and strategy\ncat(\"Calander Returns - Note 13.5 means a return of 13.5%\\n\")\nprint(table.CalendarReturns(pnlVec))\n\n#Calculate the sharpe ratio\ncat(\"Sharpe Ratio\")\nprint(SharpeRatio.annualized(pnlVec))\n\n#Calculate other statistics\ncat(\"Other Statistics\")\nprint(table.CAPM(pnlVec[,\"Vol Carry Trade\"],pnlVec[,\"S&P500\"]))\nchart.Boxplot(pnlVec)\nlayout(rbind(c(1,2),c(3,4)))\nchart.Histogram(pnlVec, main = \"Plain\", methods = NULL)\nchart.Histogram(pnlVec, main = \"Density\", breaks=40, methods = c(\"add.density\", \"add.normal\"))\nchart.Histogram(pnlVec, main = \"Skew and Kurt\", methods = c(\"add.centered\", \"add.rug\"))\nchart.Histogram(pnlVec, main = \"Risk Measures\", methods = c(\"add.risk\"))\nlayout(c(1,1))\n```"]