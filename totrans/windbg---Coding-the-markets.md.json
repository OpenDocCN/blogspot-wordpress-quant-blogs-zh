["```\n  g to go\n  k, kb, kd for stack. kp for stack with params, kn with frame nums. ~*kvn\n  .frame n   navigate to stack frame n\n  .restart\n  .lastevent\n  .effmach x86  tell 64bit windbg to work with 32bit exe\n  ~  thread info\n  ~. current thread info \n  ~* list threads\n  ~N kp stack for thread N. N is not a TID, it's an index  \n  l+t go into source mode\n  bl: list breakpoints, bc *: clr all bps\n  dv  show locals\n  lm  list modules and what dbg symbols they have loaded\n  .lines  is line number info loaded ?\n  .expr  which expression evaluator\n  .expr /s c++  use c++ expr eval\n  x <module>!<symbol>   display symbols loaded\n  x sc!*                list all symbo ls in sc.dll\n  uf <module>!<symbol>  disassemble a symbol\n  .reload               force windbg to walk image path loading DLLs\n  bp officeloader!desktop_win32::extendLoaderEnvironment\n  bm officeloader!tools::resolveLink\n  bc  clear BPs\n  bd  disable BPs\n  .reload /f /i MyDll.dll\n  .reload /unl MyDll.dll\n  .reload                 reload all modules\n  !sym noisy              track symbol problems\n  ?  eval expr\n  ?? eval C++ expr\n     eg ?? aName.mpData\n        ?? aName.mpData->maStr\n  du  dump unicode  eg du aName.mpData->maStr\n  p/F10 step over\n  t/F11 step in\n  gu               go up - step out\n  .load SOS        load up .Net dbg support\n  .load sosex.dll  load \n  !clrstack        .Net stack\n  !DumpDomain      to list loaded .Net modules\n  !bpmd ExcelDna.Integration ExcelDnaUtil.GetApplicationFromWindow\n  !peb  display process environment block\n  sxe 0x800706ba   break on first chance 0x800706ba exception\n  sxe av           break on first chance access violation\n  sxd av           disable break on first chance exception\n```"]