["```\n\n###############################################################################\n# Load Systematic Investor Toolbox (SIT)\n# https://systematicinvestor.wordpress.com/systematic-investor-toolbox/\n###############################################################################\ncon = gzcon(url('http://www.systematicportfolio.com/sit.gz', 'rb'))\n    source(con)\nclose(con)\n\t#*****************************************************************\n\t# Load data\n\t#****************************************************************** \n\tload.packages('quantmod')\t\n\n\t# Load factor data that we saved at the end of the fm.all.factor.test function\n\tload(file='data.factors.Rdata')\n\t\tnperiods = nrow(next.month.ret)\n\t\tn = ncol(next.month.ret)\n\t\ttickers = colnames(next.month.ret)\n\n\t# Load multiple factor risk model data that we saved at the end of the fm.risk.model.test function\t\n\tload(file='risk.model.Rdata')\n\n\t#*****************************************************************\n\t# Construct minimum variance portfolio using the sample covariance matrix\n\t#****************************************************************** \n\tload.packages('quadprog,corpcor')\n\n\t#--------------------------------------------------------------------------\n\t# Create Covariance matrix based on the last 24 months of returns\n\t#--------------------------------------------------------------------------\n\ttemp = last(mlag(next.month.ret),24)\n\tcov.temp = cov(temp, use='complete.obs', method='pearson')\t\n\thist.cov = cov.temp\n\n\t#--------------------------------------------------------------------------\n\t# Adjust Covariance matrix\n\t#--------------------------------------------------------------------------\n\tif(!is.positive.definite(cov.temp)) {\n\t\tcov.temp <- make.positive.definite(cov.temp, 0.000000001)\n\t}\t\n\n\t#--------------------------------------------------------------------------\n\t# Create constraints\n\t#--------------------------------------------------------------------------\n\t# set min/max wgts for individual stocks: 0 =< x <= 1\n\tconstraints = new.constraints(n, lb = 0, ub = 1)\n\n\t# wgts must sum to 1 (fully invested)\n\tconstraints = add.constraints(rep(1,n), 1, type = '=', constraints)\n\n\t#--------------------------------------------------------------------------\n\t# Solve QP problem\n\t#--------------------------------------------------------------------------\t\t\n\tsol = solve.QP.bounds(Dmat = cov.temp, dvec = rep(0, nrow(cov.temp)) , \n\t\tAmat=constraints$A, bvec=constraints$b, constraints$meq,\n\t\tlb = constraints$lb, ub = constraints$ub)\n\n\t#--------------------------------------------------------------------------\n\t# Plot Portfolio weights\n\t#--------------------------------------------------------------------------\t\t\n\tx = round(sol$solution,4)\n\t\tx = iif(x < 0, 0, x)\n\t\tnames(x) = colnames(next.month.ret)\n\thist.min.var.portfolio = x\n\n\t# plot\n\tbarplot(100*x,las = 2, \n\t\tmain = 'Minimum variance portfolio weights (sample covariance matrix)')\t\t\n\n```", "```\nX1...Xn * factor.exposures = Xn+1...Xn+k\n```", "```\n[specific.risk  0                 ]\n[0              factor.covariance ]\n```", "```\n\n\t#*****************************************************************\n\t# Construct minimum variance portfolio using the multiple factor risk model\n\t#****************************************************************** \n\tt = nperiods\t\n\tfactor.exposures = all.data[t,,-1]\t\n\t\tnfactors = ncol(factor.exposures)\n\n\t#--------------------------------------------------------------------------\n\t# Create constraints\n\t#--------------------------------------------------------------------------\n\t# set min/max wgts for individual stocks: 0 =< x <= 1\n\tconstraints = new.constraints(n, lb = 0, ub = 1)\n\n\t# wgts must sum to 1 (fully invested)\n\tconstraints = add.constraints(rep(1,n), 1, type = '=', constraints)\n\n\t# adjust prior constraints, add v.i\n\tconstraints = add.variables(nfactors, constraints)\n\n\t# BX - Xnew = 0\n\tconstraints = add.constraints(rbind(factor.exposures, -diag(nfactors)), rep(0, nfactors), type = '=', constraints)\n\n\t#--------------------------------------------------------------------------\n\t# Create Covariance matrix\n\t# [Qu  0]\n\t# [ 0 Qf]\n\t#--------------------------------------------------------------------------\n\ttemp = diag(n)\n\t\tdiag(temp) = specific.variance[t,]^2\n\tcov.temp = diag(n + nfactors)\n\t\tcov.temp[1:n,1:n] = temp\n\tcov.temp[(n+1):(n+nfactors),(n+1):(n+nfactors)] = factor.covariance[t,,]\n\n\t#--------------------------------------------------------------------------\n\t# Solve QP problem\n\t#--------------------------------------------------------------------------\n\tload.packages('quadprog')\n\n\tsol = solve.QP.bounds(Dmat = cov.temp, dvec = rep(0, nrow(cov.temp)) , \n\t\tAmat=constraints$A, bvec=constraints$b, constraints$meq,\n\t\tlb = constraints$lb, ub = constraints$ub)\n\n\t#--------------------------------------------------------------------------\n\t# Plot Portfolio weights\n\t#--------------------------------------------------------------------------\t\t\n\tx = round(sol$solution,4)[1:n]\n\t\tx = iif(x < 0, 0, x)\n\t\tnames(x) = colnames(next.month.ret)\n\trisk.model.min.var.portfolio = x\n\n\t# plot\n\tbarplot(100*x,las = 2, \n\t\tmain = 'Minimum variance portfolio weights (multiple factor risk model)')\n\n```"]