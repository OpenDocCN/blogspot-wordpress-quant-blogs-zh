["```\nrequire(microbenchmark)\nrequire(ggplot2)\n\nrequire(xts)\nrequire(quantmod)\nrequire(PerformanceAnalytics)\n\nrequire(dplyr);require(magrittr)\n\nrequire(Gmisc)  #for pretty html tables \n```", "```\nplayData.matrix <- matrix(runif(1000000,-.03,.03), ncol=10)\n\nplayData.df <- \n  playData.matrix %>%\n  as.data.frame %>% \n  tbl_df\n\n#make some dates by adding days to the first day of 1740\n#in a playful magrittr way (please don't do this at homr)\nplayDates <- 1:(playData.matrix %>% nrow) %>% as.Date(origin=\"1740-01-01\")\n\n#make an xts dataset with our playData with index playDates\nplayData.xts <- \n  playData.matrix %>%\n  as.xts(order.by=playDates) \n```", "```\nmb_runMean <- microbenchmark(\n  runMean_matrix = runMean(playData.matrix, n = 50 )\n  ,runMean_df = runMean( playData.df, n = 50 )\n  ,runMean_xts = runMean( playData.xts, n = 50 )\n  #show the beauty of Fortran in the above runMean calcs\n  ,runMean_rollapply = rollapply(playData.matrix, width = 50, by = 1, FUN=\"mean\")\n,times=10L) \n```", "```\nmb_rollapply <- microbenchmark(\n  ra_matrix = rollapply( playData.matrix[,1:2], width = 100 , by = 1, FUN=\"Omega\" )\n\n  ,ra_matrix2 = apply(\n    playData.matrix[,1:2],\n    MARGIN=2,\n    FUN=function(col){ return(rollapply(col,width = 100 , by = 1, FUN=\"Omega\" )) }\n  )\n\n  ,ra_xts = rollapply( playData.xts[,1:2], width = 100 , by = 1, FUN=\"Omega\" )\n\n  ,ra_xts2 = apply(\n    playData.xts[,1:2],\n    MARGIN=2,\n    FUN=function(col){\n      return(\n        rollapply(\n          as.numeric(col)\n          ,width=100\n          ,by=1\n          ,FUN=\"Omega\"\n        )\n      )\n    }\n  )\n,times=2L) \n```"]