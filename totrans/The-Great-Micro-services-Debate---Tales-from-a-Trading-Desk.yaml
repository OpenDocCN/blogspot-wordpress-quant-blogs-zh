- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: Êú™ÂàÜÁ±ª'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-18 05:42:03'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: The Great Micro-services Debate | Tales from a Trading Desk
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Êù•Ê∫êÔºö[https://mdavey.wordpress.com/2015/06/05/the-great-micro-services-debate/#0001-01-01](https://mdavey.wordpress.com/2015/06/05/the-great-micro-services-debate/#0001-01-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The Great Micro-services¬†Debate
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A few people have picked up on the great Micro-services debate that is probably
    occurring in many companies.¬† Micro-services, like many other architectural options,
    are just another tool in the toolbox.¬† No single solution will solve all problems
    üôÇ¬† Martin Fowler [offers](http://martinfowler.com/bliki/MonolithFirst.html) some
    recent views on micro-services architectures.¬† Sam [Newman](http://samnewman.io/blog/2015/04/07/microservices-for-greenfield/)
    offer a nice case study on brownfield/greenfield micro-services.¬† I think one
    of the key takeaways from Sam‚Äôs post is that domain knowledge of the problem is
    essential to the partitioning of services.
  prefs: []
  type: TYPE_NORMAL
- en: Despite knowing the domain of continuous integration really well, their initial
    stab at coming up with service boundaries for their hosted-CI solution wasn‚Äôt
    quite right. This led to a high cost of change and high cost of ownership. After
    several months fighting this problem, the team decided to merge the services back
    into one big application. Later on, when the feature-set of the application had
    stabilized somewhat and the team had a firmer understanding of the domain, it
    was easier to find those stable¬†boundaries.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Clean Code [blog](http://blog.cleancoder.com/uncle-bob/2014/09/19/MicroServicesAndJars.html)
    also offers sensible advice in the services area:'
  prefs: []
  type: TYPE_NORMAL
- en: Don‚Äôt leap into microservices just because it sounds cool. Segregate the system
    into jars using a plugin architecture first. If that‚Äôs not sufficient, then consider
    introducing service boundaries at strategic points.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ~ by mdavey on June 5, 2015.
  prefs: []
  type: TYPE_NORMAL
- en: Posted in [Languages](https://mdavey.wordpress.com/category/languages/)
  prefs: []
  type: TYPE_NORMAL
