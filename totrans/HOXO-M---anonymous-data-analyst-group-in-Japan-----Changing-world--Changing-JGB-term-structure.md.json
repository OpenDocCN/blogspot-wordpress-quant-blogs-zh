["```\nlibrary(xts)\n#Source of JGB curve\nsource.jgb <- NULL\nsource.jgb[[length(source.jgb) + 1]] <- \"http://www.mof.go.jp/jgbs/reference/interest_rate/data/jgbcm_1974-1979.csv\"\nsource.jgb[[length(source.jgb) + 1]] <- \"http://www.mof.go.jp/jgbs/reference/interest_rate/data/jgbcm_1980-1989.csv\"\nsource.jgb[[length(source.jgb) + 1]] <- \"http://www.mof.go.jp/jgbs/reference/interest_rate/data/jgbcm_1990-1999.csv\"\nsource.jgb[[length(source.jgb) + 1]] <- \"http://www.mof.go.jp/jgbs/reference/interest_rate/data/jgbcm_2000-2009.csv\"\nsource.jgb[[length(source.jgb) + 1]] <- \"http://www.mof.go.jp/jgbs/reference/interest_rate/data/jgbcm_2010.csv\"\nsource.jgb[[length(source.jgb) + 1]] <- \"http://www.mof.go.jp/jgbs/reference/interest_rate/jgbcm.csv\"\n#From Japanese era To ChristianEra\nToChristianEra <- function(x)\n{\n  era  <- substr(x, 1, 1)\n  year <- as.numeric(substr(x, 2, nchar(x)))\n  if(era == \"H\"){\n    year <- year + 1988\n  }else if(era == \"S\"){\n    year <- year + 1925\n  }\n  as.character(year)\n}\n#Down load yield curve and convert to xts object\nGetJGBYield <- function(source.url)\n{\n  jgb <- read.csv(source.url, stringsAsFactors = FALSE)\n  #Extract date only\n  jgb.day  <- strsplit(jgb[, 1], \"\\\\.\")\n  #stop warning\n  warn.old <- getOption(\"warn\")\n  options(warn = -1)\n  #From Japanese era To ChristianEra\n  jgb.day <- lapply(jgb.day, function(x)c(ToChristianEra(x[1]), x[2:length(x)]))\n  #From date string to date object\n  jgb[,  1] <- as.Date(sapply(jgb.day, function(x)Reduce(function(y,z)paste(y,z, sep=\"-\"),x)))\n  #Convert data from string to numeric\n  jgb[, -1] <- apply(jgb[, -1], 2, as.numeric)\n  options(warn = warn.old)\n  as.xts(read.zoo(jgb))\n}\n#Down load JBG yield\njgb.list <- lapply(source.jgb, GetJGBYield)\n#convert one xts object\njgb.xts <- Reduce(rbind, jgb.list)\n#Interpolate(nearest value)\ncoredata(jgb.xts) <- na.locf(t(na.locf(t(coredata(jgb.xts)))))\n#to monthly\njgb.xts <- jgb.xts[endpoints(jgb.xts, on=\"months\",k = 1)]\n\n#Label for x-axis\nlabel.term <- paste(gsub(\"X\", \"\", colnames(jgb.xts)), \"Y\", sep=\"\")\n#The range of y \ny.max <- c(min(jgb.xts), max(jgb.xts))\n#plot one image\nSnap <- function(val){\n  term.structure <- coredata(val)\n  index.date     <- index(val)\n  par(xaxt=\"n\")\n  plot(t(term.structure),type=\"l\",lwd=3, col = 2, xlab = \"Term\", ylab = \"Rate\", ylim = y.max)\n  par(xaxt=\"s\")\n  axis(1, 1:length(label.term), label.term)\n  text(0.5, y.max[2], as.character(index.date), pos = 4)\n}\n#save as animation\nlibrary(animation)\nsaveGIF({\n  for(i in 1:nrow(jgb.xts)){Snap(jgb.xts[i])}\n},interval = 0.005)\n```"]