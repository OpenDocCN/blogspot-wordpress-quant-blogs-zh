- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-12 19:49:13'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: MFC & Win32 GUI rewrite ? | Coding the markets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://etrading.wordpress.com/2006/10/07/mfc-win32-gui-rewrite/#0001-01-01](https://etrading.wordpress.com/2006/10/07/mfc-win32-gui-rewrite/#0001-01-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: MFC & Win32 GUI rewrite ?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: October 7, 2006
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[Marc asks](http://magmasystems.blogspot.com/2006/10/what-are-you-doing-with-your-mfc-apps.html)
    what banks are planning to do with their MFC apps. The code base for our etrading
    system is 600KLOC of C++, with some Java and C#. The GUI tier is mostly C++ MFC/Win32\.
    Some of the newer stuff is C#. We have no plans to spend a year rewriting C++
    MFC code in C# Winforms.'
  prefs: []
  type: TYPE_NORMAL
- en: Let’s imagine you wrote an MFC GUI back in 97\. If you’d bought the claims of
    each new wave of GUI technology since, how may times would you have rewritten
    it ?  Once each for Java AWT, Java Swing, C# WinForms ?  And would you be going
    for AJAX, Flash or Vista now. Any tech manager in a bank who buys in to vendor
    claims to the extent of rewriting production apps just to be on whatever platform
    the vendors are hyping this week needs their head examining. Or needs firing.
  prefs: []
  type: TYPE_NORMAL
- en: Maybe I’m too busy with my head down in the front office trenches, but I’m unaware
    of any MS announcement withdrawing support from MFC. Even if they did, I wouldn’t
    worry til MS released a version of Office based on something other than C++ MFC
    & Win32\. As ever in etrading, low latency and high thoughput are key. Our pricing
    blotter runs on many desktops, and has to keep up with hundreds of bonds and swaps
    that tick several times a second – updating price, yield, DV01, duration, convexity
    etc every time. So we’ll be sticking with C++ MFC Win32 for some time. And I’ve
    no doubt that MS will persist with that approach for their own desktop apps for
    some time too.
  prefs: []
  type: TYPE_NORMAL
