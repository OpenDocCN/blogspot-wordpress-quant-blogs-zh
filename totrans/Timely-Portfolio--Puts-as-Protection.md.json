["```\nlibrary(quantmod)\nlibrary(purrr)\nlibrary(dplyr)\nlibrary(pipeR)\nlibrary(tibble)\n```", "```\ngetSymbols(\"SPY\")\n```", "```\n## [1] \"SPY\"\n```", "```\nspy_opts <- getOptionChain(\"SPY\", Exp = \"2017-12-15\")\n```", "```\noutcomes <- spy_opts$puts %>%\n  tbl_df() %>%\n  filter(Strike >= 230, Strike <= 260, Ask > 0) %>%\n  mutate(\n    spy_pos = floor(100*tail(SPY,1)[[4]]-100*Ask),\n    option_pos = ceiling(100*Ask)\n  ) %>%\n  select(Strike, spy_pos, option_pos)\n\nportfolio <- map(\n  seq_len(nrow(outcomes)),\n  ~.x %>>%\n    {outcomes[.,]} %>>%\n    (strike~{\n      map(\n        seq(-50,50,5),\n        ~tibble(\n          outcome = .x,\n          value = strike$spy_pos * (1+.x/100) + \n                  max(c(strike$Strike - tail(SPY)[[4]] * (1+.x/100),0)) * 100\n        )\n      ) %>>%\n        bind_rows()\n    })\n)\n\nstrike_port <- tibble(\n  strike = outcomes$Strike,\n  outcomes = map(portfolio, ~.x)\n)\n```", "```\nplot(\n  value ~ outcome,\n  data = strike_port[1,]$outcomes[[1]],\n  ylim = c(0,40000),\n  type = \"l\"\n)\nwalk(\n  seq_len(nrow(strike_port)),\n  ~lines(value ~ outcome, data = strike_port[.x,]$outcomes[[1]])\n)\n```", "```\nlibrary(plotly)\n\npltly <- reduce(\n  1:nrow(strike_port),\n  function(left, right) {\n    left %>%\n      add_lines(\n        x = strike_port[right,]$outcomes[[1]]$outcome,\n        y = strike_port[right,]$outcomes[[1]]$value/(100*tail(SPY,1)[[4]]) - 1,\n        inherit = FALSE,\n        name = strike_port[right,]$strike\n      )\n  }, \n  .init = plot_ly()\n)\n```"]