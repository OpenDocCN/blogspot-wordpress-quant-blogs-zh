["```\nrequire(latticeExtra)\nrequire(quantmod)\n\nUS10y <- getSymbols(\"^TNX\", from = \"2000-01-01\", auto.assign = FALSE)[, \n    4]\n\nasTheEconomist(xyplot(US10y, scales = list(y = list(rot = 1)), \n    main = \"US 10y Yield Since 2000\")) \n```", "```\np1 <- asTheEconomist(xyplot(US10y - lag(US10y, 252), \n    scales = list(y = list(rot = 0)), main = \"US 10y Yield - Yearly Change\"))\np1 \n```", "```\nrequire(directlabels)\nrequire(reshape2)\n\ngetSymbols(\"VUSTX\", from = \"1990-01-01\") \n```", "```\n## [1] \"VUSTX\" \n```", "```\ngetSymbols(\"VBMFX\", from = \"1990-01-01\") \n```", "```\n## [1] \"VBMFX\" \n```", "```\n bonds.tr <- merge(ROC(VUSTX[, 6], 250), ROC(VBMFX[, \n    6], 250))\ncolnames(bonds.tr) <- c(\"VanguardLongTsy\", \"VanguardTotBnd\")\nbond.funds.melt <- melt(as.data.frame(cbind(as.Date(index(bonds.tr)), \n    coredata(bonds.tr))), id.vars = 1)\ncolnames(bond.funds.melt) <- c(\"date\", \"fund\", \"totret250\")\nbond.funds.melt$date <- as.Date(bond.funds.melt$date)\n\np2 <- direct.label(xyplot(bonds.tr, screens = 1, ylim = c(-0.35, \n    0.35), scales = list(y = list(rot = 0)), col = theEconomist.theme()$superpose.line$col, \n    par.settings = theEconomist.theme(box = \"transparent\"), \n    lattice.options = theEconomist.opts(), xlab = NULL, \n    main = \"Vanguard Bond Funds 250 Day Total Return\"), \n    list(\"last.points\", hjust = 1, cex = 1.2))\np2 \n```", "```\n p3 <- asTheEconomist(horizonplot(totret250 ~ date | \n    fund, origin = 0, horizonscale = 0.05, data = bond.funds.melt, \n    strip = TRUE, strip.left = FALSE, par.strip.text = list(cex = 1.1), \n    layout = c(1, 2), main = \"Vanguard Bond Funds 250 Day Total Return\"))\np3 \n```", "```\n # print(p2,position=c(0,0.4,1,1),more=TRUE)\n# print(update(p3,main=NULL),position=c(0,0,1,0.5)) \n```", "```\nurl <- \"http://www.mof.go.jp/english/jgbs/reference/interest_rate/\"\nfilenames <- paste(\"jgbcme\",c(\"\",\"_2010\",\"_2000-2009\",\"_1990-1999\",\"_1980-1989\",\"_1974-1979\"),\".csv\",sep=\"\")\n\n#load all data and combine into one jgb data.frame\njgb <- read.csv(paste(url,filenames[1],sep=\"\"),stringsAsFactors=FALSE)\nfor (i in 2:length(filenames)) {\n  jgb <- rbind(jgb,read.csv(paste(url,\"/historical/\",filenames[i],sep=\"\"),stringsAsFactors=FALSE))\n}\n\n#now clean up the jgb data.frame to make a jgb xts\njgb.xts <- as.xts(data.matrix(jgb[,2:NCOL(jgb)]),order.by=as.Date(jgb[,1]))\ncolnames(jgb.xts) <- paste0(gsub(\"X\",\"JGB\",colnames(jgb.xts)))\n\n#get Yen from the Fed\n#getSymbols(\"DEXJPUS\",src=\"FRED\")\n\nxtsMelt <- function(data) {\n  require(reshape2)\n\n  #translate xts to time series to json with date and data\n  #for this behavior will be more generic than the original\n  #data will not be transformed, so template.rmd will be changed to reflect\n\n  #convert to data frame\n  data.df <- data.frame(cbind(format(index(data),\"%Y-%m-%d\"),coredata(data)))\n  colnames(data.df)[1] = \"date\"\n  data.melt <- melt(data.df,id.vars=1,stringsAsFactors=FALSE)\n  colnames(data.melt) <- c(\"date\",\"indexname\",\"value\")\n  #remove periods from indexnames to prevent javascript confusion\n  #these . usually come from spaces in the colnames when melted\n  data.melt[,\"indexname\"] <- apply(matrix(data.melt[,\"indexname\"]),2,gsub,pattern=\"[.]\",replacement=\"\")\n  return(data.melt)\n  #return(df2json(na.omit(data.melt)))\n\n}\n\njgb.melt <- xtsMelt(jgb.xts[\"2012::\",])\njgb.melt$date <- as.Date(jgb.melt$date)\njgb.melt$value <- as.numeric(jgb.melt$value)\njgb.melt$indexname <- factor(\n  jgb.melt$indexname,\n  levels = colnames(jgb.xts)\n)\njgb.melt$maturity <- as.numeric(\n  substr(\n    jgb.melt$indexname,\n    4,\n    length( jgb.melt$indexname ) - 4\n  )\n)\njgb.melt$country <- rep( \"Japan\", nrow( jgb.melt ))\n\n#now get the US bonds from FRED\nUSbondssymbols <- paste0(\"DGS\",c(1,2,3,5,7,10,20,30))\n\nust.xts <- xts()\nfor (i in 1:length( USbondssymbols ) ) {\n  ust.xts <- merge( \n    ust.xts,\n    getSymbols( \n     USbondssymbols[i],\n     auto.assign = FALSE,\n     src = \"FRED\"\n    )\n  )\n}\n\nust.melt <- na.omit( xtsMelt( ust.xts[\"2012::\",] ) )\n\nust.melt$date <- as.Date(ust.melt$date)\nust.melt$value <- as.numeric(ust.melt$value)\nust.melt$indexname <- factor(\n  ust.melt$indexname,\n  levels = colnames(ust.xts)\n)\nust.melt$maturity <- as.numeric(\n  substr(\n    ust.melt$indexname,\n    4,\n    length( ust.melt$indexname ) - 4\n  )\n)\nust.melt$country <- rep( \"US\", nrow( ust.melt ))\n\nbonds.melt <- rbind( jgb.melt, ust.melt )\n\np4 <- xyplot(\n  value ~ date | maturity,\n  groups = country,\n  data = bonds.melt,\n  type = \"l\",\n  col = c(brewer.pal(9,\"Blues\")[5],brewer.pal(9,\"Blues\")[7]),\n  layout = c( length( unique( bonds.melt$maturity ) ), 1 ),\n  panel = function(x, y, subscripts, col, ...) {\n    panel.abline(\n      h = c( \n        sapply( by( y, bonds.melt[subscripts,\"country\"], summary ), min ),\n        sapply( by( y, bonds.melt[subscripts,\"country\"], summary ), max )\n      ),\n      #if(!col){\n      col = col[1:length(unique(bonds.melt[subscripts,\"country\"]))]\n      #} else col = trellis.par.get()$superpose.line$col[1:length(unique(bonds.melt[subscripts,\"country\"]))]\n    )\n    panel.xyplot( x = x, y = y, subscripts = subscripts, col = col, ... )\n    panel.text(\n      x = x[ length(unique(x)) / 2],\n      y = mean(\n        c(\n          sapply( by( y, bonds.melt[subscripts,\"country\"], summary ), max )[1],\n          sapply( by( y, bonds.melt[subscripts,\"country\"], summary ), min )[2]\n        )\n      ),\n      labels = paste0(unique(bonds.melt$maturity)[panel.number()],\"y\"),\n      cex = 0.8,\n      #font = 2,\n      col = \"black\",\n      adj = c(0.5,0.5)\n    )\n  },\n  scales = list( \n    x = list(\n      draw = FALSE\n      #tck = c(1,0),\n      #alternating = 1,\n      #at = min(bonds.melt$date),\n      #labels = format(min(bonds.melt$date),\"%Y\")\n    ),\n    y = list( tck = c(1,0), lwd = c(0,1) )\n  ),\n  strip = FALSE,\n  par.settings = list(axis.line = list(col = 0)),\n  xlab = NULL,\n  ylab = \"Yield\",\n  main = \"JGB and US Yields by Maturity Since Jan 2012\"\n)\np4 <- p4 + layer(\n  panel.abline(\n    h = pretty(bonds.melt$value,4),\n    lty = 3\n  )\n)\np4 \n```"]