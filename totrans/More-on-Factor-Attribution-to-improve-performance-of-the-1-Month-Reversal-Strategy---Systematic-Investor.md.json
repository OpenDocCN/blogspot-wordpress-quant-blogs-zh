["```\n\nbt.make.quintiles.sector <- function(\n\tsector,\t\t# sector data\n\tposition.score,\t# position.score is a factor to form Quintiles sampled at the period.ends\n\tdata,\t\t# back-test object\n\tperiod.ends,\t\n\tn.quantiles = 5,\n\tstart.t = 2,\t# first index at which to form Quintiles\n\tprefix = ''\t\n) \n{\n\t#*****************************************************************\n\t# Re-organize sectors into matrix, assume that sectors are constant in time\n\t#****************************************************************** \n\ttemp = factor(sector)\n\tsector.names = levels(temp)\t\n\t\tn.sectors = len(sector.names)\n\tsectors = matrix(unclass(temp), nr=nrow(position.score), nc=ncol(position.score), byrow=T)\n\n\t#*****************************************************************\n\t# Create Quantiles\n\t#****************************************************************** \n\tposition.score = coredata(position.score)\n\tquantiles = weights = position.score * NA\t\t\t\n\n\tfor( s in 1:n.sectors) {\n\t\tfor( t in start.t:nrow(weights) ) {\n\t\t\tindex = sectors[t,] == s\n\t\t\tn = sum(index)\n\n\t\t\t# require at least 3 companies in each quantile\n\t\t\tif(n > 3*n.quantiles) {\t\t\t\n\t\t\t\tfactor = as.vector(position.score[t, index])\n\t\t\t\tranking = ceiling(n.quantiles * rank(factor, na.last = 'keep','first') / count(factor))\n\n\t\t\t\tquantiles[t, index] = ranking\n\t\t\t\tweights[t, index] = 1/tapply(rep(1,n), ranking, sum)[ranking]\t\t\t\n\t\t\t}\n\t\t}\n\t}\n\tquantiles = ifna(quantiles,0)\n\n\t#*****************************************************************\n\t# Create Q1-QN spread for each Sector\n\t#****************************************************************** \n\tlong = weights * NA\n\tshort = weights * NA\n\tmodels = list()\n\n\tfor( s in 1:n.sectors) {\n\t\tlong[] = 0\n\t\tlong[quantiles == 1 & sectors == s] = weights[quantiles == 1 & sectors == s]\n\t\tlong = long / rowSums(long,na.rm=T)\n\n\t\tshort[] = 0\n\t\tshort[quantiles == n.quantiles & sectors == s] = weights[quantiles == n.quantiles & sectors == s]\n\t\tshort = short / rowSums(short,na.rm=T)\n\n\t\tdata$weight[] = NA\n\t\t\tdata$weight[period.ends,] = long - short\n\t\tmodels[[ paste(prefix,'spread.',sector.names[s], sep='') ]]\t= bt.run(data, silent = T)\t\n\t}\n\n\t#*****************************************************************\n\t# Create Sector - Neutral Q1-QN spread\n\t#****************************************************************** \t\t\n\tlong[] = 0\n\tlong[quantiles == 1] = weights[quantiles == 1]\n\tlong = long / rowSums(long,na.rm=T)\n\n\tshort[] = 0\n\tshort[quantiles == n.quantiles] = weights[quantiles == n.quantiles]\n\tshort = short / rowSums(short,na.rm=T)\n\n\tdata$weight[] = NA\n\t\tdata$weight[period.ends,] = long - short\n\tmodels$spread.sn = bt.run(data, silent = T)\t\n\n\treturn(models)\n}\n\n```"]