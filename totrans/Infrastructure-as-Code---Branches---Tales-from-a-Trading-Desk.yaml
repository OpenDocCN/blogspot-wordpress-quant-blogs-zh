- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: →yaml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-18 05:30:43'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-18 05:30:43
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: →
- en: Infrastructure as Code – Branches | Tales from a Trading Desk
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[基础设施即代码——分支](https://mdavey.wordpress.com/2016/06/30/infrastructure-as-code-branches/)
    | 交易桌面随想'
- en: 来源：[https://mdavey.wordpress.com/2016/06/30/infrastructure-as-code-branches/#0001-01-01](https://mdavey.wordpress.com/2016/06/30/infrastructure-as-code-branches/#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://mdavey.wordpress.com/2016/06/30/infrastructure-as-code-branches/#0001-01-01](https://mdavey.wordpress.com/2016/06/30/infrastructure-as-code-branches/#0001-01-01)
- en: Infrastructure as Code – Branches
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基础设施即代码——分支
- en: Recently has a read of [Infrastructure as Code](http://shop.oreilly.com/product/0636920039297.do).
     One particular topic that is worth calling out is Chapter 10, Software Engineering
    Practices for Infrastructure.  In particular, the “branch” discussion 🙂
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 最近阅读了[基础设施即代码](http://shop.oreilly.com/product/0636920039297.do)。其中一个特别值得关注的话题是第10章，基础设施的软件工程实践。特别是关于“分支”的讨论😊
- en: 'Page 183 clarifies the view that numerous teams have with branches:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 第183页阐明了众多团队与分支的看法：
- en: Rather than continuously integrating changes, many development teams commit
    changes to separate branches in their VCS.  The goal is usually to allow people
    to spend time finishing a large change before they worry about making it work
    with any change that other people are working on
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 许多开发团队并不是持续集成变更，而是将变更提交到他们版本控制系统的不同分支中。目标通常是让人们先花时间完成一次大的变更，然后再担心与其他人正在工作的任何变更协同。
- en: 'This leads nicely into Codebase Organization Patterns, page 267, and the Antipattern:
    Branch-Based Codebases, and the great sub title, “Workflow Effectiveness” 🙂'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这很好地引出了代码库组织模式，第267页，以及反模式：基于分支的代码库，还有那个很棒的副标题，“工作流程有效性”😊
- en: Page 196 provide another good read on testing, and why separate teaming and
    engineering teams is wrong.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 第196页提供了关于测试的另一个很好的阅读内容，以及为什么分离团队和工程团队是错误的。
- en: ~ by mdavey on June 30, 2016.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: ~ mdavey于2016年6月30日。
- en: Posted in [Languages](https://mdavey.wordpress.com/category/languages/)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 发布在[语言](https://mdavey.wordpress.com/category/languages/)
