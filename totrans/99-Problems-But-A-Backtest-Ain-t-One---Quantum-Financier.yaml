- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-18 14:00:13'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024年5月18日14:00:13
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 99 Problems But A Backtest Ain’t One – Quantum Financier
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 99个问题，但回测不是一个问题 - 量子金融家
- en: 来源：[https://quantumfinancier.wordpress.com/2015/03/23/99-problems-but-a-backtest-aint-one/#0001-01-01](https://quantumfinancier.wordpress.com/2015/03/23/99-problems-but-a-backtest-aint-one/#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://quantumfinancier.wordpress.com/2015/03/23/99-problems-but-a-backtest-aint-one/#0001-01-01](https://quantumfinancier.wordpress.com/2015/03/23/99-problems-but-a-backtest-aint-one/#0001-01-01)
- en: Backtesting is a very important step in strategy development. But if you have
    ever went through the full strategy development cycle, you may have realized how
    difficult it is to backtest a strategy properly.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 回测是策略开发中非常重要的一步。但如果你曾经经历过完整的策略开发周期，你可能已经意识到了正确回测策略有多么困难。
- en: People use different tools to implement a backtest depending on their expertise
    and goals. For those with a programming background, [Quantstrat](https://r-forge.r-project.org/scm/viewvc.php/pkg/quantstrat/?root=blotter)
    (R), [Zipline](https://github.com/quantopian/zipline), [PyAlgoTrade](https://github.com/gbeced/pyalgotrade)
    (Python) or [TradingLogic](https://github.com/JuliaQuant/TradingLogic.jl) (Julia)
    are sure to be favorite options. For those preferring a retail product that involves
    less conventional programming, Tradestation or TradingBlox are common options.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 人们使用不同的工具来实施回测，这取决于他们的专业知识和目标。对于那些具有编程背景的人来说，[Quantstrat](https://r-forge.r-project.org/scm/viewvc.php/pkg/quantstrat/?root=blotter)（R）、[Zipline](https://github.com/quantopian/zipline)、[PyAlgoTrade](https://github.com/gbeced/pyalgotrade)（Python）或[TradingLogic](https://github.com/JuliaQuant/TradingLogic.jl)（Julia）肯定是首选。对于那些更喜欢涉及非传统编程的零售产品的人，Tradestation或TradingBlox是常见的选择。
- en: One of the problems with using a third party solution is often the lack of flexibility.
    This doesn’t become apparent until one tries to backtest a strategy that requires
    more esoteric details. Obviously this will not be an issue backtesting the classics
    like moving averages or donchian channel type strategies, but I am sure some of
    you have hit your head on the backtest complexity ceiling more than once. There
    is also the issue of fill assumption. Most backtests I see posted on the blogosphere
    (including the ones present on this humble website) assume trade on the close
    price as a simplifying assumption. While this works well for the purpose of entertaining
    a conversation on the internet, it is not robust enough to be used as the basis
    for decision making to deploy significant capital.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 使用第三方解决方案的问题之一常常是缺乏灵活性。这一点直到一个人试图回测需要更奇特细节的策略时才变得显而易见。显然，这对于回测经典的移动平均线或唐奇安通道类型的策略不会是问题，但我相信你们中的一些人不止一次地遇到了回测复杂性的上限。还有填充假设的问题。我在博客圈看到的大多数回测（包括这个卑微网站上的回测）都假设在简化假设下进行交易。虽然这对于在互联网上进行对话很有用，但不足以作为决策的基础来部署大量资本。
- en: The first time one can actually realize how good (bad) his chosen backtesting
    solution is when the strategy is traded live. However I am always amazed how little
    some traders pay attention to how closely their backtest match their live results.
    To some, it is like the strategy is the step following the backtest. I think this
    is missing on some crucially important part of the trading process, namely the
    feedback loop. There is a lot to be learned in figuring out where the difference
    between simulation and live implementation. In addition to the obvious bugs that
    may have passed through testing, it will quickly become apparent whether your
    backtest assumptions are any good and whether or not they must be revisited. Ideally
    backtested results and live results for the period which the overlap should be
    closely similar. If they are not, one should be asking serious questions and try
    to figure out where the discrepancies come from. In a properly designed simulation
    on slow frequency data (think daily or longer) you should be able to reconcile
    both to the penny. If the backtester is well designed, the difference is probably
    going to center on the fill price at the closing auction being different from
    the last traded price which is typically what gets reported as the close price.
    I always like to pay particular attention to the data I use to generate live signals
    and compare it to the data fed to the simulation engine to find potential signal
    differences as I often find that the live implementation trades off data that
    doesn’t always match with the simulation dataset. Obviously, as the time frame
    diminishes the problems are magnified. Backtesting intraday trading strategies
    is notoriously difficult and beyond the scope of this blog. Let’s just say that
    a good intraday backtester is a great competitive advantage for traders/firms
    willing to put in the development time and money.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: It would be negligent of me to complain about backtesting problem without offering
    some of the processes that I use to improve their quality and ultimately usability.
    First I personally chose not to use a third party backtesting solution. I use
    software that I write, not because it is better than other solutions out there
    but because it allows me to fully customize all aspects of the simulation in a
    way that is intuitive to me. That way I can tune any backtest as part of the feedback
    loop I was referring to earlier to more accurately model live trading. Furthermore,
    as I refined the backtester over time, it slowly morphed into an execution engine
    that could be used with proper adapters to trade live markets. Effectively I have
    a customized backtest for each strategy but they all share a common core of code
    that forms the base of the live trading engine. I also spend quite some time looking
    at live fill vs simulated fills and try to reconcile the two.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: Please do not think that I am trying to tell you that do-it-yourself solution
    is the best. I am simply saying that it is the one that fits me best. The point
    I am trying to make herein is that no matter what solution you decide to use,
    it is valuable to consider the difference between simulated and live results,
    who knows perhaps it will make you appreciate the process even more.I would be
    tremendously interested to hear what readers think on the subject, please share
    some insight in the comment section below so everybody can benefit.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 请不要以为我在试图告诉你自助解决方案是最好的。我只是在说这是最适合我的方案。我在这里要表达的观点是，无论你决定使用什么解决方案，考虑模拟和实际结果之间的差异都是有价值的，谁知道呢，也许这会让你更加欣赏这个过程。我会非常感兴趣听到读者对此的看法，请在下面的评论区分享一些见解，这样每个人都可以受益。
- en: QF
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: QF
