- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-12 19:33:13'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Nodally Xenograte | Coding the markets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://etrading.wordpress.com/2014/04/10/nodally-xenograte/#0001-01-01](https://etrading.wordpress.com/2014/04/10/nodally-xenograte/#0001-01-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Nodally Xenograte
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: April 10, 2014
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Well, [xenograte](http://xenograte.com) from [nodally](http://nodally.com)
    sounds pretty cool: loosely coupled software components in the cloud. [Brad Cox’s
    dream of snap together building blocks](http://virtualschool.edu/cox/pub/PSIR/),
    finally realised. [Yahoo Pipes](http://pipes.yahoo.com/pipes/), anyone? I’ve even
    hacked around similarly motivated code myself, but never got so far of course.
    The problem with these new paradigms is that they ask you to throw away all your
    old software assets so you can rebuild them again in the new framework. A bit
    like media companies asking us to buy the same content over and over on different
    formats: LPs, tapes, CDs, audio DVDs, downloads, pono, VHS, DVD, bluray….  Why
    can’t someone find a way to breath fresh life into existing assets without reengineering
    them. Why not, indeed?'
  prefs: []
  type: TYPE_NORMAL
