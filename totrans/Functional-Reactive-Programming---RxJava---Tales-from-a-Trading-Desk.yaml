- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-18 06:22:03'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: 'Functional Reactive Programming : RxJava | Tales from a Trading Desk'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://mdavey.wordpress.com/2013/07/25/functional-reactive-programming-rxjava/#0001-01-01](https://mdavey.wordpress.com/2013/07/25/functional-reactive-programming-rxjava/#0001-01-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Functional Reactive Programming : RxJava
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Over the years I’ve done a degree of work with Microsoft .NET [Rx](http://msdn.microsoft.com/en-us/data/gg577609.aspx).
    With the recent (last 6mths) visibility of [Netflix](http://www.infoq.com/presentations/netflix-functional-rx)
    [usage](http://techblog.netflix.com/2013/02/rxjava-netflix-api.html) of [RxJava,](https://github.com/Netflix/RxJava/wiki)
    I wonder how many [people](http://thegeez.net/2013/03/25/neflix_rxjava_marble.html)
    in finance are actually using [RxJava](http://www.infoq.com/interviews/christensen-hystrix-rxjava). 
    Apache Camel users can use camel-rx which itself leverages [RxJava](http://camel.apache.org/rx.html). 
    Ben’s slides from QCon provide a good view of [RxJava](http://www.slideshare.net/InfoQ/functional-reactive-programming-in-the-netflix-api).
  prefs: []
  type: TYPE_NORMAL
- en: ~ by mdavey on July 25, 2013.
  prefs: []
  type: TYPE_NORMAL
- en: Posted in [Java](https://mdavey.wordpress.com/category/languages/java/)
  prefs: []
  type: TYPE_NORMAL
- en: 'Tags: [Rx](https://mdavey.wordpress.com/tag/rx/)'
  prefs: []
  type: TYPE_NORMAL
