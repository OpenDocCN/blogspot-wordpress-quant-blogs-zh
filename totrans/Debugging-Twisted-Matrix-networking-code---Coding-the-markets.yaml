- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-12 19:36:08'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Debugging Twisted Matrix networking code | Coding the markets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://etrading.wordpress.com/2011/01/24/debugging-twisted-matrix-networking-code/#0001-01-01](https://etrading.wordpress.com/2011/01/24/debugging-twisted-matrix-networking-code/#0001-01-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Debugging Twisted Matrix networking code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: January 24, 2011
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Debugging Twisted code is an exercise in lateral thinking. The error messages
    and exceptions can be opaque, especially when code wrapped inside a Deferred fails.
    When you get an unhandled error inside a Deferred, check your code for basic errors:
    parameter mismatches, references to undefined variables, or unimported types or
    modules etc. And where you’re deriving from a Twisted base class, check that you’re
    not accidently overriding a member variable. For instance, don’t have a member
    variable called ‘clients’ !'
  prefs: []
  type: TYPE_NORMAL
