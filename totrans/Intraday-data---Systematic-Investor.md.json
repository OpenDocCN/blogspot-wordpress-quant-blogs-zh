["```\n\n###############################################################################\n# Load Systematic Investor Toolbox (SIT)\n# https://systematicinvestor.wordpress.com/systematic-investor-toolbox/\n###############################################################################\ncon = gzcon(url('http://www.systematicportfolio.com/sit.gz', 'rb'))\n    source(con)\nclose(con)\n\n\t#*****************************************************************\n\t# Load historical data\n\t#****************************************************************** \n\tload.packages('quantmod')\t\n\n\t# data from http://thebonnotgang.com/tbg/historical-data/\n\tspath = 'c:/Desktop/'\n\t# http://stackoverflow.com/questions/14440661/dec-argument-in-data-tablefread\n\t\tSys.localeconv()[\"decimal_point\"]\n\t\tSys.setlocale(\"LC_NUMERIC\", \"French_France.1252\")\n\n\tdata <- new.env()\n\tdata$SPY = read.xts(paste0(spath,'SPY_1m.csv'), \n\t\tsep = ';', date.column = 3, format='%Y-%m-%d %H:%M:%S', index.class = c(\"POSIXlt\", \"POSIXt\"))\n\n\tdata$GLD = read.xts(paste0(spath,'GLD_1m.csv'), \n\t\tsep = ';', date.column = 3, format='%Y-%m-%d %H:%M:%S', index.class = c(\"POSIXlt\", \"POSIXt\"))\n\n\t#*****************************************************************\n\t# Create plot for Nov 1, 2012 and 2013\n\t#****************************************************************** \n\tlayout(c(1,1,2))\t\t\n\tplota(data$SPY['2012:11:01'], type='candle', main='SPY on Nov 1st, 2012', plotX = F)\n\tplota(plota.scale.volume(data$SPY['2012:11:01']), type = 'volume')\t\n\n\tlayout(c(1,1,2))\t\t\n\tplota(data$SPY['2013:11:01'], type='candle', main='SPY on Nov 1st, 2013', plotX = F)\n\tplota(plota.scale.volume(data$SPY['2013:11:01']), type = 'volume')\t\n\n```", "```\n\n\t#*****************************************************************\n\t# Data check for Gaps in the series Intraday\n\t#****************************************************************** \n\ti = 'GLD'\n\tdates = index(data[[i]])\n\tfactor = format(dates, '%Y%m%d')\n\tgap = tapply(dates, factor, function(x) max(diff(x)))\n\n\tgap[names(gap[gap > 4*60])]\n\tdata[[i]]['2013:02:19']\n\n\ti = 'SPY'\n\tdates = index(data[[i]])\n\tfactor = format(dates, '%Y%m%d')\n\tgap = tapply(dates, factor, function(x) max(diff(x)))\n\n\tgap[names(gap[gap > 4*60])]\n\tdata[[i]]['2013:02:19']\t\n\n```", "```\n\n20120801   12\n20121226   22\n20130219   48\n20130417    6\n20130531    6\n20130705    8\n20131105    4\n20131112    4\n20140124   14\n20140210   22\n20140303    6\n\n```", "```\n\n> data[[i]]['2013:02:19 14:50::2013:02:19 15:45']\n                        open    high      low   close volume\n2013-02-19 14:50:54 155.3110 155.315 155.3001 155.315   8900\n2013-02-19 14:51:56 155.3100 155.310 155.3100 155.310 119900\n2013-02-19 14:52:52 155.3100 155.330 155.3000 155.305 354600\n2013-02-19 14:53:55 155.2990 155.300 155.2800 155.280      0\n2013-02-19 14:54:54 155.2900 155.290 155.2659 155.279  10500\n2013-02-19 15:42:57 155.3400 155.360 155.3400 155.350 587900\n2013-02-19 15:43:57 155.3501 155.355 155.3300 155.332   8300\n2013-02-19 15:44:59 155.3395 155.340 155.3200 155.340  10700\n2013-02-19 15:45:55 155.3300 155.340 155.3300 155.340   5100\n\n```", "```\n\n\t#*****************************************************************\n\t# Data check : compare with daily\n\t#****************************************************************** \n\tdata.daily <- new.env()\n\t\tquantmod::getSymbols(spl('SPY,GLD'), src = 'yahoo', from = '1970-01-01', env = data.daily, auto.assign = T)   \n\n\tlayout(1)\t\t\n\tplota(data$GLD, type='l', col='blue', main='GLD')\n\t\tplota.lines(data.daily$GLD, type='l', col='red')\n\tplota.legend('Intraday,Daily', 'blue,red')\t\n\n\tplota(data$SPY, type='l', col='blue', main='SPY')\n\t\tplota.lines(data.daily$SPY, type='l', col='red')\n\tplota.legend('Intraday,Daily', 'blue,red')\t\t\n\n```", "```\n\n\t#*****************************************************************\n\t# Round to the next minute\n\t#****************************************************************** \n\tGLD.sample = data$GLD['2012:07:10::2012:07:10 09:35']\n\tSPY.sample= data$SPY['2012:07:10::2012:07:10 09:35']\n\n\tmerge( Cl(GLD.sample), Cl(SPY.sample) )\n\n\t# round to the next minute\n\tindex(GLD.sample) = as.POSIXct(format(index(GLD.sample) + 60, '%Y-%m-%d %H:%M'), format = '%Y-%m-%d %H:%M')\n\tindex(SPY.sample) = as.POSIXct(format(index(SPY.sample) + 60, '%Y-%m-%d %H:%M'), format = '%Y-%m-%d %H:%M')\n\n\tmerge( Cl(GLD.sample), Cl(SPY.sample) )\n\n```", "```\n\n> merge( Cl(GLD.sample), Cl(SPY.sample) )\n                       close close.1\n2012-07-10 09:30:59 155.0900 136.030\n2012-07-10 09:31:59 155.1200 136.139\n2012-07-10 09:32:58 155.1100      NA\n2012-07-10 09:32:59       NA 136.180\n2012-07-10 09:33:56 155.1400      NA\n2012-07-10 09:33:59       NA 136.100\n2012-07-10 09:34:59 155.0999 136.110\n2012-07-10 09:35:59 155.0200 136.180\n\n> merge( Cl(GLD.sample), Cl(SPY.sample) )\n                       close close.1\n2012-07-10 09:31:00 155.0900 136.030\n2012-07-10 09:32:00 155.1200 136.139\n2012-07-10 09:33:00 155.1100 136.180\n2012-07-10 09:34:00 155.1400 136.100\n2012-07-10 09:35:00 155.0999 136.110\n2012-07-10 09:36:00 155.0200 136.180\n\n```", "```\n\n\t#*****************************************************************\n\t# Clean data\n\t#****************************************************************** \n\t# remove dates with gaps over 4 min\n\tfor(i in ls(data)) {\n\t\tdates = index(data[[i]])\n\t\tfactor = format(dates, '%Y%m%d')\n\t\tgap = tapply(dates, factor, function(x) max(diff(x)))\n\t\tdata[[i]] = data[[i]][ is.na(match(factor, names(gap[gap > 4*60]))) ]\n\t}\t\t\n\n\tcommon = unique(format(index(data[[ls(data)[1]]]), '%Y%m%d'))\n\tfor(i in ls(data)) {\n\t\tdates = index(data[[i]])\n\t\tfactor = format(dates, '%Y%m%d')\t\n\t\tcommon = intersect(common, unique(factor))\n\t}\n\n\t# remove days that are not present in both time series\n\tfor(i in ls(data)) {\n\t\tdates = index(data[[i]])\n\t\tfactor = format(dates, '%Y%m%d')\n\t\tdata[[i]] = data[[i]][!is.na(match(factor, common)),]\n\t}\n\n\t#*****************************************************************\n\t# Round to the next minute\n\t#****************************************************************** \n\tfor(i in ls(data))\n\t\tindex(data[[i]]) = as.POSIXct(format(index(data[[i]]) + 60, '%Y-%m-%d %H:%M'), tz = Sys.getenv('TZ'), format = '%Y-%m-%d %H:%M')\n\n```", "```\n\n\t#*****************************************************************\n\t# Load historical data\n\t#****************************************************************** \n\tbt.prep(data, align='keep.all', fill.gaps = T)\n\n\tprices = data$prices   \n\tdates = data$dates\n\t\tnperiods = nrow(prices)\n\n\tmodels = list()\n\n\t#*****************************************************************\n\t# Benchmarks\n\t#****************************************************************** \t\t\t\t\t\t\t\n\tdata$weight[] = NA\n\t\tdata$weight$SPY = 1\n\tmodels$SPY = bt.run.share(data, clean.signal=F)\n\n\tdata$weight[] = NA\n\t\tdata$weight$GLD = 1\n\tmodels$GLD = bt.run.share(data, clean.signal=F)\n\n\tdata$weight[] = NA\n\t\tdata$weight$SPY = 0.5\n\t\tdata$weight$GLD = 0.5\n\tmodels$EW = bt.run.share(data, clean.signal=F)\n\n    #*****************************************************************\n    # Create Report\n    #******************************************************************    \n    strategy.performance.snapshoot(models, T)\t\n\n```"]