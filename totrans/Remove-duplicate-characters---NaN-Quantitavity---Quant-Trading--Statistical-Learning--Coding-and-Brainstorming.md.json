["```\n// Remove duplicated characters\n#include <iostream>\nusing namespace std;\n\n// Method1: no (large) memory; O(n^2)\nvoid rmDuplicated1(char str[]) {\n    int nOld = strlen(str);\n    if (nOld>1) {\n        int nNew = 0;\n        int j;\n        for (int i=0; i < nOld; ++i){  //iterate for each orignal element\n            // check if this element is a nonduplicated one\n            for (j=0; j<nNew; ++j){\n                if (str[j]==str[i])\n                    break;\n            }\n            // if nonduplicated, add it. \n            if (j==nNew){\n                nNew++;\n                str[nNew-1] = str[i];\n            }\n        }\n\n        str[nNew] = 0;\n    }\n}\n\n// Method2: addtional memory; O(n)\nchar* rmDuplicated2(char str[]) {\n    int nOld = strlen(str);\n    if (nOld<2)\n        return str;\n    else{\n        char* newStr = new char[nOld];\n        bool check[256] = {0};\n\n        int nNew = 0;\n        for (int i=0; i < nOld; ++i){\n            if (!check[(int)str[i]]){\n                newStr[nNew] = str[i];\n                nNew++;\n                check[str[i]] = true;\n            }\n        }\n\n        newStr[nNew] = 0;\n        return newStr;\n    }\n}\n\nint main(){\n    char* str = new char[10];\n    strcpy(str, \"aaaBBB\");\n    // char* str = \"Hello\" doesn't work. Cz here str is const type.\n    cout<<str<<endl;\n    rmDuplicated1(str);\n    cout<<str<<endl;\n    cout<<rmDuplicated2(str)<<endl;\n    delete[] str;\n\n    return 0;\n}\n\n//Highlighted at http://tohtml.com/cpp/\n//Bred 3 + C++\n```"]