["```\n Sub getedgelist()\n    Dim clInfo As Range, clWrite As Range, tempcl As Range\n    Dim offsetamt As Integer\n\n    'this will be used throughout to indicate columns to offset for desired date\n    'watch out for hidden rows\n    offsetamt = 15\n\n    'clInfo will be the cell with our reference information\n    Set clInfo = ThisWorkbook.ActiveSheet.Range(\"a9\")\n    'clWrite will be the cell where we write the info that we gather\n    Set clWrite = ThisWorkbook.ActiveSheet.Range(\"u9\")\n\n    Do Until clInfo = \"Total Gross Asset Allocation\"\n        'looking at formatting is probably the easiest way to determine if group or fund\n        'I chose indent to determine if group or fund\n        'IndentLevel = 0 for groups and 1 for funds\n        If clInfo.IndentLevel = 0 Then\n            'if we are on a group write in clWrite the group and each fund within the group\n            'with group as source and fund as target\n            'we will loop until we are at the next group\n            Set tempcl = clInfo\n            'write mutual fund as source, group as target, and weight\n            clWrite.Value = ThisWorkbook.ActiveSheet.Range(\"e6\").Value\n            clWrite.Offset(0, 1).Value = clInfo.Value\n            clWrite.Offset(0, 2).Value = clInfo.Offset(0, offsetamt).Value\n            Set clWrite = clWrite.Offset(1, 0)\n            Do Until tempcl.Offset(1, 0).IndentLevel = 0\n                'now loop through each fund in group\n                'write group as source, held fund as target, and weight\n                clWrite.Value = clInfo.Value\n                clWrite.Offset(0, 1).Value = tempcl.Offset(1, 0).Value\n                clWrite.Offset(0, 2).Value = tempcl.Offset(1, offsetamt).Value\n                'next cell down\n                Set tempcl = tempcl.Offset(1, 0)\n                Set clWrite = clWrite.Offset(1, 0)\n            Loop\n            Set clInfo = clInfo.Offset(1, 0)\n        Else\n\n        End If\n        'if we are on a group write in clWrite the group and each fund within the group\n        'with group as source and fund as target\n        Debug.Print (clInfo)\n        Set clInfo = clInfo.Offset(1, 0)\n    Loop\nEnd Sub\n```", "```\n #sankey of PIMCO All Asset All Authority holdings\n#data source http://investments.pimco.com/ShareholderCommunications/External%20Documents/PIMCO%20Bond%20Stats.xls\n\nrequire(rCharts)\n\n#originally read the data from clipboard of Excel copy\n#for those interested here is how to do it\n#read.delim(file = \"clipboard\")\n\nholdings = read.delim(\"http://timelyportfolio.github.io/rCharts_d3_sankey/holdings.txt\", skip = 3, header = FALSE, stringsAsFactors = FALSE)\ncolnames(holdings) <- c(\"source\",\"target\",\"value\")\n\n#get rid of holdings with 0 weight or since copy/paste from Excel -\nholdings <- holdings[-which(holdings$value == \"-\"),]\nholdings$value <- as.numeric(holdings$value)\n\n#now we finally have the data in the form we need\nsankeyPlot <- rCharts$new()\nsankeyPlot$setLib('http://timelyportfolio.github.io/rCharts_d3_sankey')\n\nsankeyPlot$set(\n  data = holdings,\n  nodeWidth = 15,\n  nodePadding = 10,\n  layout = 32,\n  width = 750,\n  height = 500,\n  labelFormat = \".1%\"\n)\n\nsankeyPlot\n```"]