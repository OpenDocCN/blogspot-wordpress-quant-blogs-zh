["```\n#thanks so much to the developers of quantstrat\n#99% of this code comes from the demos in the quantstrat package   \n```", "```\n#in this I make 4 changes to that posted 6/2/2011\n#1.Add another index GDAXI (German Dax) for additional testing;\n# for now use USD but see faberMC demo for currency fun;\n# I'll save more for out of sample testing\n#2.Change the number of periods (in this case weeks) to 50 from 20\n# so we have less signals and enjoy life more.  I also added this as\n# variable early in the code, so we only have to change once to apply\n# across the system and charts\n#3.Change the gt(>) –0.5 that I hacked originally to the more correct\n# gte (>=) 0 relationship provided by quantstrat\n#4.Added the CUD indicator to the chart.Posn with add_TA\n# (note add_TA works and TA=”addTA..” does not) and removed\n# the log=TRUE option which does not work   \n```", "```\n#now let's define our silly countupdown function\nCUD <- function(price,n) {\n\t#CUD takes the n-period sum of 1 (up days) and -1 (down days)\n\ttemp<-runSum(ifelse(ROC(price,1,type=\"discrete\") > 0,1,-1),n)\n\tcolnames(temp) <- \"CUD\"\n\ttemp\n}   \n```", "```\nrequire(quantstrat)\n```", "```\ntry(rm(\"order_book.CUD\",pos=.strategy),silent=TRUE)\ntry(rm(\"account.CUD\",\"portfolio.CUD\",pos=.blotter),silent=TRUE)\ntry(rm(\"port.st\",\"symbols\",\"symbol\",\"stratCUD\",\"initDate\",\"initEq\",\n\t'start_t','end_t','num_periods'),silent=TRUE)   \n```", "```\n#specify this for the rolling periods to use for our signal\nnum_periods=50   \n```", "```\n# Initialize a strategy object\nstratCUD <- strategy(\"CUD\")  \n```", "```\n# Add an indicator\nstratCUD <- add.indicator(strategy = stratCUD, name = \"CUD\", \n\targuments = list(price = quote(Cl(mktdata)),n=num_periods),\n\tlabel=\"CUD\")   # enter when CUD > 0\nstratCUD <- add.signal(strategy = stratCUD, name=\"sigThreshold\",\n\targuments = list(threshold=0, column=\"CUD\",relationship=\"gte\", cross=TRUE),\n\tlabel=\"CUD.gte.0\")\n# exit when CUD < 0\nstratCUD <- add.signal(strategy = stratCUD, name=\"sigThreshold\",\n\targuments = list(threshold=0, column=\"CUD\",relationship=\"lt\",cross=TRUE),\n\tlabel=\"CUD.lt.0\")   stratCUD <- add.rule(strategy = stratCUD, name='ruleSignal', \n\targuments = list(sigcol=\"CUD.gte.0\", sigval=TRUE, orderqty=1000, ordertype='market',\n\t orderside='long', pricemethod='market', replace=FALSE), type='enter', path.dep=TRUE)\nstratCUD <- add.rule(strategy = stratCUD, name='ruleSignal', \n\targuments = list(sigcol=\"CUD.lt.0\", sigval=TRUE, orderqty='all',\n\t ordertype='market', orderside='long', pricemethod='market', replace=FALSE),\n\t type='exit', path.dep=TRUE)   currency(\"USD\")\nsymbols = c(\"GSPC\",\"GDAXI\")\nfor (symbol in symbols) {\n\tstock(symbol, currency=\"USD\",multiplier=1)\n\t#use paste with ^ to get index data\n\tgetSymbols(paste(\"^\",symbol,sep=\"\"),adjust=T,from=\"1900-12-31\")\n\tassign(symbol,to.weekly(get(symbol)))\n}   \n```", "```\ninitDate='1950-12-31'\ninitEq=100000\nport.st<-'CUD' \n```", "```\n#use a string here for easier changing of parameters and re-trying   \n```", "```\ninitPortf(port.st, symbols=symbols, initDate=initDate)\ninitAcct(port.st, portfolios=port.st, initDate=initDate)\ninitOrders(portfolio=port.st, initDate=initDate)   \n```", "```\nprint(\"setup completed\")   \n```", "```\n# Process the indicators and generate trades\nstart_t<-Sys.time()\nout<-try(applyStrategy(strategy=stratCUD , portfolios=port.st ) )\nend_t<-Sys.time()\nprint(\"Strategy Loop:\")\nprint(end_t-start_t)   start_t<-Sys.time()\nupdatePortf(Portfolio=port.st,Dates=paste('::',as.Date(Sys.time()),sep=''))\nend_t<-Sys.time()\nprint(\"trade blotter portfolio update:\")\nprint(end_t-start_t)   \n```", "```\n# hack for new quantmod graphics, remove later\nthemelist<-chart_theme()\nthemelist$col$up.col<-'lightgreen'\nthemelist$col$dn.col<-'pink'   \n```", "```\nfor(symbol in symbols){\n\tdev.new()\n\tchart.Posn(Portfolio=port.st,Symbol=symbol,theme=themelist)\n\t#add the CUD indicator to the bottom of the chart\n\tplot(add_TA(CUD(get(symbol)[,4],n=num_periods)))\n}\n```"]