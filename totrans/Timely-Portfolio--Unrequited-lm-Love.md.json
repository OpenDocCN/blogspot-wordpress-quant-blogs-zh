["```\n#second version\n#this one actually has an additional mean reverting element\n#for markets that have moved down so long entry is quicker   require(PerformanceAnalytics)\nrequire(quantmod)   #set this up to get either FRED or Yahoo!Finance\n#getSymbols(\"RUT\",src=\"FRED\")\ngetSymbols(\"^RUT\",from=\"1896-01-01\",to=Sys.Date())     RUT <- to.weekly(RUT)[,4]\nRUTmean <- runMean(RUT,n=30)\n#index(RUT) <- as.Date(index(RUT))   width = 10\nfor (i in (width+1):NROW(RUT)) {\n\tlinmod <- lm(RUT[((i-width):i),1]~index(RUT[((i-width):i)]))\n\tifelse(i==width+1,signal <- coredata(linmod$residuals[length(linmod$residuals)]),\n\t\tsignal <- rbind(signal,coredata(linmod$residuals[length(linmod$residuals)])))\n\tifelse(i==width+1,signal2 <- coredata(linmod$coefficients[2]),\n\t\tsignal2 <- rbind(signal2,coredata(linmod$coefficients[2])))\n\tifelse(i==width+1,signal3 <- cor(linmod$fitted.values,RUT[((i-width):i),1]),\n\t\tsignal3 <- rbind(signal3,cor(linmod$fitted.values,RUT[((i-width):i),1])))\n}\nsignal <- as.xts(signal,order.by=index(RUT[(width+1):NROW(RUT)]))\nsignal2 <- as.xts(signal2,order.by=index(RUT[(width+1):NROW(RUT)]))\nsignal3 <- as.xts(signal3,order.by=index(RUT[(width+1):NROW(RUT)]))\nsignal4 <- ifelse(RUT > RUTmean,1,0)   price_ret_signal <- merge(RUT,lag(signal,k=1),\n\tlag(signal2,k=1),lag(signal3,k=1),lag(signal4,k=1),lag(ROC(RUT,type=\"discrete\",n=15),k=1),\n\tROC(RUT,type=\"discrete\",n=1))\nprice_ret_signal[,2] <- price_ret_signal[,2]/price_ret_signal[,1]\nprice_ret_signal[,3] <- price_ret_signal[,3]/price_ret_signal[,1]   #ret <- ifelse((runMin(price_ret_signal[,3],n=10) >= 0  &\n#\trunSum(price_ret_signal[,2],n=30) >= 0.0) | \n#\t(runMin(price_ret_signal[,3],30) < 0 & \n#\trunSum(price_ret_signal[,2],n=50) >= 0.02),\n#\t 1, 0) * price_ret_signal[,5]\n#ret <- ifelse(runSum(price_ret_signal[,3],n=10) >= 0, 1, 0) * price_ret_signal[,5]   ret <- ifelse((price_ret_signal[,5] == 1) | (price_ret_signal[,5] == 0  & \n\trunMean(price_ret_signal[,3],n=50) > 0 & runMean(price_ret_signal[,2],n=10) < 0 ),\n\t1, 0) * price_ret_signal[,7]   retCompare <- merge(ret, price_ret_signal[,7])\ncolnames(retCompare) <- c(\"Linear System\", \"BuyHold\")\n#jpeg(filename=\"performance summary.jpg\",\n#\tquality=100,width=6.25, height = 8,  units=\"in\",res=96)\ncharts.PerformanceSummary(retCompare,ylog=TRUE,cex.legend=1.2,\n\tcolorset=c(\"black\",\"gray70\"),main=\"RUT System Return Comparison\")\n#dev.off()   require(ggplot2)\ndf <- as.data.frame(na.omit(merge(price_ret_signal[,5],price_ret_signal[,7])))\ncolnames(df) <- c(\"signal_avg\",\"return\")\n#jpeg(filename=\"boxplot by average.jpg\",\n#\tquality=100,width=6.25, height = 8,  units=\"in\",res=96)\nggplot(df,aes(x=factor(signal_avg),y=return)) + geom_boxplot()\n#dev.off()   df2 <- as.data.frame(na.omit(merge(ifelse((price_ret_signal[,5] == 0  & \n\trunMean(price_ret_signal[,3],n=50) > 0 & runSum(price_ret_signal[,2],n=10) < 0 ),\n\t1, 0),price_ret_signal[,7])))\ncolnames(df2) <- c(\"signal_other\",\"return\")\n#jpeg(filename=\"boxplot by other signal.jpg\",\n#\tquality=100,width=6.25, height = 8,  units=\"in\",res=96)\nggplot(df2,aes(x=factor(signal_other),y=return)) + geom_boxplot()\n#dev.off()   df3 <- as.data.frame(na.omit(merge(ifelse((price_ret_signal[,5] == 1) |\n\t(price_ret_signal[,5] == 0  & \n\trunMean(price_ret_signal[,3],n=50) > 0 & runMean(price_ret_signal[,2],n=10) < 0 ),\n\t1, 0),price_ret_signal[,7])))\ncolnames(df3) <- c(\"signals_all\",\"return\")\n#jpeg(filename=\"boxplot by long signal.jpg\",\n#\tquality=100,width=6.25, height = 8,  units=\"in\",res=96)\nggplot(df3,aes(x=factor(signals_all),y=return)) + geom_boxplot()\n#dev.off()   #jpeg(filename=\"text plot of return and risk.jpg\",\n#\tquality=100,width=6.25, height = 6.25,  units=\"in\",res=96)\ntextplot(rbind(table.AnnualizedReturns(retCompare),\n\ttable.DownsideRisk(retCompare)[c(1:3,7,11),]))\n#dev.off()\n```"]