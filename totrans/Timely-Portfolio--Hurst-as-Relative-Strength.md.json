["```\n#check Hurst exponent system as a potential relative strength signal\n#this code is ugly and not very flexible\n#I will continue to refine   require(quantmod)\nrequire(PerformanceAnalytics)\nrequire(FGN)   #sort of random mix for additional testing\nindexes<-c(\"GSPC\",\"GDAXI\",\"N225\")\ngetSymbols(paste(\"^\",indexes,sep=\"\"),\n\tfrom=\"1900-01-01\",to=format(Sys.Date(),\"%Y-%m-%d\"))\nfor (i in 1:length(indexes)) {\n\t#set monthly index to first day of the month\n\tassign(indexes[i],to.monthly(get(indexes[i]))[,4])\n\t#has to be a cleaner way than this to set the index\n\tassign(indexes[i],as.xts(coredata(get(indexes[i])),\n\t\torder.by=as.Date(index(get(indexes[i])))))\n}\n#get monthly changes\nretGSPC<-ROC(GSPC,n=1,type=\"discrete\")\nretGDAXI<-ROC(GDAXI,n=1,type=\"discrete\")\nretN225<-ROC(N225,n=1,type=\"discrete\")\nindex(retGSPC) <- as.Date(index(retGSPC))\nindex(retGDAXI) <- as.Date(index(retGDAXI))\nindex(retN225) <- as.Date(index(retN225))   hurstKGSPC <- apply.rolling(retGSPC, FUN=\"HurstK\", width = 12)\nhurstKGDAXI <- apply.rolling(retGDAXI, FUN=\"HurstK\", width = 12)\nhurstKN225 <- apply.rolling(retN225, FUN=\"HurstK\", width = 12)   serialcorrGSPC <- runCor(cbind(coredata(retGSPC)),cbind(index(retGSPC)),n=12)\nserialcorrGDAXI <- runCor(cbind(coredata(retGDAXI)),cbind(index(retGDAXI)),n=12)\nserialcorrN225 <- runCor(cbind(coredata(retN225)),cbind(index(retN225)),n=12)\nserialcorrGSPC <- as.xts(serialcorrGSPC,order.by=index(retGSPC))\nserialcorrGDAXI <- as.xts(serialcorrGDAXI,order.by=index(retGDAXI))\nserialcorrN225 <- as.xts(serialcorrN225,order.by=index(retN225))   autoregGSPC <- runCor(retGSPC,lag(retGSPC,k=1),n=12)\nautoregGDAXI <- runCor(retGDAXI,lag(retGDAXI,k=1),n=12)\nautoregN225 <- runCor(retN225,lag(retN225,k=1),n=12)   signalUpTrendGSPC <- runMean(hurstKGSPC+serialcorrGSPC+autoregGSPC,n=6) +\n\t(GSPC/runMean(GSPC,n=12)-1)*10\nsignalUpTrendGDAXI <- runMean(hurstKGDAXI+serialcorrGDAXI+autoregGDAXI,n=6) +\n\t(GDAXI/runMean(GDAXI,n=12)-1)*10\nsignalUpTrendN225 <- runMean(hurstKN225+serialcorrN225+autoregN225,n=6) +\n\t(N225/runMean(N225,n=12)-1)*10   #merge returns and lagged signal into one xts for evaluation\nret_signals <- merge(na.omit(merge(retGSPC,retGDAXI,retN225)),\n\tlag(na.omit(merge(signalUpTrendGSPC,signalUpTrendGDAXI,signalUpTrendN225)),k=1))   #get return from the strongest Hurst exponent\nretSys <- ifelse(ret_signals[,4]>ret_signals[,5]&ret_signals[,4]>ret_signals[,6]&ret_signals[,4]>1&(ret_signals[,5]>0.75|ret_signals[,6]>0.75),1,0)*ret_signals[,1]+\n\tifelse(ret_signals[,5]>ret_signals[,4]&ret_signals[,5]>ret_signals[,6]&ret_signals[,5]>1&(ret_signals[,4]>0.75|ret_signals[,6]>0.75),1,0)*ret_signals[,2]+\n\tifelse(ret_signals[,6]>ret_signals[,4]&ret_signals[,6]>ret_signals[,5]&ret_signals[,6]>1&(ret_signals[,4]>0.75|ret_signals[,5]>0.75),1,0)*ret_signals[,3]   #fill NAs from beginnning periods with no signal with 0\nretSys[is.na(retSys)] <- 0   retCompare <- merge(retSys,ret_signals[,1:3])\ncolnames(retCompare) <- c(\"Hurst RS System\",\"SP500\",\"DAX\",\"N225\")\n#jpeg(filename=\"HurstRS.jpg\",quality=100,width=6.25, height = 5, \n#\tunits=\"in\",res=96) \ncharts.PerformanceSummary(retCompare[19:NROW(retCompare),],ylog=TRUE,cex.legend=1.25,\n\tcolorset=c(\"cadetblue\",\"darkolivegreen3\",\"purple\",\"gray70\"))\n#dev.off()     #for some risk return comparison\n#jpeg(filename=\"HurstRSRiskReturn.jpg\",quality=100,width=6.25, height = 5, \n#\tunits=\"in\",res=96) \nchart.RiskReturnScatter(retCompare[19:NROW(retCompare),],\n\tmain=\"Risk Return of Hurst RS System and Indexes\")\n#dev.off()   #for some ggplot2 risk bar charts\nrequire(ggplot2)\n#jpeg(filename=\"HurstRSRisk.jpg\",quality=100,width=6.25, height = 5, \n#\tunits=\"in\",res=96) \ndownsideTable<-melt(cbind(rownames(table.DownsideRisk(retCompare)),table.DownsideRisk(retCompare)))\ncolnames(downsideTable)<-c(\"Statistic\",\"Portfolio\",\"Value\")\nggplot(downsideTable, stat=\"identity\", aes(x=Statistic,y=Value,fill=Portfolio)) +\n\tgeom_bar(position=\"dodge\") + coord_flip()\n#dev.off()\n```"]