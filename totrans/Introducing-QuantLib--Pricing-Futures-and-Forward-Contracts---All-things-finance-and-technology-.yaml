- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-18 06:46:55'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: 'Introducing QuantLib: Pricing Futures and Forward Contracts | All things finance
    and technology…'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://mhittesdorf.wordpress.com/2013/04/02/introduction-to-quantlib-pricing-futures-and-forward-contracts/#0001-01-01](https://mhittesdorf.wordpress.com/2013/04/02/introduction-to-quantlib-pricing-futures-and-forward-contracts/#0001-01-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In this installment of my series on QuantLib, I’m going to show how to price
    a forward contract on a fixed rate bond. A forward contract obligates the buyer
    to purchase an underlying asset at a specified future point in time at a specified
    strike price from the seller of the forward contract, who is likewise obligated
    to deliver the underlying asset at the agreed strike price. At the inception of
    the contract, the strike price is established as the expected future value of
    the underlying asset, which we learned how to calculate in an earlier post in
    this series.
  prefs: []
  type: TYPE_NORMAL
- en: A futures contract is a standardized, exchange-traded forward contract with
    daily mark-to-market.  For the purposes of this post, we will assume that futures
    and forward prices are equivalent. For the subtleties that can cause futures and
    forward price to diverge in the real world, I recommend that you read Chapter
    5 of John Hull’s classic book, “Options, futures and Other Derivatives, 6th Edition”.
  prefs: []
  type: TYPE_NORMAL
- en: 'To calculate the (strike) price of a forward contract on a fixed-rate bond,
    which is an asset with a known, fixed income consisting of regular coupon payments,
    the following formula is used, where K = the forward price at issuance, S0 = the
    underlying asset’s price at issuance, I = the present value of any income received
    during the life of the forward contract, r = the interest rate and T is the tenor
    of the contract:'
  prefs: []
  type: TYPE_NORMAL
- en: K = (S0 – I)e^rT
  prefs: []
  type: TYPE_NORMAL
- en: 'As time progresses and/or interest rates move subsequent to the issuance of
    the forward contract, the value of the forward contract changes. To reprice the
    contract, the following formula is used, with all the variables as defined previously:'
  prefs: []
  type: TYPE_NORMAL
- en: F = S0 – I – Ke^-rT
  prefs: []
  type: TYPE_NORMAL
- en: The QuantLib code to price a 15 month forward contract on a 3% fixed rate bond
    with a face value of 100 and 5% coupons paid annually is shown below.  The code
    also demonstrates how to re-value the forward given both a 1% up and down shift
    in the level of interest rates. Take note of the `[RelinkableHandle<YieldTermStructure>](http://quantlib.org/reference/class_quant_lib_1_1_relinkable_handle.html)`
    , which is a powerful QuantLib programming construct that enables a new, updated
    yield curve to be ‘re-linked’ to the existing forward contract, which causes the
    forward contract to reprice itself at the higher or lower interest rate when the
    `FixedRateBondForward::NPV()` method is called.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The output of this code when run is:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Bond price: 105.657'
  prefs: []
  type: TYPE_NORMAL
- en: 'Cash flow: April 2nd, 2014, 5.00'
  prefs: []
  type: TYPE_NORMAL
- en: 'Cash flow: April 2nd, 2015, 5.00'
  prefs: []
  type: TYPE_NORMAL
- en: 'Cash flow: April 4th, 2016, 5.00'
  prefs: []
  type: TYPE_NORMAL
- en: 'Cash flow: April 4th, 2016, 100.00'
  prefs: []
  type: TYPE_NORMAL
- en: 'Expiration of forward contract: July 2nd, 2014'
  prefs: []
  type: TYPE_NORMAL
- en: 'Days to maturity of forward contract: 455'
  prefs: []
  type: TYPE_NORMAL
- en: 'Strike price of forward contract is: 104.61'
  prefs: []
  type: TYPE_NORMAL
- en: 'Bond forward contract value: -0.00'
  prefs: []
  type: TYPE_NORMAL
- en: 'Bond forward contract value (rates up 1 percent): -1.63'
  prefs: []
  type: TYPE_NORMAL
- en: 'Bond forward contract value (rates down 1 percent): 1.70`'
  prefs: []
  type: TYPE_NORMAL
- en: As expected, the value of the forward contract is zero, when first issued. The
    value of the forward contract falls when interest rates go up/the bond price goes
    down and vice versa when interest rates decline/the bond’s price rises.
  prefs: []
  type: TYPE_NORMAL
- en: I hope you enjoyed this latest post explaining how to value forward and futures
    contracts with QuantLib. Check back soon and, as always, please feel free to leave
    comments and questions. Have fun with QuantLib!
  prefs: []
  type: TYPE_NORMAL
- en: About Mick Hittesdorf
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: I'm a versatile technical leader with a passion for data analytics, data science
    and Big Data technology. I have experience working for both large and small organizations,
    in a variety of roles. I've been responsible for the management and operations
    of a global data science and analytics platform, developed low latency, proprietary
    trading systems, managed software development teams, defined enterprise architecture
    strategies, written white papers and blogs, published articles in industry journals
    and delivered innovative solutions to clients, both in a consulting and technical
    sales capacity. My current areas of focus include Big Data, data engineering,
    data science, R, and Cloud computing
  prefs: []
  type: TYPE_NORMAL
