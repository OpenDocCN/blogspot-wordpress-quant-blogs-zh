- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-12 23:06:21'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: 'Falkenblog: Defining Theoretical Success'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[http://falkenblog.blogspot.com/2008/07/defining-theoretical-success.html#0001-01-01](http://falkenblog.blogspot.com/2008/07/defining-theoretical-success.html#0001-01-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: I'm clearly never going to understand string theory, but as it has no falsifiable
    results, I just don't see the point. Or rather, I'm unimpressed by elegance and
    consistency, because if you take a fixed set of phenomenon, people are smart enough
    to create an elegant, consistent set of mathematics to describe it. But only if
    it predicts something new, integrates (simplifies), or solves a puzzle. I don't
    know how many times I've read an economic paper that has 'rich' results because
    it can accommodate everything in some very complex way. If you think that math
    is good in of itself, this is really great stuff, but math has too many 'degrees
    of freedom'. Sure there are examples of neat math seeming irrelevant and then
    becoming really useful, but those are exceptions (Riemann spaces and General relativity).
    Neat math is not useful in itself, especially today when there are tens of thousands
    of theorems published every year.
  prefs: []
  type: TYPE_NORMAL
- en: '[Leonard Susskind](http://en.wikipedia.org/wiki/Leonard_Susskind)'
  prefs: []
  type: TYPE_NORMAL
- en: ', one of the founding fathers of string theory, is interviewed'
  prefs: []
  type: TYPE_NORMAL
- en: '[here](http://kqed02.streamguys.us/anon.kqed/radio/forum/2006/07/2006-07-31b-forum.mp3)'
  prefs: []
  type: TYPE_NORMAL
- en: . He is asked, "Can you cite any published results that support the main contentions
    of string theory?" He answers, "Yes! The existence of gravity, the existence of
    particles."
  prefs: []
  type: TYPE_NORMAL
- en: That's what I would call an 'in sample' result.
  prefs: []
  type: TYPE_NORMAL
