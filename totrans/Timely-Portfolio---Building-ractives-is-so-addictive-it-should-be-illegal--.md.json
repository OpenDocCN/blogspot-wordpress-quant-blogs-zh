["```\n#' Translate the data object to the format expected by current template\n\n#'\n\n#' @param data input data object\n\n#' @param opts options of current template\n\n#' @return The opts variable with the opts$data variable filled in\n\ntranslate <- function(data, opts = NULL) {\n\n    require(df2json)\n\n    # I would like to generalize this to handle both price and return right\n\n    # now just handles return clickme template.Rmd javascript can handle\n\n    # prices or cumulative so we will send cumulative which can serve as price\n\n    # remove na\n\n    data[is.na(data)] <- 0\n\n    # get cumulative growth\n\n    data <- cumprod(1 + data)\n\n    # convert to data frame\n\n    data.df <- data.frame(cbind(format(index(data), \"%Y-%m-%d\"), coredata(data)))\n\n    colnames(data.df)[1] = \"date\"\n\n    # melt the data frame so we have our data in long form\n\n    data.melt <- melt(data.df, id.vars = 1, stringsAsFactors = FALSE)\n\n    colnames(data.melt) <- c(\"date\", \"indexname\", \"price\")\n\n    # remove periods from indexnames to prevent javascript confusion these .\n\n    # usually come from spaces in the colnames when melted\n\n    data.melt[, \"indexname\"] <- apply(matrix(data.melt[, \"indexname\"]), 2, gsub, \n\n        pattern = \"[.]\", replacement = \"\")\n\n    opts$data <- df2json(data.melt)\n\n    opts\n\n} \n```", "```\n# if not already installed, uncomment the tow lines below\n\n# library(devtools) install_github('clickme', 'nachocab')\n\nrequire(clickme)\n\n# set location where you put your multiline ractive\n\nset_root_path(\"your-path-goes-here/ractives\") \n```", "```\nrequire(PerformanceAnalytics)\n\ndata(managers)  #although I use managers, really any xts series of returns will work\n\nclickme(managers, \"multiline\") \n```"]