- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-18 05:32:46'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: 'Data Lake: Which RDF Data Store? | Tales from a Trading Desk'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://mdavey.wordpress.com/2016/05/03/which-rdf-data-store/#0001-01-01](https://mdavey.wordpress.com/2016/05/03/which-rdf-data-store/#0001-01-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Data Lake: Which RDF Data Store?'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A number of triple stores are listed [here](https://www.w3.org/2001/sw/wiki/Java).
     GraphDB looks [interesting](http://graphdb.ontotext.com/graphdb/), but I suspect
    the enterprise edition tips the scale towards an Open Source solution.  In the
    world of big data, I suspect you really want SPARSQL over [Hadoop](https://jena.apache.org/documentation/hadoop/)?
  prefs: []
  type: TYPE_NORMAL
- en: store data in a key value store in Hadoop [Hbase], but then index it with our
    [graph](http://www.datanami.com/2015/05/26/hadoop-triple-stores-and-the-semantic-data-lake/)
    database so that we can do these SPARQL queries
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'This is echo’d by “Avoiding Three Common [Pitfalls](http://data-informed.com/avoiding-three-common-pitfalls-data-lakes/)
    of Data Lakes”:'
  prefs: []
  type: TYPE_NORMAL
- en: Smart data technologies substantially reduce the complexity of data lake implementations
    while accelerating the time-to-value they produce. The graph-based model and detailed
    descriptions of data elements they enable substantially enhance integration efforts,
    enabling business users to link data according to relevant attributes that provide
    pivotal context across data sources and business models. Resource Description
    Framework (RDF) graphs are designed to incorporate new data and sources without
    having to re-configure existing representations. The result is considerably decreased
    time to a more profound form of analytics, in which users can not only ask more
    questions more expediently than before, but also determine relationships and data
    context to issue ad-hoc queries for specific needs.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Although older, still of interest “Storing (and querying) RDF in [NoSQL](http://www.snee.com/bobdc.blog/2013/12/storing-and-querying-rdf-in-no.html)
    database managers”
  prefs: []
  type: TYPE_NORMAL
- en: The paper then describes the storage and querying of RDF using HBase with Jena
    for querying, HBase with Hive as the query engine (with Jena’s ARQ to parse the
    queries before converting them to HiveQL), CumulusRDF (Cassandra with Sesame),
    and Couchbase
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Which leads to the following possible options:'
  prefs: []
  type: TYPE_NORMAL
- en: RDF data store used to index your data lake
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[D2R](http://d2rq.org/) on top of your data lake'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anyone got a view?
  prefs: []
  type: TYPE_NORMAL
- en: ~ by mdavey on May 3, 2016.
  prefs: []
  type: TYPE_NORMAL
- en: Posted in [Data](https://mdavey.wordpress.com/category/data/)
  prefs: []
  type: TYPE_NORMAL
