["```\n\n###############################################################################\n# Load Systematic Investor Toolbox (SIT)\n# https://systematicinvestor.wordpress.com/systematic-investor-toolbox/\n###############################################################################\nsetInternet2(TRUE)\ncon = gzcon(url('http://www.systematicportfolio.com/sit.gz', 'rb'))\n    source(con)\nclose(con)\n\t#*****************************************************************\n\t# Load historical data\n\t#****************************************************************** \n\tload.packages('quantmod')\n\n\ttickers = spl('SPY')\n\n\tdata <- new.env()\n\tgetSymbols.extra(tickers, src = 'yahoo', from = '1980-01-01', env = data, set.symbolnames = T, auto.assign = T)\n\t\tfor(i in data$symbolnames) data[[i]] = adjustOHLC(data[[i]], use.Adjusted=T)\n\tbt.prep(data, align='keep.all', fill.gaps = T)\n\n\t#*****************************************************************\n\t# Setup\n\t#*****************************************************************\n\tprices = data$prices\n\t\tn = ncol(prices)\n\n\tdates = data$dates\t\n\n\tmodels = list()\n\n\tuniverse = prices > 0\n\t\t# 100 day SMA filter\n\t\tuniverse = universe & prices > SMA(prices,100)\n\n\t# Find Fed Days\n\tinfo = get.FOMC.dates(F)\n\t\tkey.date.index = na.omit(match(info$day, dates))\n\n\tkey.date = NA * prices\n\t\tkey.date[key.date.index,] = T\n\n\t#*****************************************************************\n\t# Strategy\n\t#*****************************************************************\n\tsignals = list(T0=0)\n\t\tfor(i in 1:15) signals[[paste0('N',i)]] = 0:i\t\n\tsignals = calendar.signal(key.date, signals)\n\tmodels = calendar.strategy(data, signals, universe = universe)\n\n\tstrategy.performance.snapshoot(models, T, sort.performance=F)\n\n```", "```\n\n\t# custom stats\t\n\tout = sapply(models, function(x) list(\n\t\tCAGR = 100*compute.cagr(x$equity),\n\t\tMD = 100*compute.max.drawdown(x$equity),\n\t\tWin = x$trade.summary$stats['win.prob', 'All'],\n\t\tProfit = x$trade.summary$stats['profitfactor', 'All']\n\t\t))\t\n\tperformance.barchart.helper(out, sort.performance = F)\n\n\tstrategy.performance.snapshoot(models$N15, control=list(main=T))\n\n\tlast.trades(models$N15)\n\n\ttrades = models$N15$trade.summary$trades\n\t\ttrades = make.xts(parse.number(trades[,'return']), as.Date(trades[,'entry.date']))\n\tlayout(1:2)\n\t\tpar(mar = c(4,3,3,1), cex = 0.8) \n\tbarplot(trades, main='N15 Trades', las=1)\n\tplot(cumprod(1+trades/100), type='b', main='N15 Trades', las=1)\n\n```"]