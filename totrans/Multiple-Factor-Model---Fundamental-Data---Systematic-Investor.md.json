["```\n\n###############################################################################\n# Load Systematic Investor Toolbox (SIT)\n# https://systematicinvestor.wordpress.com/systematic-investor-toolbox/\n###############################################################################\ncon = gzcon(url('http://www.systematicportfolio.com/sit.gz', 'rb'))\n    source(con)\nclose(con)\n\n###############################################################################\n# determine date when fundamental data is available\n# use 'date preliminary data loaded' when available\n# otherwise lag 'quarter end date' 2 months for Q1/2/3 and 3 months for Q4\n###############################################################################\t\t\ndate.fund.data <- function(data)\n{\n\t# construct date\n\tquarter.end.date = as.Date(paste(data['quarter end date',], '/1', sep=''), '%Y/%m/%d')\t\n\tquarterly.indicator = data['quarterly indicator',]\n\tdate.preliminary.data.loaded = as.Date(data['date preliminary data loaded',], '%Y-%m-%d') + 1\n\n\tmonths = seq(quarter.end.date[1], tail(quarter.end.date,1)+365, by='1 month') \n\tindex = match(quarter.end.date, months)\n\tquarter.end.date = months[ iif(quarterly.indicator == '4', index+3, index+2) + 1 ] - 1\n\n\tfund.date = date.preliminary.data.loaded\n\t\tfund.date[is.na(fund.date)] = quarter.end.date[is.na(fund.date)] \n\n\treturn(fund.date)\n}\n\n\t#*****************************************************************\n\t# Load historical fundamental data\n\t# http://advfn.com/p.php?pid=financials&symbol=NYSE:WMT&mode=quarterly_reports\n\t#****************************************************************** \n\tSymbol = 'NYSE:WMT'\t\n\tfund = fund.data(Symbol, 80)\n\n\t# construct date\n\tfund.date = date.fund.data(fund)\t\n\n\t#*****************************************************************\n\t# Create and Plot Earnings per share\n\t#****************************************************************** \n\tEPS.Q = as.double(fund['Diluted EPS from Total Operations',])\n\t\tEPS.Q = as.xts(EPS.Q, fund.date)\t\n\tEPS = runSum(EPS.Q, 4)\n\n\t# Plot\n\tlayout(1:2)\n\tpar(mar=c(2,2,2,1))\n\tx = barplot(EPS.Q, main='Wal-Mart Quarterly Earnings per share', border=NA)\n\ttext(x, EPS.Q, fund['quarterly indicator',], adj=c(0.5,-0.3), cex=0.8, xpd = TRUE)\n\n\tbarplot(EPS, main='Wal-Mart Rolling Annual Earnings per share', border=NA)\n\n```", "```\n\n\t#*****************************************************************\n\t# Load historical data\n\t#****************************************************************** \n\tload.packages('quantmod')\n\ttickers = 'WMT'\n\n\tdata <- new.env()\n\tgetSymbols(tickers, src = 'yahoo', from = '1980-01-01', env = data, auto.assign = T)\n\t\tfor(i in ls(data)) data[[i]] = adjustOHLC(data[[i]], use.Adjusted=T)\n\n\tdata$WMT = merge(data$WMT, EPS)\n\t\t# back fill EPS\n\t\tdata$WMT$EPS = ifna.prev(coredata(data$WMT$EPS))\t\n\n\t# Plot\n\ty = data$WMT['1990::']\n\tplota(Cl(y), type = 'l', LeftMargin=3)\n\n\tplota2Y(y$EPS, type='l', las=1, col='red', col.axis = 'red')\n\n\tplota.legend('WMT(rhs),WMT.EPS(lhs)', 'blue,red', list(Cl(y),y$EPS))\n\n```", "```\n\n\t#*****************************************************************\n\t# Load historical data\n\t#****************************************************************** \n\tload.packages('quantmod')\t\t\n\ttickers = dow.jones.components()\n\n\t# get fundamental data\n\tdata.fund <- new.env()\n\t\ttemp = paste(iif( nchar(tickers) <= 3, 'NYSE:', 'NASDAQ:'), tickers, sep='')\n\t\tfor(i in 1:len(tickers)) data.fund[[tickers[i]]] = fund.data(temp[i], 80)\n\tsave(data.fund, file='data.fund.Rdata')\n\n\t# get pricing data\n\tdata <- new.env()\n\tgetSymbols(tickers, src = 'yahoo', from = '1970-01-01', env = data, auto.assign = T)\n\t\tfor(i in ls(data)) data[[i]] = adjustOHLC(data[[i]], use.Adjusted=T)\t\n\tsave(data, file='data.Rdata')\n\n\t#load(file='data.fund.Rdata')\n\t#load(file='data.Rdata')\n\n\t# combine fundamental and pricing data\n\tfor(i in tickers) {\n\t\tfund = data.fund[[i]]\n\t\tfund.date = date.fund.data(fund)\n\n\t\tEPS.Q = as.double(fund['Diluted EPS from Total Operations',])\n\t\t\tEPS.Q = as.xts(EPS.Q, fund.date)\t\n\t\tEPS = runSum(EPS.Q, 4)\n\n\t\tdata[[i]] = merge(data[[i]], EPS)\n\t}\n\n\tbt.prep(data, align='keep.all', dates='1995::2011')\n\n```", "```\n\n\t#*****************************************************************\n\t# Compute monthly factors\n\t#****************************************************************** \n\tprices = data$prices\n\t\tprices = bt.apply.matrix(prices, function(x) ifna.prev(x))\n\n\t# create factors\n\tfactors = list()\n\n\t# E/P\n\tEPS = bt.apply(data, function(x) ifna.prev(x[, 'EPS']))\n\tfactors$EP = EPS / prices\n\n\t# VOMO - Volume x Momentum\n\tvolume = bt.apply(data, function(x) ifna.prev(Vo(x)))\n\tfactors$VOMO = (prices / mlag(prices,10) - 1) * bt.apply.matrix(volume, runMean, 22) / bt.apply.matrix(volume, runMean, 66)\n\n\t# find month ends\n\tmonth.ends = endpoints(prices, 'months')\n\n\tprices = prices[month.ends,]\n\tn = ncol(prices)\n\tnperiods = nrow(prices)\n\n\tret = prices / mlag(prices) - 1\n\tnext.month.ret = mlag(ret, -1)\n\n\tfactors$EP = factors$EP[month.ends,]\t\n\tfactors$VOMO = factors$VOMO[month.ends,]\t\t\t\n\n```", "```\n\n\t#*****************************************************************\n\t# Correlation Analysis\n\t#****************************************************************** \n\tx = as.vector(factors$EP)\n \ty = as.vector(next.month.ret)\n\n \tcor.test(x, y, use = 'complete.obs', method = 'pearson')\t\t\t\n\n \t# Plot\n\tpar(mar=c(4,4,2,1)) \t \t \t\n \tplot(x, y, pch=20, main='Correlation Analysis for EP factor', xlab='EP', ylab='Next Month Return')\n \t\tabline(lm(y ~ x), col='blue', lwd=2)\n\n```", "```\n\n>  cor.test(x, y, use = 'complete.obs', method = 'pearson')\n        Pearson's product-moment correlation\ndata:  x and y\nt = 3.6931, df = 5867, p-value = 0.0002235\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.02260247 0.07365350\nsample estimates:\n       cor\n0.04815943\n\n```"]