- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-18 14:33:26'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Cluster Risk Parity back-test | Systematic Investor
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://systematicinvestor.wordpress.com/2013/03/05/cluster-risk-parity-back-test/#0001-01-01](https://systematicinvestor.wordpress.com/2013/03/05/cluster-risk-parity-back-test/#0001-01-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'In the [Cluster Portfolio Allocation](https://systematicinvestor.wordpress.com/2013/02/12/cluster-portfolio-allocation/)
    post, I have outlined the 3 steps to construct Cluster Risk Parity portfolio.
    At each rebalancing period:'
  prefs: []
  type: TYPE_NORMAL
- en: Create Clusters
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allocate funds within each Cluster using Risk Parity
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allocate funds across all Clusters using Risk Parity
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'I created a helper function [distribute.weights() function in strategy.r at
    github](https://github.com/systematicinvestor/SIT/blob/master/R/strategy.r) to
    automate these steps. It has 2 parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: Function to allocate funds. For example, risk.parity.portfolio, will use use
    risk parity to allocate funds both within and across clusters.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Function to create clusters. For example, cluster.group.kmeans.90, will create
    clusters using k-means algorithm
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here is the example how to put it all together. Let’s first load historical
    prices for the 10 major asset classes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, let’s run the 2 versions of [Cluster Portfolio Allocation](https://systematicinvestor.wordpress.com/2013/02/12/cluster-portfolio-allocation/)
    using Equal Weight and Risk Parity algorithms to allocate funds:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, let’s examine the results:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[![plot1.png.small](img/5fd1c0d2de1159e5b7664d3145cc7fa0.png)](https://systematicinvestor.wordpress.com/wp-content/uploads/2013/03/plot1-small.png)'
  prefs: []
  type: TYPE_NORMAL
- en: The [Cluster Portfolio Allocation](https://systematicinvestor.wordpress.com/2013/02/12/cluster-portfolio-allocation/)
    produce portfolios with better risk-adjusted returns and smaller drawdowns.
  prefs: []
  type: TYPE_NORMAL
- en: To view the complete source code for this example, please have a look at the
    [bt.cluster.portfolio.allocation.test1() function in bt.test.r at github](https://github.com/systematicinvestor/SIT/blob/master/R/bt.test.r).
  prefs: []
  type: TYPE_NORMAL
