- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-18 05:45:24'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Moving on from Scrum – Disciplined Agile Delivery | Tales from a Trading Desk
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://mdavey.wordpress.com/2014/11/05/moving-on-from-scrum-disciplined-agile-delivery/#0001-01-01](https://mdavey.wordpress.com/2014/11/05/moving-on-from-scrum-disciplined-agile-delivery/#0001-01-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: I recently picked up a copy of [Disciplined Agile Delivery (DAD)](http://disciplinedagiledelivery.com/). 
    DAD is a hybrid approach that extends Scrum with proven strategies from Agile
    Modeling (AM).  Anyone who has used Scrum on large enterprise projects will know
    what Scrum/XP doesn’t assist in the modeling, documentation and governance arena. 
    Page 4 offers a simple diagram showing the differences of Agile Development, Agile
    Delivery and Agility@Scale.
  prefs: []
  type: TYPE_NORMAL
- en: Over the years I’ve heard various debates about how much intellectual work can
    be done in a working day.  Page 31 offers a view that 5-6hrs a day is the norm
    for achieving high-quality intellectual work.  Often overlooked, “Visualize Workflow”
    often aids teams in understanding blockers, and utilization.
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 4 provide insight into roles, rights and responsibilities which marries
    back to the Terminology Tar Pit on page 43.  Roles and responsibilities are often
    overlooked on the forming of a new team, with the implicit expectation that people
    will know what role they need to fill based on history.  Architecture Owner, page
    76, should provide some clarity in an often contentious title.
  prefs: []
  type: TYPE_NORMAL
- en: If you happen to be on a a graphically split team, then DAD may not be the best
    approach to follow – page 4/87.  Page 99 offers some further thoughts to geographically
    distributed/dispersed teams.
  prefs: []
  type: TYPE_NORMAL
- en: Funding, always and interesting project area, is discussed on page 126, coupled
    with some views on estimating.
  prefs: []
  type: TYPE_NORMAL
- en: Have to agree with the “Just do it” comment on page 133 – Jumping into Construction. 
    A classic anti-pattern which is sure to guarantee the wrong architecture, poor
    quality of code, amongst other issues.
  prefs: []
  type: TYPE_NORMAL
- en: Choosing the right type of model is often not thought though on a new project. 
    Specifically because old patterns and methods and followed without new thinking. 
    Page 155 compares a number of modeling options.  UI specifications have become
    almost a norm in recent years with the influence of User Experience though process
    on projects, however UML and flow charts still have their place.
  prefs: []
  type: TYPE_NORMAL
- en: An often debated subject is choosing a strategy for Non-functional Requirements
    (NFRs).  Page 170 offers three basic strategies.  I agree with the advice on page
    171, acceptance criteria.
  prefs: []
  type: TYPE_NORMAL
- en: Good list of architectural modeling views in table 9.2, page 184.  Hopefully,
    the project you are on doesn’t follow the no modelling view (page 180)
  prefs: []
  type: TYPE_NORMAL
- en: Often debated by the stakeholders funding of a project, estimation is unfortunately
    contentious.  Hopefully page 218 can provide some assistance.
  prefs: []
  type: TYPE_NORMAL
- en: Construction phase and iteration overview diagram on page 281 offers a great
    view of what should be done, and also what is often missed 😦  Patterns and anti-patterns
    offer a great read as well (284).  How many times have you see people spread over
    more than one project in a week – “task-switching between projects takes time
    and is a huge source of waste” (page 285)
  prefs: []
  type: TYPE_NORMAL
- en: Page 310 should hopefully offer the construction crew ideas around leveraging
    their working day.  Of particular note is the “stabilize build” – how many times
    have you see the build broken as people leave the office at the end of the day?
    😦
  prefs: []
  type: TYPE_NORMAL
- en: Transition anti-patterns (page 429).  How many times have you started a project,
    and even after 3+mths, you still don’t have a production like environment for
    integration, acceptance and deployment testing (anti-pattern 101)
  prefs: []
  type: TYPE_NORMAL
- en: Potential metrics for agile projects (page 469) includes the usual suspects,
    but also offers a few that are often not captured – e.g. agile of work item.
  prefs: []
  type: TYPE_NORMAL
- en: Great to see Continuous Delivery (CD), BDD, TDD and ATDD mentioned throughout
    the book.
  prefs: []
  type: TYPE_NORMAL
- en: 'Final food for thought:'
  prefs: []
  type: TYPE_NORMAL
- en: Stop the rush into construction.  Model
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prove the architecture early
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Read the book 🙂
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ~ by mdavey on November 5, 2014.
  prefs: []
  type: TYPE_NORMAL
- en: Posted in [Agile](https://mdavey.wordpress.com/category/agile/)
  prefs: []
  type: TYPE_NORMAL
