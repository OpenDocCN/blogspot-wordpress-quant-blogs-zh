- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-18 15:16:50'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: 'Timely Portfolio: S&P 500 High Beta and Low Volatility Indexes and Powershares
    ETFs'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[http://timelyportfolio.blogspot.com/2011/05/s-500-high-beta-and-low-volatility.html#0001-01-01](http://timelyportfolio.blogspot.com/2011/05/s-500-high-beta-and-low-volatility.html#0001-01-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: There must be a useful insight, concept, or system provided by the new S&P 500
    High Beta and Low Volatility Indexes.  Now with the announcement by Powershares
    of etfs for these indicies [http://www.invescopowershares.com/volatility/](http://www.invescopowershares.com/volatility/
    "http://www.invescopowershares.com/volatility/"), any of these potential insights,
    concepts, or systems seem viable.  The indexes are available through the S&P website
    in spreadsheet form
  prefs: []
  type: TYPE_NORMAL
- en: '[http://www.standardandpoors.com/indices/sp-500-low-volatility/en/us/?indexId=spusa-500-usdw-lop-us-l--](http://www.standardandpoors.com/indices/sp-500-low-volatility/en/us/?indexId=spusa-500-usdw-lop-us-l--
    "http://www.standardandpoors.com/indices/sp-500-low-volatility/en/us/?indexId=spusa-500-usdw-lop-us-l--<br
    />") [http://www.standardandpoors.com/indices/sp-500-high-beta/en/us/?indexId=spusa-500-usdw-hbp-us-l--](http://www.standardandpoors.com/indices/sp-500-high-beta/en/us/?indexId=spusa-500-usdw-hbp-us-l--)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: or through Bloomberg with SP5HBIT for High Beta and SP5LVIT Low Volatility.
  prefs: []
  type: TYPE_NORMAL
- en: If we apply some basic techniques of relative strength and momentum introduced
    in previous posts, we can build a switching strategy between the High Beta and
    Low Volatility Indexes.
  prefs: []
  type: TYPE_NORMAL
- en: Or with the same signals, we can use the relative strength (RS) signal to generate
    entry and exit signals for the overall S&P 500 index.
  prefs: []
  type: TYPE_NORMAL
- en: 'R code:'
  prefs: []
  type: TYPE_NORMAL
- en: require(quantmod)
  prefs: []
  type: TYPE_NORMAL
- en: require(PerformanceAnalytics)
  prefs: []
  type: TYPE_NORMAL
- en: '#don''t think it is possible to download directly from S&P'
  prefs: []
  type: TYPE_NORMAL
- en: '#but can get a spreadsheet to use from'
  prefs: []
  type: TYPE_NORMAL
- en: '#[http://www.standardandpoors.com/indices/sp-500-low-volatility/en/us/?indexId=spusa-500-usdw-lop-us-l--](http://www.standardandpoors.com/indices/sp-500-low-volatility/en/us/?indexId=spusa-500-usdw-lop-us-l--)'
  prefs: []
  type: TYPE_NORMAL
- en: '#[http://www.standardandpoors.com/indices/sp-500-high-beta/en/us/?indexId=spusa-500-usdw-hbp-us-l--](http://www.standardandpoors.com/indices/sp-500-high-beta/en/us/?indexId=spusa-500-usdw-hbp-us-l--)'
  prefs: []
  type: TYPE_NORMAL
- en: '#also these indicies are available through Bloomberg and Reuters'
  prefs: []
  type: TYPE_NORMAL
- en: '#Bloomberg access with R is possible through RBloomberg'
  prefs: []
  type: TYPE_NORMAL
- en: SPHighBetaLowVol<-as.xts(read.csv("sphighbeta-lowvol.csv",row.names=1,stringsAsFactors=FALSE))
  prefs: []
  type: TYPE_NORMAL
- en: SPIndexes<-merge(SPHighBetaLowVol,getSymbols("^GSPC",from="2006-01-03",auto.assign=FALSE)[,4])
  prefs: []
  type: TYPE_NORMAL
- en: SPIndexesReturns<-ROC(SPIndexes,1,type="discrete")
  prefs: []
  type: TYPE_NORMAL
- en: charts.PerformanceSummary(SPIndexesReturns)
  prefs: []
  type: TYPE_NORMAL
- en: '#let''s try an easy relative strength signal and index filter'
  prefs: []
  type: TYPE_NORMAL
- en: '#know I can do this better in R but here is my ugly code'
  prefs: []
  type: TYPE_NORMAL
- en: '#to calculate 125 day or 1/2 year slope of high beta/low vol'
  prefs: []
  type: TYPE_NORMAL
- en: width=125
  prefs: []
  type: TYPE_NORMAL
- en: '#get relative strength slope of high beta/low vol'
  prefs: []
  type: TYPE_NORMAL
- en: for (i in 1:(NROW(SPIndexes)-width)) {
  prefs: []
  type: TYPE_NORMAL
- en: model<-lm(SPIndexes[i:(i+width),1]/SPIndexes[i:(i+width),2]~index(SPIndexes[i:(i+width)]))
  prefs: []
  type: TYPE_NORMAL
- en: ifelse(i==1,indexRS<-model$coefficients[2],indexRS<-rbind(indexRS,model$coefficients[2]))
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: indexRS<-xts(cbind(indexRS),order.by=index(SPIndexes)[(width+1):NROW(SPIndexes)])
  prefs: []
  type: TYPE_NORMAL
- en: '#get slope of total S&P on shorter term 75 day'
  prefs: []
  type: TYPE_NORMAL
- en: width=75
  prefs: []
  type: TYPE_NORMAL
- en: for (i in 1:(NROW(SPIndexes)-width)) {
  prefs: []
  type: TYPE_NORMAL
- en: model<-lm(SPIndexes[i:(i+width),3]~index(SPIndexes[i:(i+width)]))
  prefs: []
  type: TYPE_NORMAL
- en: ifelse(i==1,indexSlope<-model$coefficients[2],indexSlope<-rbind(indexSlope,model$coefficients[2]))
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: indexSlope<-xts(cbind(indexSlope),order.by=index(SPIndexes)[(width+1):NROW(SPIndexes)])
  prefs: []
  type: TYPE_NORMAL
- en: signals<-na.omit(merge(lag(indexRS),lag(indexSlope),SPIndexesReturns))
  prefs: []
  type: TYPE_NORMAL
- en: ret<-ifelse(signals[,1]>0&signals[,2]>0,signals[,3],ifelse(signals[,1]<0&signals[,2]>0,signals[,4],0))
  prefs: []
  type: TYPE_NORMAL
- en: perf_compare<-merge(ret,SPIndexesReturns)
  prefs: []
  type: TYPE_NORMAL
- en: '#name the columns for charting'
  prefs: []
  type: TYPE_NORMAL
- en: colnames(perf_compare)<-c("RotationSystem",colnames(perf_compare)[2:4])
  prefs: []
  type: TYPE_NORMAL
- en: charts.PerformanceSummary(perf_compare,main="Rotation System with S&P Indexes)
  prefs: []
  type: TYPE_NORMAL
- en: '#now let''s use the RS signal to determine entry exit to overall SP index'
  prefs: []
  type: TYPE_NORMAL
- en: '#when high volatility is outperforming go long S&P 500'
  prefs: []
  type: TYPE_NORMAL
- en: ret<-ifelse(signals[,1]>0,signals[,5],0)
  prefs: []
  type: TYPE_NORMAL
- en: perf_compare<-merge(ret,perf_compare)
  prefs: []
  type: TYPE_NORMAL
- en: colnames(perf_compare)<-c("SP500TacticalBasedOnRS",colnames(perf_compare)[2:5])
  prefs: []
  type: TYPE_NORMAL
- en: charts.PerformanceSummary(perf_compare,main="Systems Comparisons with S&P Indexes)
  prefs: []
  type: TYPE_NORMAL
