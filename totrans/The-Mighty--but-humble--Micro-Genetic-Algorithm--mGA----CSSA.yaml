- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-12 17:59:17'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-12 17:59:17
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: The Mighty (but humble) Micro-Genetic Algorithm (mGA) | CSSA
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 强大的（但谦逊的）微遗传算法（mGA）| CSSA
- en: 来源：[https://cssanalytics.wordpress.com/2013/08/30/the-mighty-but-humble-micro-genetic-algorithm-mga/#0001-01-01](https://cssanalytics.wordpress.com/2013/08/30/the-mighty-but-humble-micro-genetic-algorithm-mga/#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://cssanalytics.wordpress.com/2013/08/30/the-mighty-but-humble-micro-genetic-algorithm-mga/#0001-01-01](https://cssanalytics.wordpress.com/2013/08/30/the-mighty-but-humble-micro-genetic-algorithm-mga/#0001-01-01)
- en: '[![dna](img/4b7c5259e81c2b4d02edf8225cd2d823.png)](https://cssanalytics.files.wordpress.com/2013/08/dna.png)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '![DNA](img/4b7c5259e81c2b4d02edf8225cd2d823.png)'
- en: '***A Gentle Introduction to Optimization***'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '***优化简介***'
- en: The field of optimization has evolved significantly over the past few decades.
    Several new theoretical, algorithmic, and computational methods for optimization
    have been proposed to solve complex problems in diverse fields such as finance,
    engineering and molecular biology. In finance, optimization is required to solve
    portfolio problems, model/predict time series data, create trading systems, and
    for implementing trade execution.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 优化领域在过去几十年里已经发生了显著的演变。为了解决金融、工程和分子生物学等不同领域中的复杂问题，已经提出了几种新的理论、算法和计算方法。在金融领域，优化是解决投资组合问题、建模/预测时间序列数据、创建交易系统以及实施交易执行的必要条件。
- en: 'Optimization methods can be divided into two primary categories; **deterministic**
    and **heuristic** approaches. Both methods are essential for quantitative finance
    applications. **Deterministic** optimization is a highly mathematical and gradient-based
    form of optimization that is most suitable for well-defined problems that contain
    a smooth and continuous search space. Some examples of deterministic optimization
    would be conjugate gradient, simplex, gradient descent, quadratic- programming
    (used for Markowitz-type portfolio problems),non-linear solvers, and quasi-Newton
    or Newton methods. These methods are greedy and highly efficient, and if used
    for the appropriate application they are guaranteed to find the global optimum.
    Deterministic methods are analogous to Formula One race cars: they are very fast
    and precise and will find the finish line as long as they are used on a race track
    in good weather conditions. You wouldn’t want to drive them through the forest
    without a map. Below is an example of the ideal type of optimization search space-
    a [convex function](http://en.wikipedia.org/wiki/Convex_function):'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 优化方法可以分为两大类；**确定性**和**启发式**方法。这两种方法对于定量金融应用都至关重要。**确定性**优化是一种高度数学化和基于梯度的优化形式，最适合定义明确、具有平滑连续搜索空间的问题。确定性优化的例子有共轭梯度、单纯形法、梯度下降法、二次规划（用于马科维茨型投资组合问题）、非线性求解器和拟牛顿或牛顿法。这些方法是贪婪的且高度高效，如果用于适当的应用，它们保证能找到全局最优解。确定性方法类似于一级方程式赛车：它们非常快且精确，只要在良好的天气条件下使用正确的赛道，就能到达终点。你不会想在没有地图的情况下将它们驶入森林。下面是理想优化搜索空间类型的例子——一个[凸函数](http://en.wikipedia.org/wiki/Convex_function)：
- en: '[![convex function](img/9c594c8f39c2cd65eb3f560c820bd6a4.png)](https://cssanalytics.files.wordpress.com/2013/08/convex-function.png)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[![凸函数](img/9c594c8f39c2cd65eb3f560c820bd6a4.png)](https://cssanalytics.files.wordpress.com/2013/08/convex-function.png)'
- en: '**Heuristic** approaches in contrast are either **algorithmic** (ie a closed-form
    computation that approximates a feasible solution such as the “[Minimum Correlation
    Algorithm](https://cssanalytics.wordpress.com/2012/09/12/minimum-correlation-algorithm-mca/
    "Minimum Correlation Algorithm (MCA)")”) or **stochastic** (rely on clever manipulations
    of random number generation to find a solution) and can be used for highly complex
    problems without the need for expert knowledge. Traditional examples of heuristic
    methods would be Monte Carlo (MC), particle-swarm optimization (PSO), genetic
    algorithms (GA), simulated annealing (SA), and differential evolution.  The class
    of algorithmic heuristic approaches are typically domain specific (or even specific
    purpose) and less generalizable than stochastic methods. Most scientists and engineers
    find heuristic methods to be more flexible and efficient than deterministic approaches
    for complex real-world problems, but finding the global optimum cannot be guaranteed.
    However, in a typical large-scale application a true exhaustive search is either
    not possible or practical from a computation standpoint. Heuristic methods are
    like a team of Hummers that can communicate or compete with one another to find
    the end goal. This provides greater chances of success through complex and unknown
    terrain that is often encountered when dealing with noisy time series data. An
    example of a search space that is only tractable with a heuristic approach (typically
    a GA) is the [Rastrigin function](http://en.wikipedia.org/wiki/Rastrigin_function):'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**启发式**方法相反，它们是**算法**的（即一个封闭形式的计算，近似一个可行解，如“[最小相关算法](https://cssanalytics.wordpress.com/2012/09/12/minimum-correlation-algorithm-mca/
    ''Minimum Correlation Algorithm (MCA)'')”）或者是**随机**的（依赖于随机数生成的巧妙操作来找到一个解决方案），并且可以在不需要专业知识的情况下用于高度复杂的问题。传统意义上的启发式方法包括蒙特卡洛（MC）、粒子群优化（PSO）、遗传算法（GA）、模拟退火（SA）和差分进化。算法启发式方法通常是特定领域（或特定目的）的，并且不如随机方法具有普遍性。大多数科学家和工程师发现，对于复杂的真实世界问题，启发式方法比确定性方法更灵活、更高效，但无法保证找到全局最优解。然而，在典型的大型应用中，进行真正的彻底搜索要么不可能，要么从计算角度来看不切实际。启发式方法就像一个可以相互沟通或竞争的悍马车队，以找到最终目标。这为在处理噪声时间序列数据时经常遇到的复杂未知地形提供了更大的成功机会。一个只能通过启发式方法（通常是遗传算法）处理的搜索空间的例子是[Rastrigin
    函数](http://en.wikipedia.org/wiki/Rastrigin_function)：'
- en: '[![rastrigin function](img/e9064510d24177cb4da68bee85c000de.png)](https://cssanalytics.files.wordpress.com/2013/08/rastrigin-function.png)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '![Rastrigin 函数](https://cssanalytics.files.wordpress.com/2013/08/rastrigin-function.png)'
- en: '***The Swiss Army Knife: The Micro-Genetic Algorithm (mGA)***'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**瑞士军刀：微遗传算法（mGA）**'
- en: 'The [Micro Genetic Algorithm](http://proceedings.spiedigitallibrary.org/proceeding.aspx?articleid=1262014)
    is a very simple but powerful approach that can solve the most complex problems
    with greater speed than most pure (non-hybrid) heuristic methods. Virtually any
    problem in finance can be solved using this method  as a building block. mGA is
    much faster than traditional [Genetic Algorithms](http://en.wikipedia.org/wiki/Genetic_algorithm) (SGA)
    and produces superior solutions without the need for estimating several additional
    parameter inputs such as the mutation rate. mGA are also ideal for parallel processing
    and can dramatically reduce both programming and processing time as well as memory
    requirements. In the next post, I will  break down the steps to create an mGA
    application in more detail. For now here is a flow chart of how the mGA works:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**微遗传算法**（[Micro Genetic Algorithm](http://proceedings.spiedigitallibrary.org/proceeding.aspx?articleid=1262014)）是一种非常简单但强大的方法，它比大多数纯（非混合）启发式方法更快地解决最复杂的问题。几乎任何金融问题都可以使用这种方法作为构建模块来解决。微遗传算法（mGA）比传统的**遗传算法**（SGA）快得多，并且不需要估计几个额外的参数输入（如变异率）就能产生更优的解决方案。mGA也适用于并行处理，可以显著减少编程和处理时间以及内存需求。在下一篇文章中，我将详细分解创建mGA应用程序的步骤。现在这里有一个关于mGA工作流程的流程图：'
- en: '[![micro genetic algorithm](img/43056df8ae58c7a438f8684cb5aa3f31.png)](https://cssanalytics.files.wordpress.com/2013/08/micro-genetic-algorithm.png)'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '![微遗传算法](https://cssanalytics.files.wordpress.com/2013/08/micro-genetic-algorithm.png)'
