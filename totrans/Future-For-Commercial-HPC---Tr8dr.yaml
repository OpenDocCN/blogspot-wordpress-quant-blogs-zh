- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-18 15:40:01'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Future For Commercial HPC | Tr8dr
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://tr8dr.wordpress.com/2009/07/27/future-for-commercial-hpc/#0001-01-01](https://tr8dr.wordpress.com/2009/07/27/future-for-commercial-hpc/#0001-01-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: July 27, 2009 · 6:43 pm
  prefs: []
  type: TYPE_NORMAL
- en: 'As I noted in an earlier post I have High Performance Computing requirements.
    Basically if you can give me thousands of processors, I can use them. The problem
    with HPC today is that it is one or more of the following (depending on where
    you are):'
  prefs: []
  type: TYPE_NORMAL
- en: academic and only open on a limited basis to researchers based on their proposals
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: internal
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: available but not cost effective (8 core @ $7000 / compute year at amazon)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This flies in the face of what we know:'
  prefs: []
  type: TYPE_NORMAL
- en: there are many thousands of under or un-utilized computers available
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'the true cost of computing power + ancillary costs (power, people) can be scaled
    to a much lower #'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: organizations should want to monetize this underutilized capacity
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Why do I care about this? Well, I could use cheap computing power today, but
    also I used to be a parallel algorithm researcher back in the day, so have been
    waiting for this for a long time.
  prefs: []
  type: TYPE_NORMAL
- en: The solution needs to be to allow compute resource providers a means to auction
    their unused resources for blocks of time, immediate or future. HPC users that
    want to evaluate a massively parallel problem can collect a forward dated/timed
    group of nodes for execution, finding a group within their cost range or wait
    for lower cost nodes to become available.
  prefs: []
  type: TYPE_NORMAL
- en: How would this be accomplished?
  prefs: []
  type: TYPE_NORMAL
- en: Exchanges are set up for geographical areas where providers can offer gflop-hr
    futures and consumers can buy computing futures or alternatively sell their unused
    futures.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Contract requires standardized power metrics (SPECfprate2006 for instance)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Contract requires standardized non-CPU resource (min memory, disk)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Standard means of code and data delivery (binary form, encryption, etc)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Safe VM in which to run code
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Checkpointing to allow for a computation to be moved (optional)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Research into auction-based scheduling and resource allocation began in the
    early 90s, perhaps earlier. The first paper I saw in this regard was in 1991\.
    There are now hundreds of papers on this and a few academic experiments. There
    should be a big market for this amongst web hosting companies, etc.
  prefs: []
  type: TYPE_NORMAL
- en: Amazon and Google, although likely to be very efficient with resource utilization,
    are likely to have peak periods and slack periods like everyone else. The strategy
    would be to price resources lower during slack periods to attract “greedy” computations
    looking for cheap power.
  prefs: []
  type: TYPE_NORMAL
- en: I have specific ideas about how this would be implemented. Contact me if you
    are interested.
  prefs: []
  type: TYPE_NORMAL
