["```\n\n###############################################################################\n# Load Systematic Investor Toolbox (SIT)\n# https://systematicinvestor.wordpress.com/systematic-investor-toolbox/\n###############################################################################\nsetInternet2(TRUE)\ncon = gzcon(url('http://www.systematicportfolio.com/sit.gz', 'rb'))\n    source(con)\nclose(con)\n\n\t#*****************************************************************\n\t# Find Sectors for each company in DOW 30\n\t#****************************************************************** \n\ttickers = spl('XLY,XLP,XLE,XLF,XLV,XLI,XLB,XLK,XLU')\n\ttickers.desc = spl('ConsumerCyclicals,ConsumerStaples,Energy,Financials,HealthCare,Industrials,Materials,Technology,Utilities')\n\n\tsector.map = c()\n\tfor(i in 1:len(tickers)) {\n\t\tsector.map = rbind(sector.map, \n\t\t\t\tcbind(sector.spdr.components(tickers[i]), tickers.desc[i])\n\t\t\t)\n\t}\n\tcolnames(sector.map) = spl('ticker,sector')\n\n\t#*****************************************************************\n\t# Load historical data\n\t#****************************************************************** \n\tload.packages('quantmod')\t\n\ttickers = dow.jones.components()\n\n\tsectors = factor(sector.map[ match(tickers, sector.map[,'ticker']), 'sector'])\n\t\tnames(sectors) = tickers\n\n\tdata <- new.env()\n\tgetSymbols(tickers, src = 'yahoo', from = '2000-01-01', env = data, auto.assign = T)\n\t\tfor(i in ls(data)) data[[i]] = adjustOHLC(data[[i]], use.Adjusted=T)\t\n\n\tbt.prep(data, align='keep.all', dates='2012')\n\n\t# re-order sectors, because bt.prep can change the order of tickers\n\tsectors = sectors[data$symbolnames]\n\n\t# save data for later examples\n\tsave(data, tickers, sectors, file='bt.pca.test.Rdata')\n\n```", "```\n\n\t#*****************************************************************\n\t# Principal component analysis (PCA), for interesting discussion\n\t# http://machine-master.blogspot.ca/2012/08/pca-or-polluting-your-clever-analysis.html\n\t#****************************************************************** \n\tprices = data$prices\t\n\tret = prices / mlag(prices) - 1\n\n\tp = princomp(na.omit(ret))\n\n\tloadings = p$loadings[]\n\tp.variance.explained = p$sdev^2 / sum(p$sdev^2)\n\n\t# plot percentage of variance explained for each principal component\t\n\tbarplot(100*p.variance.explained, las=2, xlab='', ylab='% Variance Explained')\n\n```", "```\n\n\t#*****************************************************************\n\t# 2-D Plot\n\t#****************************************************************** \t\t\n\tx = loadings[,1]\n\ty = loadings[,2]\n\tz = loadings[,3]\n\tcols = as.double(sectors)\n\n\t# plot all companies loadings on the first and second principal components and highlight points according to the sector they belong\n\tplot(x, y, type='p', pch=20, col=cols, xlab='Comp.1', ylab='Comp.2')\n\ttext(x, y, data$symbolnames, col=cols, cex=.8, pos=4)\n\n\tlegend('topright', cex=.8,  legend = levels(sectors), fill = 1:nlevels(sectors), merge = F, bty = 'n') \n\n```", "```\n\n\t#*****************************************************************\n\t# 3-D Plot, for good examples of 3D plots\n\t# http://statmethods.wordpress.com/2012/01/30/getting-fancy-with-3-d-scatterplots/\n\t#****************************************************************** \t\t\t\t\n\tload.packages('scatterplot3d') \n\n\t# plot all companies loadings on the first, second, and third principal components and highlight points according to the sector they belong\n\ts3d = scatterplot3d(x, y, z, xlab='Comp.1', ylab='Comp.2', zlab='Comp.3', color=cols, pch = 20)\n\n\ts3d.coords = s3d$xyz.convert(x, y, z)\n\ttext(s3d.coords$x, s3d.coords$y, labels=data$symbolnames, col=cols, cex=.8, pos=4)\n\n\tlegend('topleft', cex=.8,  legend = levels(sectors), fill = 1:nlevels(sectors), merge = F, bty = 'n') \n\n```"]