- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-18 08:10:38'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Matrix decomposition with QuantLib | Quant Corner
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://quantcorner.wordpress.com/2011/02/20/matrix-decomposition-with-quantlib/#0001-01-01](https://quantcorner.wordpress.com/2011/02/20/matrix-decomposition-with-quantlib/#0001-01-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**QuantLib** includes several **matrix decomposition** as well as **Eigen values/vectors**
    finding tools. If your memory needs a simple refresh in this area of linear algebra,
    you should visit the Wikipedia’s page on [matrix decomposition](http://en.wikipedia.org/wiki/Matrix_decomposition#Decompositions_based_on_eigenvalues_and_related_concepts).
    For more advanced discussions and other matrix-related topics, [Math World](www.mathworld.wolfram.com)
    reads numerous valuable pages.'
  prefs: []
  type: TYPE_NORMAL
- en: 'In the code below, we shall implement some of these tools. As you will see,
    it’s quite straightforward. The matrix we work with is the standard **square matrix**
    :'
  prefs: []
  type: TYPE_NORMAL
- en: '[![](img/2d0e413c329c246db5c0082a2507e078.png)](https://quantcorner.wordpress.com/wp-content/uploads/2011/02/standard_matrix_b1.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
