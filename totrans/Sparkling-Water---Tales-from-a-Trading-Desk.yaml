- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-18 05:41:33'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Sparkling Water | Tales from a Trading Desk
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://mdavey.wordpress.com/2015/06/20/sparkling-water/#0001-01-01](https://mdavey.wordpress.com/2015/06/20/sparkling-water/#0001-01-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Sparkling Water
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[H2O](http://0xdata.com/product/sparkling-water/) allows “users to combine
    the fast, scalable machine learning algorithms of H2O with the capabilites of
    Spark” – sounds all very intersting.  Having not had time to play with H2O it
    would appear that [Flow](http://0xdata.com/product/flow/) is key to an almost
    like Clojure REPL (“Read-Eval-Print Loop”) environment. This in itself is interesting
    for the obvious reason of wanting a RAD environment to improve the models.'
  prefs: []
  type: TYPE_NORMAL
- en: Fraud Detection is as usual one of the use [cases](http://0xdata.com/use-cases/fraud-detection/)
    offered by H2O.  I suspect however that financial companies maybe interested in
    H2O given the issues in the compliance world, especially after the LIBRO incidents
    the sector has encountered over the last time period.
  prefs: []
  type: TYPE_NORMAL
- en: Customer Intelligence from my perspective would probably be interesting to Proof
    of Concept (PoC) in the client trading space – think RFQ’s, think trading patterns,
    think pushing dedicated research to clients etc
  prefs: []
  type: TYPE_NORMAL
- en: Interesting time.
  prefs: []
  type: TYPE_NORMAL
- en: Anyone built any interesting PoC’s in H2O?
  prefs: []
  type: TYPE_NORMAL
- en: ~ by mdavey on June 20, 2015.
  prefs: []
  type: TYPE_NORMAL
- en: Posted in [Data](https://mdavey.wordpress.com/category/data/)
  prefs: []
  type: TYPE_NORMAL
