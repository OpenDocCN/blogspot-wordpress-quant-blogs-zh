["```\n#third version\n#add another neat chart for visualization\n#got idea from zoo-overplot demo   #second version\n#this one actually has an additional mean reverting element\n#for markets that have moved down so long entry is quicker\nrequire(PerformanceAnalytics)\nrequire(quantmod)   #set this up to get either FRED or Yahoo!Finance\n#getSymbols(\"N225\",src=\"FRED\")\ngetSymbols(\"^N225\",from=\"1896-01-01\",to=Sys.Date())   N225 <- to.weekly(N225)[,4]\nN225mean <- runMean(N225,n=30)\n#index(N225) <- as.Date(index(N225))    width = 10\nfor (i in (width+1):NROW(N225)) {\n\tlinmod <- lm(N225[((i-width):i),1]~index(N225[((i-width):i)]))\n\tifelse(i==width+1,signal <- coredata(linmod$residuals[length(linmod$residuals)]),\n\t\tsignal <- rbind(signal,coredata(linmod$residuals[length(linmod$residuals)])))\n\tifelse(i==width+1,signal2 <- coredata(linmod$coefficients[2]),\n\t\tsignal2 <- rbind(signal2,coredata(linmod$coefficients[2])))\n\tifelse(i==width+1,signal3 <- cor(linmod$fitted.values,N225[((i-width):i),1]),\n\t\tsignal3 <- rbind(signal3,cor(linmod$fitted.values,N225[((i-width):i),1])))\n}   signal <- as.xts(signal,order.by=index(N225[(width+1):NROW(N225)]))\nsignal2 <- as.xts(signal2,order.by=index(N225[(width+1):NROW(N225)]))\nsignal3 <- as.xts(signal3,order.by=index(N225[(width+1):NROW(N225)]))\nsignal4 <- ifelse(N225 > N225mean,1,0)   price_ret_signal <- merge(N225,lag(signal,k=1),\n\tlag(signal2,k=1),\n\tlag(signal3,k=1),\n\tlag(signal4,k=1),\n\tlag(ROC(N225,type=\"discrete\",n=15),k=1),\n\tROC(N225,type=\"discrete\",n=1))\n\tprice_ret_signal[,2] <- price_ret_signal[,2]/price_ret_signal[,1]\n\tprice_ret_signal[,3] <- price_ret_signal[,3]/price_ret_signal[,1]\nret <- ifelse((price_ret_signal[,5] == 1) | (price_ret_signal[,5] == 0  &\n \trunMean(price_ret_signal[,3],n=50) > 0 & runMean(price_ret_signal[,2],n=10) < 0 ),\n\t1, 0) * price_ret_signal[,7]\nretCompare <- merge(ret, price_ret_signal[,7])\ncolnames(retCompare) <- c(\"Linear System\", \"BuyHold\")\n#jpeg(filename=\"performance summary.jpg\",\n#\tquality=100,width=6.25, height = 8,  units=\"in\",res=96)\ncharts.PerformanceSummary(retCompare,ylog=TRUE,cex.legend=1.2,\n\tcolorset=c(\"black\",\"gray70\"),main=\"N225 System Return Comparison\")\n#dev.off()\nrequire(ggplot2)\ndf <- as.data.frame(na.omit(merge(price_ret_signal[,5],price_ret_signal[,7])))\ncolnames(df) <- c(\"signal_avg\",\"return\")\n#jpeg(filename=\"boxplot by average.jpg\",\n#\tquality=100,width=6.25, height = 8,  units=\"in\",res=96)\nggplot(df,aes(x=factor(signal_avg),y=return)) + geom_boxplot()\n#dev.off()\ndf2 <- as.data.frame(na.omit(merge(ifelse((price_ret_signal[,5] == 0  &\n \trunMean(price_ret_signal[,3],n=50) > 0 & runSum(price_ret_signal[,2],n=10) < 0 ),\n\t1, 0),price_ret_signal[,7])))\ncolnames(df2) <- c(\"signal_other\",\"return\")\n#jpeg(filename=\"boxplot by other signal.jpg\",\n#\tquality=100,width=6.25, height = 8,  units=\"in\",res=96)\nggplot(df2,aes(x=factor(signal_other),y=return)) + geom_boxplot()\n#dev.off()\ndf3 <- as.data.frame(na.omit(merge(ifelse((price_ret_signal[,5] == 1) |\t(price_ret_signal[,5] == 0  & \n\trunMean(price_ret_signal[,3],n=50) > 0 & runMean(price_ret_signal[,2],n=10) < 0 ),\n\t1, 0),price_ret_signal[,7])))\ncolnames(df3) <- c(\"signals_all\",\"return\")\n#jpeg(filename=\"boxplot by long signal.jpg\",\n#\tquality=100,width=6.25, height = 8,  units=\"in\",res=96)\nggplot(df3,aes(x=factor(signals_all),y=return)) + geom_boxplot()\n#dev.off()\n#jpeg(filename=\"text plot of return and risk.jpg\",\n\tquality=100,width=6.25, height = 6.25,  units=\"in\",res=96)\ntextplot(rbind(table.AnnualizedReturns(retCompare),\n\ttable.DownsideRisk(retCompare)[c(1:3,7,11),]))\n#dev.off()   #eliminate NA at start of return series\nretCompare[is.na(retCompare)] <- 0\nprice_system <- merge(N225,ifelse((price_ret_signal[,5] == 1) |\n\t(price_ret_signal[,5] == 0  & \n\trunMean(price_ret_signal[,3],n=50) > 0 &\n\trunMean(price_ret_signal[,2],n=10) < 0 ),\n\tNA, 1),coredata(N225)[width+50]*cumprod(retCompare[,1]+1))\nprice_system[,2] <- price_system[,1]*price_system[,2]\ncolnames(price_system) <- c(\"In\",\"Out\",\"System\")   #jpeg(filename=\"chartSeries with colored entry and exit.jpg\",\n#\tquality=100,width=6.25, height = 6.25,  units=\"in\",res=96)\nchartSeries(price_system$System,theme=\"white\",log=TRUE,up.col=\"black\",\n\tyrange=c(min(price_system[,c(1,3)]),max(price_system[,c(1,3)])),\n\tTA=\"addTA(price_system$In,on=1,col=3);\n\taddTA(price_system$Out,on=1,col=2)\",\n\tname=\"N225 Linear Model System\")\n#dev.off()\n```"]