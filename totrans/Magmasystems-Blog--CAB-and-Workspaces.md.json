["```\n\nusing System;\nusing System.Windows.Forms;\nusing CABQuoteViewer.WorkItems;\nusing Microsoft.Practices.CompositeUI.SmartParts;\nusing Microsoft.Practices.CompositeUI.WinForms;\n\nnamespace CABQuoteViewer\n{\n    class CABQuoteViewerApplication : FormShellApplication<QuoteViewerWorkItem, MainForm>\n    {\n        private IWorkspace m_workspace;\n        private QuoteViewerWorkItemExtension m_quoteWorkItemExt;\n\n        /// <summary>\n        /// The main entry point for the application.\n        /// </summary>\n        [STAThread]\n        static void Main()\n        {\n            new CABQuoteViewerApplication().Run();\n        }\n\n        protected override void BeforeShellCreated()\n        {\n            base.BeforeShellCreated();\n\n            if (this.RootWorkItem != null)\n            {\n                this.m_quoteWorkItemExt = new QuoteViewerWorkItemExtension();\n                this.m_quoteWorkItemExt.Initialize(this.RootWorkItem);\n            }\n        }\n\n        protected override void AfterShellCreated()\n        {\n            base.AfterShellCreated();\n            this.CreateWorkspace(\"Deck\");\n        }\n\n        private void CreateWorkspace(string wsTypeName)\n        {\n            if (wsTypeName == \"Mdi\")\n            {\n                this.m_workspace = new MdiWorkspace(this.Shell);\n                this.RootWorkItem.Workspaces.Add(this.m_workspace, \"ClientWorkspace\");\n            }\n            else if (wsTypeName == \"Tab\")\n            {\n                this.m_workspace = this.RootWorkItem.Workspaces.AddNew<TabWorkspace>(\"ClientWorkspace\");\n\n                TabWorkspace tabWorkspace = this.m_workspace as TabWorkspace;\n                tabWorkspace.Dock = DockStyle.Fill;\n                this.Shell.Controls.Add(tabWorkspace);\n            }\n            else if (wsTypeName == \"Deck\")\n            {\n                this.m_workspace = this.RootWorkItem.Workspaces.AddNew<DeckWorkspace>(\"ClientWorkspace\");\n\n                DeckWorkspace deckWorkspace = this.m_workspace as DeckWorkspace;\n                deckWorkspace.Dock = DockStyle.Fill;\n                this.Shell.Controls.Add(deckWorkspace);\n            }\n            else if (wsTypeName == \"Zone\")\n            {\n                this.m_workspace = this.RootWorkItem.Workspaces.AddNew<ZoneWorkspace>(\"ClientWorkspace\");\n\n                ZoneWorkspace zoneWorkspace = this.m_workspace as ZoneWorkspace;\n                zoneWorkspace.Dock = DockStyle.Fill;\n                this.Shell.Controls.Add(zoneWorkspace);\n            }\n            else\n            {\n                throw new Exception(\"Cannot create workspace\");\n            }\n        }\n    }\n}\n```"]