- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-18 05:29:42'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Continuous Delivery Coding Patterns | Tales from a Trading Desk
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://mdavey.wordpress.com/2016/09/12/continuous-delivery-coding-patterns/#0001-01-01](https://mdavey.wordpress.com/2016/09/12/continuous-delivery-coding-patterns/#0001-01-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Continuous Delivery Coding Patterns
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Yet anther resource off InfoQ, “Continuous Delivery [Overview](https://www.infoq.com/minibooks/continuous-delivery-overview)”
    married with “Continuous Delivery Coding [Patterns](https://www.infoq.com/articles/continuous-delivery-coding-patterns):
    Latent-to-Live Code & Forward Compatible Interim Versions”.'
  prefs: []
  type: TYPE_NORMAL
- en: Trunk-based-development ([TBD](https://www.thoughtworks.com/insights/blog/enabling-trunk-based-development-deployment-pipelines))
    is probably one of the main chances that teams need to get their head around if
    today they are working off branches.
  prefs: []
  type: TYPE_NORMAL
- en: Latent-to-live code pattern is in my view the only sensible road, since until
    your code get into production, there is zero Return-on-Investment (ROI)
  prefs: []
  type: TYPE_NORMAL
- en: ~ by mdavey on September 12, 2016.
  prefs: []
  type: TYPE_NORMAL
- en: Posted in [Languages](https://mdavey.wordpress.com/category/languages/), [Uncategorized](https://mdavey.wordpress.com/category/uncategorized/)
  prefs: []
  type: TYPE_NORMAL
