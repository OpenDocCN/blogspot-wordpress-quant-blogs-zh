- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-12 19:31:19'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Reusable spreadsheet components with SpreadServe | Coding the markets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://etrading.wordpress.com/2015/08/14/reusable-spreadsheets-components-with-spreadserve/#0001-01-01](https://etrading.wordpress.com/2015/08/14/reusable-spreadsheets-components-with-spreadserve/#0001-01-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Reusable spreadsheet components with SpreadServe
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: August 14, 2015
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'There are a couple of spreadsheets in the [SpreadServe beta](https://groups.google.com/forum/#!aboutgroup/spreadserve)
    that illustrate [point 3 (component reuse) from my recent Spreadsheets are code
    post](https://etrading.wordpress.com/2015/08/13/spreadsheets-are-code/). One of
    them – [ycb_quandl_pub.xls](http://54.148.111.119:8888/ycb_quandl_pub.xls/Bootstrapping)
    – is running on the [AWS host](http://54.148.111.119:8888/dashboard.html), and
    [a recent post explained in detail](https://etrading.wordpress.com/2015/08/08/yield-curve-bootstrapping-with-quantlib-quandl/)
    how it uses [Quandl data](https://www.quandl.com/data/FRED/DSWP10-10-Year-Swap-Rate)
    to drive [QuantLib’s yield curve bootstrapping functions](http://www.bnikolic.co.uk/ql/addindoc/f/qlPiecewiseYieldCurve.html).
    ycb_quandl_pub.xls is paired with ycb_quandl_sub.xls. You can download both of
    them [from here](http://54.148.111.119:8888/repository.html), and as their names
    suggest, ycb_quandl_pub.xls is a publisher, and ycb_quandl_sub.xls is a subscriber.
    ycb_quandl_pub.xls will run equally happily in Excel or SpreadServe, but it only
    becomes a reuasable component when it’s running in SpreadServe. Try downloading
    ycb_quandl_sub.xls and running it in Excel on your desktop. You’ll need to install
    [SSAddin](https://github.com/SpreadServe/SSAddin) to make it work. Then you’ll
    see that ycb_quandl_sub.xls is updated with the dates and rates of the bootstrapped
    curve calculated by ycb_quandl_pub.xls. You may see #N/A in the cells for a few
    minutes until the first tick arrives from the server, which recalcs every five
    minutes. The s2cfg sheet in ycb_quandl_sub.xls configures the [SSAddin](https://github.com/SpreadServe/SSAddin)
    to use its [s2websock function](http://spreadserve-addin.readthedocs.org/en/latest/functions.html)
    to subscribe to the rates published by the [RealTimeWebServer](http://spreadserve.readthedocs.org/en/latest/config.html)
    every time the ycb_quandl_pub.xls sheet hosted in a SpreadServeEngine instance
    recalculates. The RealTimeWebServer can support many subscribers, so all the logic
    in ycb_quandl_pub.xls from Quandl, QuantLib and the worksheet formula is shared
    by all the subscribers. A user with edit permission could change some aspect of
    the model on the publisher side, the Interpolator or TermStructureCalendar perhaps,
    and all the subscribers would get the same updated data as a result. Those familiar
    with typical pricing engine architectures in investment banks will recognise the
    makings of a graph of pricing engines here. But the major difference is that no
    server side C++, C# or Java coding is necessary to make it happen. Graphs of quant
    or trader developer spreadsheets can be strung together very rapidly. The benefit
    of the spreadsheet level component reuse that [SpreadServe](http://spreadserve.com/)
    makes possible should be apparent.'
  prefs: []
  type: TYPE_NORMAL
