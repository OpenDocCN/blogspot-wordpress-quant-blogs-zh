- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-18 08:07:06'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-18 08:07:06
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: An Eviews workfile reader written in Python | Quant Corner
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一个用Python编写的Eviews工作文件阅读器 | 量化角落
- en: 来源：[https://quantcorner.wordpress.com/2015/10/05/reading-eviews-workfiles-with-python/#0001-01-01](https://quantcorner.wordpress.com/2015/10/05/reading-eviews-workfiles-with-python/#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://quantcorner.wordpress.com/2015/10/05/reading-eviews-workfiles-with-python/#0001-01-01](https://quantcorner.wordpress.com/2015/10/05/reading-eviews-workfiles-with-python/#0001-01-01)
- en: '**»’** **March 20h, 2016 update: the Eviews workfiles reader described below also
    works with Eviews9 workfiles.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**»’** **2016年3月20日更新：下面描述的Eviews工作文件阅读器也适用于Eviews9工作文件。'
- en: »’**
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: »’**
- en: '*On a side note …*'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '*顺带一提……*'
- en: In the video below, I show in action the **Eviews** workfile (***.wf1**) reader
    I wrote in **Python**.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的视频中，我展示了我用**Python**编写的**Eviews**工作文件（***.wf1**）阅读器的实际操作。
- en: There is almost no information on the **Eviews** workfiles format (it is proprietary
    after all…). The only resource I found out on the internet is located here: [EViews
    workfile format](http://ricardo.ecn.wfu.edu/~cottrell/eviews_format/) . But, I
    cannot say it was actually helpful. My understanding of how **Eviews** files are
    structured and the way data can (must?) then be extracted (the ‘algorithm’) are very different,
    to be honest. This probably relates to **Eviews** versions. The workfiles I worked
    on were created with **Eviews 8**.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 对于**Eviews**工作文件格式几乎没有任何信息（毕竟这是专有的…）。我在互联网上唯一找到的资源位于这里：[EViews工作文件格式](http://ricardo.ecn.wfu.edu/~cottrell/eviews_format/)。但是，我不能说它实际上有多大帮助。老实说，我对**Eviews**文件的结构以及数据如何（必须？）被提取（“算法”）的理解非常不同。这可能与**Eviews**版本有关。我处理的工作文件是用**Eviews
    8**创建的。
- en: For the time being, the **Python** class I wrote returns *all* the time series
    as a single **pandas.DataFrame** object. Alternatively, it could return a specific
    series (or set of series) depending on user’s needs. It is straightforward to
    implement.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，我编写的**Python**类将所有时间序列作为一个**pandas.DataFrame**对象返回。或者，它可以根据用户的需要返回特定系列（或一组系列）。这很容易实现。
- en: There are pieces of information contained in **Eviews** workfiles that are left
    to be ‘decoded’, eg dates when objects were last updated. It is something I have
    even not tried to do. All I was willing here was exporting the time series/observations
    from  **Eviews** to **Python**.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**Eviews**工作文件中包含的一些信息尚未“解码”，例如对象最后更新的日期。这是我甚至都没有尝试过的事情。我在这里唯一愿意做的就是将**Eviews**的时间序列/观察值导出到**Python**中。'
- en: Et voilà!
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Et voilà！
- en: '[https://www.youtube.com/embed/0Z841f8EHlU?version=3&rel=1&showsearch=0&showinfo=1&iv_load_policy=1&fs=1&hl=es&autohide=2&wmode=transparent](https://www.youtube.com/embed/0Z841f8EHlU?version=3&rel=1&showsearch=0&showinfo=1&iv_load_policy=1&fs=1&hl=es&autohide=2&wmode=transparent)'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.youtube.com/embed/0Z841f8EHlU?version=3&rel=1&showsearch=0&showinfo=1&iv_load_policy=1&fs=1&hl=es&autohide=2&wmode=transparent](https://www.youtube.com/embed/0Z841f8EHlU?version=3&rel=1&showsearch=0&showinfo=1&iv_load_policy=1&fs=1&hl=es&autohide=2&wmode=transparent)'
- en: VIDEO
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 视频
