["```\n\ncrmModel <- selectProxyModel(ROC(p[,1], type=\"discrete\", na.pad=FALSE))\nqqqModel <- selectProxyModel(ROC(p[,2], type=\"discrete\", na.pad=FALSE))\n\n```", "```\n\n       Estimate  Std. Error  t value Pr(>|t|)    \nomega  1.219e-05   5.781e-06    2.108    0.035 *  \nalpha1 3.552e-02   9.004e-03    3.945 8.00e-05 ***\nbeta1  9.544e-01   1.115e-02   85.600  < 2e-16 ***\nshape  4.247e+00   5.227e-01    8.124 4.44e-16 ***\n\n```", "```\n\n        Estimate  Std. Error  t value Pr(>|t|)    \nomega  2.833e-06   1.238e-06    2.288   0.0222 *  \nalpha1 1.005e-01   1.840e-02    5.464 4.64e-08 ***\nbeta1  8.956e-01   1.748e-02   51.228  < 2e-16 ***\nskew   8.516e-01   2.971e-02   28.669  < 2e-16 ***\nshape  6.620e+00   1.410e+00    4.694 2.68e-06 ***\n\n```", "```\n\ncor(crmModel[3][[1]]@h.t, qqqModel[3][[1]]@h.t, method=\"kendall\")\n\n```", "```\n\npROC <- ROC(p, type=\"discrete\", na.pad=FALSE)\nx <- seq(-6, 6, length=100)\ncnames <- colnames(pROC)\nx1 <- dnorm(x)\nx2 <- dt(x,df=4.25)\nx3 <- dst(x,df=6.62,shape=0.852)\nplot(x, x1, type='l',lty=2, ylim=c(0,max(x1,x2,x3)), ylab=\"\", main=\"GARCH Residual Distributions\")\nlines(x, x2, col=colors[2])\nlines(x, x3, col=colors[3])\nlegend(\"topleft\",legend=c(\"Normal\",cnames[1],cnames[2]), fill=colors, cex=0.5)\n\n```", "```\n\nlibrary(\"fGarch\")\n\nselectProxyModel <- function(p, useMean=FALSE)\n{\n  # ARMA+GARCH model selection based on BIC, using the following error\n  # distributions: student-t, skew-t, and skew normal. ARMA\n  # may be either (1,1) or (2,2); GARCH is only (1,1).\n  #\n  # Args:\n  #   p: single vector of instrument price data\n  #   useMean: flag indicating whether mean should be fitted in GARCH\n  #\n  # Returns: selected GARCH model\n\n  g11Std <- garchFit(~ garch(1,1), data = coredata(p), trace = FALSE, cond.dist=\"std\", include.mean=useMean)\n  g11SStd <- garchFit(~ garch(1,1), data = coredata(p), trace = FALSE, cond.dist=\"sstd\", include.mean=useMean)\n  g11SNorm <- garchFit(~ garch(1,1), data = coredata(p), trace = FALSE, cond.dist=\"snorm\", include.mean=useMean)\n\n  g11A11Std <- garchFit(~ arma(1,1) + garch(1,1), data = coredata(p), trace = FALSE, cond.dist=\"std\", include.mean=useMean)\n  g11A11SStd <- garchFit(~ arma(1,1) + garch(1,1), data = coredata(p), trace = FALSE, cond.dist=\"sstd\", include.mean=useMean)\n  g11A11SNorm <- garchFit(~ arma(1,1) + garch(1,1), data = coredata(p), trace = FALSE, cond.dist=\"snorm\", include.mean=useMean)\n\n  g11A22Std <- garchFit(~ arma(2,2) + garch(1,1), data = coredata(p), trace = FALSE, cond.dist=\"std\", include.mean=useMean)\n  g11A22SStd <- garchFit(~ arma(2,2) + garch(1,1), data = coredata(p), trace = FALSE, cond.dist=\"sstd\", include.mean=useMean)\n  g11A22SNorm <- garchFit(~ arma(2,2) + garch(1,1), data = coredata(p), trace = FALSE, cond.dist=\"snorm\", include.mean=useMean)\n\n  gModel <- list(g11Std, g11SStd, g11SNorm, g11A11Std, g11A11SStd, g11A11SNorm, g11A22Std, g11A22SStd, g11A22SNorm)\n  gBIC <- data.frame(g11Std@fit$ics[2], g11SStd@fit$ics[2], g11SNorm@fit$ics[2], g11A11Std@fit$ics[2], g11A11SStd@fit$ics[2], g11A11SNorm@fit$ics[2], g11A22Std@fit$ics[2], g11A22SStd@fit$ics[2], g11A22SNorm@fit$ics[2])\n  colnames(gBIC) <- c(\"g11Std-BIC\", \"g11SStd-BIC\", \"g11SNorm-BIC\", \"g11A11Std-BIC\", \"g11A11SStd-BIC\", \"g11A11SNorm-BIC\", \"g11A22Std-BIC\", \"g11A22SStd-BIC\", \"g11A22SNorm-BIC\")\n\n  minBIC <- order(gBIC,decreasing=FALSE)[1]\n\n  return (list(gBIC, colnames(gBIC)[minBIC], gModel[[minBIC]]))\n}\n\nvisualizeGarchModels <- function (p, m1, m2, cnames)\n{\n  # Visualize two garch models in overlapping plots\n  #\n  # Args:\n  #   p: matrix of instrument price data, including valid colnames\n  #   m1: first GARCH model to visualize\n  #   m2: second GARCH model to visualize\n  #   cnames: list of column names\n  #\n  # Returns: none\n\n  t <- index(p)[2:nrow(p)]\n\n  plot(xts(m1[3][[1]]@h.t, order.by=t), main=\"GARCH Conditional Volatility\", type='l', ylab=\"Volatility\", ylim=c(min(crmModel[3][[1]]@h.t, qqqModel[3][[1]]@h.t),max(crmModel[3][[1]]@h.t, qqqModel[3][[1]]@h.t)))\n  lines(xts(m2[3][[1]]@h.t, order.by=t), col=colors[2])\n  legend(\"topleft\",legend=c(cnames[1],cnames[2]), fill=colors, cex=0.5)\n\n  plot(xts(m1[3][[1]]@residuals, order.by=t), main=\"GARCH Residuals\", type='p', ylab=\"Residuals\")\n  points(xts(m2[3][[1]]@residuals, order.by=t), col=colors[2])\n  legend(\"topleft\",legend=c(cnames[1],cnames[2]), fill=colors, cex=0.5)\n}\n\n```"]