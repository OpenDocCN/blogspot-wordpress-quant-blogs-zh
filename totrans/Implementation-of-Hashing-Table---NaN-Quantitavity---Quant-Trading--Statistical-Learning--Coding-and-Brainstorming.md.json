["```\n#include <iostream>\n#include <fstream>\n#include <string>\n\nusing namespace std;\n\nconst int TABLE_SIZE = 128;\n\nstruct TableList {\n    string key;\n    int value;\n    struct TableList *next;\n};\n\nunsigned hash_function(string s)\n{\n    unsigned hash = 0;\n\n    for (int i = 0; i < s.length(); i++)\n        hash = s[i] + 31*hash;\n    return hash % TABLE_SIZE;\n}\n\nunsigned rehash(unsigned);\n\nclass HashMap \n{\nprivate:\n    TableList **table;\npublic:\n    HashMap() \n    {\n        table = new TableList*[TABLE_SIZE];\n        for(int i = 0; i < TABLE_SIZE; i++) table[i] = NULL;\n    }\n\n    void showMap() \n    {\n        struct TableList *tp;\n        for (int i = 0; i < TABLE_SIZE; i++) {\n            tp = table[i];\n            if(tp){ \n                cout << \"table[\" << i << \"] \" << tp->key << \"(\" << tp->value << \")\";\n                tp = tp->next;\n            }\n            else \n                continue;\n            while(tp) {\n                cout << \"->\" << tp->key << \"(\" << tp->value << \")\";\n                tp = tp->next;\n            }\n            cout << endl;\n        }\n    }\n\n    struct TableList* lookup(string s) \n    {\n        struct TableList *tp;\n        for(tp = table[hash_function(s)]; tp != NULL; tp = tp->next) \n                if((tp->key).compare(s) == 0) return tp;  // found\n        return NULL;  // not found\n    }\n\n    void put(string key, int value) {\n        struct TableList *tp;\n        unsigned hash;\n\n        // not found\n        if(!(tp = lookup(key))) {\n            tp = new TableList;\n            tp->key = key;\n            tp->value = value;\n            hash = hash_function(key);\n            tp->next = table[hash];\n            table[hash] = tp;\n        // it's already there\n        } else {\n            tp->key = key;\n            tp->value = value;\n            hash = hash_function(key);\n            table[hash] = tp;\n        }\n    }     \n\n    ~HashMap() \n    {\n        for (int i = 0; i < TABLE_SIZE; i++)\n            if (table[i] != NULL) delete table[i];\n        delete[] table;\n    }\n\n};\n\nint main()\n{\n    HashMap m;\n    string line;\n    ifstream dict_reader(\"C:/Temp/linux.words\");\n    //ifstream dict_reader(\"C:/Temp/shortlist\");\n    if( !dict_reader ) {\n        cout << \"Error opening input file - dict \" << endl ;\n        exit(1) ;\n    }\n\n    int count = 0;\n    while(getline(dict_reader,line)) {    \n        if((line[0] >= 'x' && line[0] < 'y') || (line[0] >= 'X' && line[0] < 'Y') ) {\n            m.put(line,count++);\n        }\n    }\n\n    m.showMap();\n    return 0;\n}\n//Highlighted at http://tohtml.com/cpp/\n//Bred 3 + C++\n//http://www.bogotobogo.com/cplusplus/cpptut.php\n```"]