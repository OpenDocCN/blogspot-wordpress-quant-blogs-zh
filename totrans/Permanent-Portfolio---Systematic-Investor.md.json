["```\n\n###############################################################################\n# Load Systematic Investor Toolbox (SIT)\n# https://systematicinvestor.wordpress.com/systematic-investor-toolbox/\n###############################################################################\nsetInternet2(TRUE)\ncon = gzcon(url('http://www.systematicportfolio.com/sit.gz', 'rb'))\n    source(con)\nclose(con)\n\n\t#*****************************************************************\n\t# Load historical data\n\t#****************************************************************** \n\tload.packages('quantmod')\t\n\ttickers = spl('SPY,TLT,GLD,SHY')\n\n\tdata <- new.env()\n\tgetSymbols(tickers, src = 'yahoo', from = '1980-01-01', env = data, auto.assign = T)\n\t\tfor(i in ls(data)) data[[i]] = adjustOHLC(data[[i]], use.Adjusted=T)\n\n\t\t# extend GLD with Gold.PM - London Gold afternoon fixing prices\n\t\tdata$GLD = extend.GLD(data$GLD)\n\n\tbt.prep(data, align='remove.na')\n\n\t#*****************************************************************\n\t# Code Strategies\n\t#****************************************************************** \t\t\n\tprices = data$prices   \n\t\tn = ncol(prices)\n\t\tnperiods = nrow(prices)\n\n\t# annual\n\tperiod.ends = endpoints(prices, 'years')\n\t\tperiod.ends = period.ends[period.ends > 0]\t\t\n\t\tperiod.ends.y = c(1, period.ends)\n\n\t# quarterly\n\tperiod.ends = endpoints(prices, 'quarters')\n\t\tperiod.ends = period.ends[period.ends > 0]\t\t\n\t\tperiod.ends.q = c(1, period.ends)\n\n\tmodels = list()\n\n\t#*****************************************************************\n\t# Code Strategies\n\t#****************************************************************** \t\n\ttarget.allocation = matrix(rep(1/n,n), nrow=1)\n\n\t# Buy & Hold\t\n\tdata$weight[] = NA\t\n\t\tdata$weight[period.ends.y[1],] = target.allocation\n\tmodels$buy.hold = bt.run.share(data, clean.signal=F)\n\n\t# Equal Weight Annual\n\tdata$weight[] = NA\n\t\tdata$weight[period.ends.y,] = ntop(prices[period.ends.y,], n)\n\tmodels$equal.weight.y = bt.run.share(data, clean.signal=F)\n\n\t# Equal Weight Quarterly\n\tdata$weight[] = NA\n\t\tdata$weight[period.ends.q,] = ntop(prices[period.ends.q,], n)\n\tmodels$equal.weight.q = bt.run.share(data, clean.signal=F)\n\n```", "```\n\n\t#*****************************************************************\n\t# Rebalance based on threshold\n\t#****************************************************************** \t\n\t# Rebalance only when threshold is broken\n\tmodels$threshold.y = bt.max.deviation.rebalancing(data, models$buy.hold, target.allocation, 10/100, 0, period.ends = period.ends.y) \n\n\t# Rebalance only when threshold is broken\n\tmodels$threshold.q = bt.max.deviation.rebalancing(data, models$buy.hold, target.allocation, 10/100, 0, period.ends = period.ends.q) \n\n\t#*****************************************************************\n\t# Create Report\n\t#******************************************************************       \n\tplotbt.custom.report.part1(models)       \n\n\tplotbt.strategy.sidebyside(models)\n\n\t# Plot Portfolio Turnover for each Rebalancing method\n\tlayout(1:2)\n\tbarplot.with.labels(sapply(models, compute.turnover, data), 'Average Annual Portfolio Turnover', F)\n\tbarplot.with.labels(sapply(models, compute.max.deviation, target.allocation), 'Maximum Deviation from Target Mix')\n\n```"]