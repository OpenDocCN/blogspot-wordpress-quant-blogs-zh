["```\n\n###############################################################################\n# Load Systematic Investor Toolbox (SIT)\n# https://systematicinvestor.wordpress.com/systematic-investor-toolbox/\n###############################################################################\nsetInternet2(TRUE)\ncon = gzcon(url('http://www.systematicportfolio.com/sit.gz', 'rb'))\n    source(con)\nclose(con)\n\n    #*****************************************************************\n    # Load historical data\n    #******************************************************************\n    load.packages('quantmod')  \n\n    tickers = spl('VFINX,VIMSX,NAESX,VDMIX,VEIEX,VGSIX,FNARX,QRAAX,VBMFX,VIPSX,OIBAX,BIL') \n\n    data <- new.env()\n    getSymbols(tickers, src = 'yahoo', from = '1970-01-01', env = data, auto.assign = T)\n\n    #--------------------------------   \n    # BIL     30-May-2007 \n    # load 3-Month Treasury Bill from FRED\n    TB3M = quantmod::getSymbols('DTB3', src='FRED', auto.assign = FALSE)\t\t\n    TB3M[] = ifna.prev(TB3M)\t\n    TB3M = processTBill(TB3M, timetomaturity = 1/4, 261)\t\n    #--------------------------------       \t\n\n    # extend\t\n    data$BIL = extend.data(data$BIL, TB3M, scale=T)\t\n\n    for(i in ls(data)) data[[i]] = adjustOHLC(data[[i]], use.Adjusted=T)\t\t\n\n    bt.prep(data, align='remove.na')\n\n```", "```\n\n    #*****************************************************************\n    # Code Strategies\n    #****************************************************************** \n    models = list()\n\n    # Vanguard 500 Index Investor (VFINX)\n    data$weight[] = NA\n        data$weight$VFINX[] = 1\n    models$VFINX  = bt.run.share(data, clean.signal=F) \n\n    #*****************************************************************\n    # Code Strategies\n    #****************************************************************** \t\n    obj = portfolio.allocation.helper(data$prices, periodicity = 'years',\n        min.risk.fns = list(EW=equal.weight.portfolio)\n    ) \t\n    models$year = create.strategies(obj, data)$models$EW\n\n    obj = portfolio.allocation.helper(data$prices, periodicity = 'quarters',\n        min.risk.fns = list(EW=equal.weight.portfolio)\n    ) \t\n    models$quarter = create.strategies(obj, data)$models$EW\n\n    obj = portfolio.allocation.helper(data$prices, periodicity = 'months',\n        min.risk.fns = list(EW=equal.weight.portfolio)\n    ) \t\n    models$month = create.strategies(obj, data)$models$EW\n\n    #*****************************************************************\n    # Create Report\n    #****************************************************************** \n    strategy.performance.snapshoot(models, T)\n\n```"]