["```\n\nasset.paths <- function(s0, mu, sigma, \n\tnsims = 10000, \n\tperiods = c(0, 1)\t# time periods at which to simulate prices\n) \n{\n\ts0 = as.vector(s0)\n\tnsteps = len(periods)\n\tdt = c(periods[1], diff(periods))\n\n\tif( len(s0) == 1 ) {\n\t\tdrift = mu - 0.5 * sigma^2\n\t\tif( nsteps == 1 ) {\n\t\t\ts0 * exp(drift * dt + sigma * sqrt(dt) * rnorm(nsims))\n\t\t} else {\n\t\t\ttemp = matrix(exp(drift * dt + sigma * sqrt(dt) * rnorm(nsteps * nsims)), nc=nsims)\n\t\t\tfor(i in 2:nsteps) temp[i,] = temp[i,] * temp[(i-1),]\n\t\t\ts0 * temp\n\t\t}\n\t} else {\n\t\trequire(MASS)\n\t\tdrift = mu - 0.5 * diag(sigma)\n\t\tn = len(mu)\n\n\t\tif( nsteps == 1 ) {\n\t\t\ts0 * exp(drift * dt + sqrt(dt) * t(mvrnorm(nsims, rep(0, n), sigma)))\n\t\t} else {\n\t\t\ttemp = array(exp(as.vector(drift %*% t(dt)) + t(sqrt(dt) * mvrnorm(nsteps * nsims, rep(0, n), sigma))), c(n, nsteps, nsims))\n\t\t\tfor(i in 2:nsteps) temp[,i,] = temp[,i,] * temp[,(i-1),]\n\t\t\ts0 * temp\n\t\t}\n\t}\n}\n\n```", "```\n\n###############################################################################\n# Load Systematic Investor Toolbox (SIT)\n# https://systematicinvestor.wordpress.com/systematic-investor-toolbox/\n###############################################################################\nsetInternet2(TRUE)\ncon = gzcon(url('http://www.systematicportfolio.com/sit.gz', 'rb'))\n    source(con)\nclose(con)\n\n\t#*****************************************************************\n\t# Plot some price paths\n\t#******************************************************************  \n\tS = c(100,105)\n\tX = 98\n\tTime = 0.5\n\tr = 0.05\n\tsigma = c(0.11,0.16)\n\trho = 0.63\n\tN = 10000\n\n\t# Single Asset for 10 years\n\tperiods = 0:10\n\tprices = asset.paths(S[1], r, sigma[1], N, periods = periods)\n\n\t# plot\n\tmatplot(prices[,1:100], type='l', xlab='Years', ylab='Prices',\n\t\tmain='Selected Price Paths')\n\n\t# Multiple Assets for 10 years\n\tperiods = 0:10\n\tcov.matrix = sigma%*%t(sigma) * matrix(c(1,rho,rho,1),2,2)\n\tprices = asset.paths(S, c(r,r), cov.matrix, N, periods = periods)\n\n\t# plot\n\tlayout(1:2)\n\tmatplot(prices[1,,1:100], type='l', xlab='Years', ylab='Prices',\n\t\tmain='Selected Price Paths for Asset 1')\n\tmatplot(prices[2,,1:100], type='l', xlab='Years', ylab='Prices',\n\t\tmain='Selected Price Paths for Asset 2')\n\n```", "```\n\n\t#*****************************************************************\n\t# Price European Call Option\n\t#******************************************************************  \n\tload.packages('fOptions')\n\n\t# Blackâ€“Scholes\n\tGBSOption(TypeFlag = \"c\", S = S[1], X = X, Time = Time, r = r, b = r, sigma = sigma[1])\n\n\t# Monte Carlo simulation\t\n\tN = 1000000\t\n\tprices = asset.paths(S[1], r, sigma[1], N, periods = Time)\n\t\tfuture.payoff = pmax(0, prices - X)\n\t\tdiscounted.payoff = future.payoff * exp(-r * Time)\n\t# option price\n\tmean(discounted.payoff) \n\n\t#*****************************************************************\n\t# Price Asian Call Option\n\t#******************************************************************  \n\tload.packages('fExoticOptions')\n\n\tTime = 1/12\n\n\t# Approximation\n\tTurnbullWakemanAsianApproxOption(TypeFlag = \"c\", S = S[1], SA = S[1], \n  \t\tX = X, Time = Time, time = Time, tau = 0 , r = r, b = r, sigma = sigma[1])\n\n\t# Monte Carlo simulation\t\t\n\tN = 100000\n\tperiods = seq(0,Time,1/360)\n\t\tn = len(periods)\n\tprices = asset.paths(S[1], r, sigma[1], N, periods = periods)\n\t\tfuture.payoff = pmax(0, colSums(prices)/n - X)\n\t\tdiscounted.payoff = future.payoff * exp(-r * Time)\n\t# option price\n\tmean(discounted.payoff) \n\n\t#*****************************************************************\n\t# Price Basket Option\n\t#******************************************************************  \n\n\tTime = 0.5\n\n\t# Approximation\n\tTwoRiskyAssetsOption(TypeFlag = \"cmax\", S1 = S[1], S2 = S[2],\n\t\tX = X, Time = Time, r = r, b1 = r, b2 = r,\n\t\tsigma1 = sigma[1], sigma2 = sigma[2], rho = rho)\n\n\t# Monte Carlo simulation\t\t\n\tN = 100000\n\tcov.matrix = sigma%*%t(sigma) * matrix(c(1,rho,rho,1),2,2)\n\tprices = asset.paths(S, c(r,r), sigma = cov.matrix, N, periods = Time)\n\t\tfuture.payoff = pmax(0, apply(prices,2,max) - X)\n\t\tdiscounted.payoff = future.payoff * exp(-r * Time)\n\t# option price\n\tmean(discounted.payoff) \n\n\t#*****************************************************************\n\t# Price Asian Basket Option\n\t#******************************************************************  \n\n\tTime = 1/12\n\n\t# Monte Carlo simulation\t\t\n\tN = 10000\n\tperiods = seq(0,Time,1/360)\n\t\tn = len(periods)\n\n\tprices = asset.paths(S, c(r,r), sigma = cov.matrix, N, periods = periods)\n\t\tfuture.payoff = pmax(0, colSums(apply(prices,c(2,3),max))/n - X)\n\t\tdiscounted.payoff = future.payoff * exp(-r * Time)\n\t# option price\n\tmean(discounted.payoff) \n\n```"]