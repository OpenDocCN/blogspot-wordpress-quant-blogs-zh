["```\n\n# load Systematic Investor Toolbox\nsetInternet2(TRUE)\nsource(gzcon(url('https://github.com/systematicinvestor/SIT/raw/master/sit.gz', 'rb')))\n\n#--------------------------------------------------------------------------\n# Create Efficient Frontier\n#--------------------------------------------------------------------------\nia = aa.test.create.ia()\nn = ia$n\n\n# -0.5 <= x.i <= 0.8 \nconstraints = new.constraints(n, lb = -0.5, ub = 0.8)\n\n# SUM x.i = 1\nconstraints = add.constraints(rep(1, n), 1, type = '=', constraints)\n\n# create efficient frontier(s)\nef.risk = portopt(ia, constraints, 50, 'Risk')\nef.mad = portopt(ia, constraints, 50, 'MAD', min.mad.portfolio)\n\n# Plot multiple Efficient Frontiers & Transition Maps\nlayout( matrix(1:4, nrow = 2) )\nplot.ef(ia, list(ef.risk, ef.mad), portfolio.risk, F)\nplot.ef(ia, list(ef.risk, ef.mad), portfolio.mad, F)\n\nplot.transition.map(ef.risk)\nplot.transition.map(ef.mad)\n\n```", "```\n\n#--------------------------------------------------------------------------\n# Create 130:30\n# -v.i <= x.i <= v.i, v.i>0, SUM(v.i) = 1.6\n#--------------------------------------------------------------------------\n\n# -0.5 <= x.i <= 0.8 \nconstraints = new.constraints(n, lb = -0.5, ub = 0.8)\n\n# SUM x.i = 1\nconstraints = add.constraints(rep(1, n), 1, type = '=', constraints)\t\t\n\n# adjust prior constraints, add v.i\nconstraints = add.variables(n, constraints)\n\n# -v.i <= x.i <= v.i\n#   x.i + v.i >= 0\nconstraints = add.constraints(rbind(diag(n), diag(n)), rep(0, n), type = '>=', constraints)\n\n#   x.i - v.i <= 0\nconstraints = add.constraints(rbind(diag(n), -diag(n)), rep(0, n), type = '<=', constraints)\n\n# SUM(v.i) = 1.6\nconstraints = add.constraints(c(rep(0, n), rep(1, n)), 1.6, type = '=', constraints)\n\n# create efficient frontier(s)\nef.risk = portopt(ia, constraints, 50, 'Risk')\n\t# keep only portfolio weights\n\tef.risk$weight = ef.risk$weight[,(1:n)]\t\t\t\n\nef.mad = portopt(ia, constraints, 50, 'MAD', min.mad.portfolio)\n\tef.mad$weight = ef.mad$weight[,(1:n)]\n\n# Plot multiple Efficient Frontiers & Transition Maps\nlayout( matrix(1:4, nrow = 2) )\nplot.ef(ia, list(ef.risk, ef.mad), portfolio.risk, F)\t\nplot.ef(ia, list(ef.risk, ef.mad), portfolio.mad, F)\t\n\nplot.transition.map(ef.risk)\nplot.transition.map(ef.mad)\n\n```", "```\n\n#--------------------------------------------------------------------------\n# Create 130:30\n# Split x into x.long and x.short, x.long and x.short >= 0\n# SUM(x.long) - SUM(x.short) = 1.6\n#--------------------------------------------------------------------------\n# Split Input Assumptions for x into x.long and x.short \nia.ls = aa.test.ia.add.short(ia)\n\n# x.long and x.short >= 0\n# x.long <= 0.8 \n# x.short <= 0.5 \nconstraints = new.constraints(2*n, lb = 0, ub = c(rep(0.8,n),rep(0.5,n)))\n\n# SUM (x.long - x.short) = 1\nconstraints = add.constraints(c(rep(1,n), -rep(1,n)), 1, type = '=', constraints)\t\t\n\n# SUM (x.long + x.short) = 1.6\nconstraints = add.constraints(c(rep(1,n), rep(1,n)), 1.6, type = '=', constraints)\t\t\n\n# create efficient frontier(s)\nef.risk = portopt(ia.ls, constraints, 50, 'Risk')\n\t# compute x\n\tef.risk$weight = ef.risk$weight[, 1:n] - ef.risk$weight[, (n+1):(2*n)]\n\nef.mad = portopt(ia.ls, constraints, 50, 'MAD', min.mad.portfolio)\n\tef.mad$weight = ef.mad$weight[, 1:n] - ef.mad$weight[, (n+1):(2*n)]\n\n# Plot multiple Efficient Frontiers & Transition Maps\nlayout( matrix(1:4, nrow = 2) )\nplot.ef(ia, list(ef.risk, ef.mad), portfolio.risk, F)\t\nplot.ef(ia, list(ef.risk, ef.mad), portfolio.mad, F)\t\n\nplot.transition.map(ef.risk)\nplot.transition.map(ef.mad)\n\n```", "```\n\n#--------------------------------------------------------------------------\n# Create 200:100 using binary[0/1] variables and Branch and Bound algorithm\n# Split x into x.long and x.short, x.long and x.short >= 0\n# SUM(x.long) - SUM(x.short) = 3\n#\n# Solve using branch and bound: add a binary var b.i, x.long.i < b.i, x.short.i < (1-b.i)\n#--------------------------------------------------------------------------\n\n# x.long and x.short >= 0\n# x.long <= 0.8 \n# x.short <= 0.5 \nconstraints = new.constraints(2*n, lb = 0, ub = c(rep(0.8,n),rep(0.5,n)))\n\n# SUM (x.long - x.short) = 1\nconstraints = add.constraints(c(rep(1,n), -rep(1,n)), 1, type = '=', constraints)\t\t\n\n# SUM (x.long + x.short) = 3\nconstraints = add.constraints(c(rep(1,n), rep(1,n)), 3, type = '=', constraints)\t\t\n\n# NEW add binary constraint\t\n# adjust prior constraints: add b.i\nconstraints = add.variables(n, constraints)\n\n# index of binary variables b.i\nconstraints$binary.index = (2*n+1):(3*n)\n\n# binary variable b.i, x.long.i < b.i, x.short.i < (1-b.i)\n# x.long.i < b.i\nconstraints = add.constraints(rbind(diag(n), 0*diag(n), -diag(n)), rep(0, n), type = '<=', constraints)\n\n# x.short.i < (1-b.i)\nconstraints = add.constraints(rbind(0*diag(n), diag(n), diag(n)), rep(1, n), type = '<=', constraints)\n\n# create efficient frontier(s)\nef.risk = portopt(ia.ls, constraints, 50, 'Risk')\n\t# compute x\n\tef.risk$weight = ef.risk$weight[, 1:n] - ef.risk$weight[, (n+1):(2*n)]\n\nef.mad = portopt(ia.ls, constraints, 50, 'MAD', min.mad.portfolio)\n\tef.mad$weight = ef.mad$weight[, 1:n] - ef.mad$weight[, (n+1):(2*n)]\t\t\n\n# Plot multiple Efficient Frontiers & Transition Maps\nlayout( matrix(1:4, nrow = 2) )\nplot.ef(ia, list(ef.risk, ef.mad), portfolio.risk, F)\t\nplot.ef(ia, list(ef.risk, ef.mad), portfolio.mad, F)\t\n\nplot.transition.map(ef.risk)\nplot.transition.map(ef.mad)\n\n```"]