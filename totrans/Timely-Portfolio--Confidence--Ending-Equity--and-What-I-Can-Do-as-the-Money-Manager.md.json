["```\nrequire(quantmod)\nrequire(PerformanceAnalytics)\nrequire(ggplot2)   berkshire_sp500 <- read.csv(\"berkshire_and_sp500.csv\",stringsAsFactors=FALSE)\nberkshire_sp500 <- as.xts(berkshire_sp500[,2:3],order.by=as.Date(berkshire_sp500[,1]))   #annual data unfortunately does not work with PerformanceAnalytics\n#so these won't look as good as I would like   #calculate growth of $1\n#first step is getting returns\ncumPerf <- ROC(berkshire_sp500,n=1,type=\"discrete\")\n#remove na from start of series\ncumPerf[1,] <- 0\n#second step is calculating the cumulative product of returns\n#or geometrically link the periodic returns\ncumPerf[,1] <- cumprod(1+cumPerf[,1])\ncumPerf[,2] <- cumprod(1+(cumPerf[,2]))   #get df from the xts\ndf <- data.frame(cbind(index(cumPerf),data.matrix(coredata(cumPerf[,1:2]))))\n#name columns\ncolnames(df) <- c(\"Date\",colnames(df)[2:3])\n#use melt to get in format that ggplot likes best\ndf <- melt(df,id=1)\ncolnames(df) <- c(\"Date\",\"Investment\",\"GrowthOfDollar\")\n#jpeg(filename=\"GrowthOfDollar.jpg\",quality=100,width=6.25, height = 5, \n# units=\"in\",res=96)\nggplot(df,aes(x=Date,y=GrowthOfDollar,colour=Investment)) +\ngeom_line() + scale_x_date(major=\"5 years\",format=\"%Y\") +\nscale_y_log10() + opts(title = \"Berkshire and S&P 500 Growth of $1 \n1965-2010\")\n#dev.off()\n```"]