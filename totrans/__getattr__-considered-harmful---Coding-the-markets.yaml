- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-12 19:35:25'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: __getattr__ considered harmful | Coding the markets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://etrading.wordpress.com/2011/03/08/__getattr__-considered-harmful/#0001-01-01](https://etrading.wordpress.com/2011/03/08/__getattr__-considered-harmful/#0001-01-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: __getattr__ considered harmful
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: March 8, 2011
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Today’s coding reminded me why avoid __getattr__ in Python. FYI, a class that
    implements a __getattr__ method overrides the member access operator “.”  So simply
    referencing object.member invokes object.__getattr__( member). A typical debugging
    technique in Python is to litter code with print object.member. Guess what happens
    if you use that debugging technique inside a __getattr__ method ?  Like, duh ?! 
    😉
  prefs: []
  type: TYPE_NORMAL
