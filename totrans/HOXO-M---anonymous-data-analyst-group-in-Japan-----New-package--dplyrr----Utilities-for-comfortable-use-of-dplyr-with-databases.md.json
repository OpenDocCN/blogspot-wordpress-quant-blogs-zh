["```\ninstall.packages(\"devtools\") # if you have not installed \"devtools\" package\ndevtools::install_github(\"hoxo-m/dplyrr\") \n```", "```\nlibrary(dplyrr)\nlibrary(nycflights13)\n\ndb \n```", "```\nlibrary(dplyrr)\n# Create database object\ndb \n```", "```\n## src:  sqlite 3.8.6 [my_db.sqlite3]\n## tbls: airlines, airports, flights, planes, sqlite_stat1, weather\n\n```", "```\nairlines_tbl \n```", "```\nload_tbls(db) \n```", "```\n## Loading: airlines_tbl\n## Loading: airports_tbl\n## Loading: flights_tbl\n## Loading: planes_tbl\n## Loading: sqlite_stat1_tbl\n## Loading: weather_tbl\n\n```", "```\nls(pattern = \"_tbl$\") \n```", "```\n## [1] \"airlines_tbl\"     \"airports_tbl\"     \"flights_tbl\"     \n## [4] \"planes_tbl\"       \"sqlite_stat1_tbl\" \"weather_tbl\"\n\n```", "```\nglimpse(airlines_tbl) \n```", "```\n## Observations: 16\n## Variables:\n## $ carrier (chr) \"9E\", \"AA\", \"AS\", \"B6\", \"DL\", \"EV\", \"F9\", \"FL\", \"HA\", ...\n## $ name    (chr) \"Endeavor Air Inc.\", \"American Airlines Inc.\", \"Alaska...\n\n```", "```\ndb % select(air_time)\nair_time % collect\nhead(air_time, 3) \n```", "```\n## Source: local data frame [3 x 1]\n## \n##   air_time\n## 1      227\n## 2      227\n## 3      160\n\n```", "```\nq % \n  select(air_time) %>%\n  mutate(air_time_cut = if(air_time > 0 && air_time <= 80) \"(0,80]\"\n         else if(air_time > 80 && air_time <= 120) \"(80,120]\"\n         else if(air_time > 120 && air_time <= 190) \"(120,190]\"\n         else if(air_time > 190 && air_time <= 900) \"(190,900]\")\nair_time_with_cut % collect\nhead(air_time_with_cut, 3) \n```", "```\n## Source: local data frame [3 x 2]\n## \n##   air_time air_time_cut\n## 1      227    (190,900]\n## 2      227    (190,900]\n## 3      160    (120,190]\n\n```", "```\nq % \n  select(air_time) %>%\n  mutate(air_time_cut = cut(air_time, breaks=c(0, 80, 120, 190, 900)))\nair_time_with_cut % collect\nhead(air_time_with_cut, 3) \n```", "```\n## Source: local data frame [3 x 2]\n## \n##   air_time air_time_cut\n## 1      227    (190,900]\n## 2      227    (190,900]\n## 3      160    (120,190]\n\n```", "```\nq % \n  select(air_time) %>%\n  mutate(air_time_cut = cut(air_time, breaks=c(0, 80, 120, 190, 900), labels=\"-\"))\nair_time_with_cut % collect\nhead(air_time_with_cut, 3) \n```", "```\n## Source: local data frame [3 x 2]\n## \n##   air_time air_time_cut\n## 1      227      191-900\n## 2      227      191-900\n## 3      160      121-190\n\n```", "```\nq % \n  select(air_time) %>%\n  summarise(odd_airtime_rows = sum(if(air_time %% 2 == 1) 1L else 0L), \n            even_airtime_rows = sum(if(air_time %% 2 == 0) 1L else 0L), \n            total_rows=n())\nq %>% collect \n```", "```\n## Source: local data frame [1 x 3]\n## \n##   odd_airtime_rows even_airtime_rows total_rows\n## 1           164150            163196     336776\n\n```", "```\nq % \n  select(air_time) %>%\n  summarise(odd_airtime_rows = count_if(air_time %% 2 == 1), \n            even_airtime_rows = n_if(air_time %% 2 == 0), \n            total_rows=n())\nq %>% collect \n```", "```\n## Source: local data frame [1 x 3]\n## \n##   odd_airtime_rows even_airtime_rows total_rows\n## 1           164150            163196     336776\n\n```", "```\nlibrary(dplyr)\n\ndb %\n  select(month, air_time) %>%\n  filter(month == 1) %>%\n  filter(air_time > 200 || air_time < 100)\nq$query \n```", "```\n## <Query> SELECT \"month\" AS \"month\", \"air_time\" AS \"air_time\"\n## FROM \"flights\"\n## WHERE \"month\" = 1.0 AND \"air_time\" > 200.0 OR \"air_time\" < 100.0\n## <SQLiteConnection>\n\n```", "```\nlibrary(dplyrr)\n\ndb %\n  select(month, air_time) %>%\n  filter(month == 1) %>%\n  filter(air_time > 200 || air_time < 100)\nq$query \n```", "```\n## <Query> SELECT \"month\" AS \"month\", \"air_time\" AS \"air_time\"\n## FROM \"flights\"\n## WHERE (\"month\" = 1.0) AND (\"air_time\" > 200.0 OR \"air_time\" < 100.0)\n## <SQLiteConnection>\n\n```", "```\nsrcs \n```", "```\n##   x\n## 1 1\n## 2 2\n## 3 3\n## 4 4\n## 5 5\n\n```", "```\nq %\n  mutate(y = moving_mean(x, 1))\nq %>% collect \n```", "```\n## Source: local data frame [5 x 2]\n## \n##   x   y\n## 1 1 1.5\n## 2 2 2.0\n## 3 3 3.0\n## 4 4 4.0\n## 5 5 4.5\n\n```", "```\nq$query \n```", "```\n## <Query> SELECT \"x\", \"y\"\n## FROM (SELECT \"x\", avg(\"x\") OVER (ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) AS \"y\"\n## FROM \"tlsqbjsuou\") AS \"_W1\"\n## <PostgreSQLConnection:(10316,0)>\n\n```", "```\nq %\n  mutate(y = moving_mean(x, 1, 2))\nq %>% collect \n```", "```\n## Source: local data frame [5 x 2]\n## \n##   x   y\n## 1 1 2.0\n## 2 2 2.5\n## 3 3 3.5\n## 4 4 4.0\n## 5 5 4.5\n\n```", "```\nq$query \n```", "```\n## <Query> SELECT \"x\", \"y\"\n## FROM (SELECT \"x\", avg(\"x\") OVER (ROWS BETWEEN 1 PRECEDING AND 2 FOLLOWING) AS \"y\"\n## FROM \"tlsqbjsuou\") AS \"_W2\"\n## PostgreSQLConnection:(10316,0)>\n\n```", "```\nsrcs \n```", "```\n##   class x y\n## 1     A 1 6\n## 2     A 2 5\n## 3     B 3 4\n## 4     B 4 3\n## 5     C 5 2\n## 6     C 6 1\n\n```", "```\nq %\n  group_by(class) %>%\n  mutate(z = first_value(x))\nq %>% collect \n```", "```\n## Source: local data frame [6 x 4]\n## Groups: class\n## \n##   class x y z\n## 1     A 1 6 1\n## 2     A 2 5 1\n## 3     B 3 4 3\n## 4     B 4 3 3\n## 5     C 5 2 5\n## 6     C 6 1 5\n\n```", "```\nq$query \n```", "```\n## <Query> SELECT \"class\", \"x\", \"y\", \"z\"\n## FROM (SELECT \"class\", \"x\", \"y\", first_value(\"x\") OVER (PARTITION BY \"class\" ORDER BY \"x\") AS \"z\"\n## FROM \"slrhxfdvrt\") AS \"_W3\"\n## <PostgreSQLConnection:(10316,0)>\n\n```", "```\nq %\n  group_by(class) %>%\n  mutate(z = first_value(x, y))\nq %>% collect \n```", "```\n## Source: local data frame [6 x 4]\n## Groups: class\n## \n##   class x y z\n## 1     A 2 5 2\n## 2     A 1 6 2\n## 3     B 4 3 4\n## 4     B 3 4 4\n## 5     C 6 1 6\n## 6     C 5 2 6\n\n```", "```\nq$query \n```", "```\n## <Query> SELECT \"class\", \"x\", \"y\", \"z\"\n## FROM (SELECT \"class\", \"x\", \"y\", first_value(\"x\") OVER (PARTITION BY \"class\" ORDER BY \"y\") AS \"z\"\n## FROM \"slrhxfdvrt\") AS \"_W4\"\n## <PostgreSQLConnection:(10316,0)>\n\n```", "```\nq %\n  group_by(class) %>%\n  mutate(z = first_value(x, desc(y)))\nq %>% collect \n```", "```\n## Source: local data frame [6 x 4]\n## Groups: class\n## \n##   class x y z\n## 1     A 1 6 1\n## 2     A 2 5 1\n## 3     B 3 4 3\n## 4     B 4 3 3\n## 5     C 5 2 5\n## 6     C 6 1 5\n\n```", "```\nq$query \n```", "```\n## <Query> SELECT \"class\", \"x\", \"y\", \"z\"\n## FROM (SELECT \"class\", \"x\", \"y\", first_value(\"x\") OVER (PARTITION BY \"class\" ORDER BY \"y\" DESC) AS \"z\"\n## FROM \"slrhxfdvrt\") AS \"_W5\"\n## <PostgreSQLConnection:(10316,0)>\n\n```", "```\ndevtools::install_github(\"hoxo-m/dplyrr\") \n```", "```\ndetach(\"package:dplyrr\", unload = TRUE)\ndetach(\"package:dplyr\", unload = TRUE) \n```"]