["```\n\n> symbols <- c(\"CRM\", \"QQQ\")\n> endDate <- Sys.Date()\n> startDate <- endDate - as.difftime(52*5, unit=\"weeks\")\n> quoteType <- \"Close\"\n> p <- do.call(cbind, lapply(symbols, get.hist.quote, start=startDate, end=endDate,  quote=quoteType))\n> colnames(p) <- symbols\n> doReturnDecomp(p)\nnormal mix likelihood: -3485.55 phi1 params: 0.0003471366 0.01673634 params 0.2546208 -0.001208877 0.0113988\nskew-t mix likelihood: -3566.512 phi1 params: 0.003844969 0.01079941 -0.3252923 2.893228 params 0.2357737 -0.004188977 0.01099266 0.4157174 26.5643\nskew-hyp-t likelihood: -3083.700 phi1 params: 0.01051675 0.1485529 -3.945452 10.10836 params 0.8295289 -0.0003636940 0.03071332 -0.5 5\n\n```", "```\n\nlibrary(\"MASS\")\nlibrary(\"stats\")\nlibrary(\"DEoptim\")\nlibrary(\"sn\")\nlibrary(\"SkewHyperbolic\")\n\nnormalMixtureIndexDecomp <- function(r, i)\n{\n  # Two-step MLE estimation of return decomposition model, assuming both\n  # return distributions are normal.\n  #\n  # Args:\n  #   r: return series being decomposed\n  #   i: index series used for decomposition\n  #\n  # Return value: MLE parameter estimates\n\n  z <- r - i\n  id <- fitdistr(i, \"normal\")$estimate\n  negLogLikeFun <- function(p) {\n    a <- p[1]; mu1 <- p[2]; s1 <- p[3];\n    ll <- (-sum(log(a * dnorm(z,mu1,s1) + (1 - a) * dnorm(i, id[1], id[2]))));\n    return (ll); \n  }\n  mle <- DEoptim(negLogLikeFun, c(0, -0.5, 0), c(1, .5, .5), control=list(trace=FALSE))\n\n  cat(\"normal mix likelihood:\", last(mle$member$bestvalit), \"phi1 params:\",id, \"params\", last(mle$member$bestmemit),\"\\n\")\n  mle <- last(mle$member$bestmemit)\n\n  x <- seq(-.25,.25,length.out=500)\n  dnorm1 <- dnorm(x, id[1], id[2])\n  dnorm2 <- dst(x, mle[2], mle[3])\n  plot(x, dnorm1, type='l', ylim=c(0, max(dnorm1,dnorm2)), ylab=\"Density\", main=\"Normal Mixture\")\n  lines(x, dnorm2, col='red')\n  abline(v=id[1], lty=2)\n  abline(v=mle[2], col='red', lty=2)\n  legend(\"topleft\",legend=c(\"phi1\", \"phi2\"), fill=colors, cex=0.5)\n\n  return (mle)\n}\n\nmixtureSkewTIndexDecomp <- function(r, i)\n{\n  # Two-step MLE estimation of return decomposition model, assuming both\n  # return distributions are skew-t.\n  #\n  # Args:\n  #   r: return series being decomposed\n  #   i: index series used for decomposition\n  #\n  # Return value: MLE parameter estimates\n\n  z <- r - i\n  idp <- st.mle(y=i)$dp\n  negLogLikeFun <- function(p) {\n    a <- p[1]; mu1 <- p[2]; s1 <- p[3]; s2 <- p[4]; df1 <- p[5]\n    ll <- (-sum(log(a * dst(z,location=mu1,scale=s1,shape=s2,df=df1) + (1 - a) * dst(i, dp=idp))));\n    return (ll); \n  }\n  mle <- DEoptim(negLogLikeFun, c(0, -0.5, 0, 0, 2), c(1, .5, .5, 5, 50), control=list(trace=FALSE))\n\n  cat(\"skew-t mix likelihood:\", last(mle$member$bestvalit), \"phi1 params:\", idp, \"params\", last(mle$member$bestmemit),\"\\n\")\n  mle <- last(mle$member$bestmemit)\n\n  x <- seq(-.25,.25,length.out=500)\n  dst1 <- dst(x, dp=idp)\n  dst2 <- dst(x, dp=mle[2:5])\n  plot(x, dst1, type='l', ylim=c(0, max(dst1,dst2)), ylab=\"Density\", main=\"Skew T Mixture\")\n  lines(x, dst2, col='red')\n  abline(v=idp[1], lty=2)\n  abline(v=mle[2], col='red', lty=2)\n  legend(\"topleft\",legend=c(\"phi1\", \"phi2\"), fill=colors, cex=0.5)\n\n  return (mle)\n}\n\nmixtureSkewHypTIndexDecomp <- function(r, i)\n{\n  # Two-step MLE estimation of return decomposition model, assuming both\n  # return distributions are skew hyperbolic student-t.\n  #\n  # Args:\n  #   r: return series being decomposed\n  #   i: index series used for decomposition\n  #\n  # Return value: MLE parameter estimates\n\n  z <- r - i\n  iparam <- skewhypFit(i,plots=FALSE,printOut=FALSE)$param\n  negLogLikeFun <- function(p) {\n    a <- p[1];\n    ll <- (-sum(log(a * dskewhyp(z,param=p[2:5]) + (1 - a) * dskewhyp(i, param=iparam))));\n    return (ll); \n  }\n  mle <- DEoptim(negLogLikeFun, c(0, -5, 0, -0.5, 0), c(1, 5, .5, -0.5, 5), control=list(trace=FALSE))\n\n  cat(\"skew-hyp-t likelihood:\", last(mle$member$bestvalit), \"phi1 params:\",iparam,\"params\", last(mle$member$bestmemit),\"\\n\")\n  mle <- last(mle$member$bestmemit)\n\n  x <- seq(-.25,.25,length.out=500)\n  dskewhyp1 <- dskewhyp(x, param=iparam)\n  dskewhyp2 <- dskewhyp(x, param=mle[2:5])\n  plot(x, dskewhyp1, type='l', ylim=c(0, max(dskewhyp1,dskewhyp2)), ylab=\"Density\", main=\"Skew Hyperbolic Student-T\")\n  lines(x, dskewhyp2, col='red')\n  abline(v=iparam[1], lty=2)\n  abline(v=mle[2], col='red', lty=2)\n  legend(\"topleft\",legend=c(\"phi1\", \"phi2\"), fill=colors, cex=0.5)\n\n  return (mle)\n}\n\ndoReturnDecomp <- function(p)\n{\n  # Decompose return of two series, using several parametric distributions.\n  #\n  # Args:\n  #   p: p[,1] is return being decomposed; p[,2] is index returns\n  #\n  # Return value: none\n\n  r <- ROC(p[,1], type=\"discrete\", na.pad=FALSE)\n  i <- ROC(p[,2], type=\"discrete\", na.pad=FALSE)\n\n  normalMixtureIndexDecomp(r, i)\n  mixtureSkewTIndexDecomp(r,i)\n  mixtureSkewHypTIndexDecomp(r,i)\n}\n\n```"]