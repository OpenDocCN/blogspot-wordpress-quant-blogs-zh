["```\nreps = c(\"http://ftp.sunet.se/pub/lang/CRAN\", \"http://cran.gforge.se\")\ninstall.packages(\"Gmisc\", repos = reps, dependencies = TRUE) \n```", "```\nlibrary(Gmisc, verbose = FALSE)\n\n# manually enter the data in a data frame\ndata1874 <- data.frame(c(1872, 1874, 1869, 1870, 1870, 1871, 1871, 1871, 1870, \n    1873, 1872, 1871), c(153825, 41380, 131800, 15447, 4893, 2109, 16651, 80361, \n    1749, 7058, 3801, 18900), c(0, 0, 106600, 33695, 14230, 55320, 37160, 4775, \n    4325, 1535, 6980, 0), c(198540, 20580, 274100, 88487, 40505, 62857, 119000, \n    429486, 7327, 11794, 16877, 284561))\n\nrownames(data1874) <- c(\"Banks of the United Kingdom\", \"Banks of Australia\", \n    \"Banks of France\", \"Banks of Italy\", \"National Bank of Belgium\", \"Bank of the Netherlands\", \n    \"Bank of Austria-Hungary\", \"Imperial State Bank of Russia\", \"Imperial Bank of Sweden\", \n    \"Bank of Norway\", \"National Bank of Denmark\", \"National Bank of the United States\")\ncolnames(data1874) <- c(\" \", \"Gold\", \"Silver\", \"Total Note Circulation\")\n\ndata1885 <- data.frame(c(141205, 65890, 231483, 56121, 13900, 19161, 25902, \n    102207, 3436, 7169, 11566, 158100), c(0, 0, 217087, 11203, 6540, 38366, \n    48646, 676, 777, 0, 846, 7900), c(186850, 28115, 583610, 189690, 73400, \n    76972, 136351, 429860, 9835, 9287, 18370, 276500))\ncolnames(data1885) <- colnames(data1874)[2:4]\n\n# get sums for totals row in table\ndata1874[NROW(data1874) + 1, ] = apply(data1874, MARGIN = 2, FUN = sum)\ndata1885[NROW(data1885) + 1, ] = apply(data1885, MARGIN = 2, FUN = sum)\n# add Total to row names\nrownames(data1874)[NROW(data1874)] = \"Total\"\nrownames(data1885)[NROW(data1885)] = \"Total\"\n# eliminate the sum of years which does not make sense\ndata1874[NROW(data1874), 1] = \"\"\n\n# get commas in the numbers\ndata1874[, 2:4] <- format(data1874[, 2:4], big.mark = \",\")\ndata1885 <- format(data1885, big.mark = \",\") \n```", "```\n# use htmlTable to produce a table\nhtmlTable(cbind(data1874, data1885), caption = \"\", rowlabel = \"\", cgroup = c(\"Reserves\", \n    \"\", \"Reserves\", \"\"), n.cgroup = c(3, 1, 2, 1, 0), ctable = TRUE, output = TRUE) \n```", "```\n# do all the hard work to make the table more of an exact replica\ngtable_table <- htmlTable(cbind(data1874, data1885), caption = \"\", rowlabel = \"\", \n    cgroup = c(\"Reserves\", \"\", \"Reserves\", \"\"), n.cgroup = c(3, 1, 2, 1, 0), \n    ctable = TRUE, output = FALSE)\n\nrequire(XML)\n# parse the table so that we can access the elements in a very crude\n# manner\ndoc <- htmlParse(gtable_table)\n# add another row heading to the table with XML\ntemp <- addChildren(getNodeSet(doc, \"//thead\")[[1]], newXMLNode(\"tr\", list(newXMLNode(\"th\", \n    attrs = list(colspan = \"1\", style = \"font-weight: 900; border-top: 2px solid grey;border-right: 1px solid grey;\"), \n    text = \"\"), newXMLNode(\"th\", attrs = list(colspan = \"6\", style = \"font-weight: 900; border-top: 2px solid grey;\"), \n    text = \"1870-1874\"), newXMLNode(\"th\", attrs = list(colspan = \"5\", style = \"font-weight: 900; border-top: 2px solid grey;\"), \n    text = \"1885\"))), at = 0)\n\n# add some vertical borders; wish this were easier but very manual\nth <- getNodeSet(doc, \"//thead//th\")  #start with the th elements in thead\nfor (i in c(1, 2, 4, 8, 12, 18)) {\n    oldstyle <- xmlAttrs(th[[i]])[\"style\"]  #get the old style attribute\n    removeAttributes(th[[i]], attrs = \"style\")  #remove the style attribute\n    addAttributes(th[[i]], style = paste(oldstyle, \"border-right: 1px solid grey;\", \n        sep = \"\"))  #add the old style attribute concatenated with border-right\n}\n\nth <- getNodeSet(doc, \"//tbody//td\")  #now do the td elements in tbody\nfor (i in c(seq(1, 133, by = 11), seq(7, 139, by = 11))) {\n    oldstyle <- xmlAttrs(th[[i]])[\"style\"]  #get the old style attribute\n    removeAttributes(th[[i]], attrs = \"style\")  #remove the style attribute\n    addAttributes(th[[i]], style = paste(oldstyle, \"border-right: 1px solid grey;\", \n        sep = \"\"))  #add the old style attribute concatenated with border-right\n}\n\n# although htmlTable will group rows, I could not make it do what I wanted\n# so add underline before the total row\nfor (i in 133:143) {\n    oldstyle <- xmlAttrs(th[[i]])[\"style\"]  #get the old style attribute\n    removeAttributes(th[[i]], attrs = \"style\")  #remove the style attribute\n    addAttributes(th[[i]], style = paste(oldstyle, \"border-top: 1px solid grey;\", \n        sep = \"\"))  #add the old style attribute concatenated with border-top\n}\n\n# for some reason &nbsp; becomes Ã‚, so reverse it back to $nbsp;\nreturnHTML <- gsub(\"[Ã‚].\", replacement = \"&nbsp;\", saveXML(getNodeSet(doc, \"//table\")[[1]]))\n\n# not sure if necessary but free up doc from memory\nfree(doc)\n\ncat(returnHTML) \n```"]