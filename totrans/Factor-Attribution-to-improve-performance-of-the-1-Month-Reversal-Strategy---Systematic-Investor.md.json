["```\n\n###############################################################################\n# Load Systematic Investor Toolbox (SIT)\n# https://systematicinvestor.wordpress.com/systematic-investor-toolbox/\n###############################################################################\nsetInternet2(TRUE)\ncon = gzcon(url('http://www.systematicportfolio.com/sit.gz', 'rb'))\n    source(con)\nclose(con)\n\n\t#*****************************************************************\n\t# Load historical data\n\t#****************************************************************** \n\tload.packages('quantmod')\t\n\ttickers = sp500.components()$tickers\n\n\tdata <- new.env()\n\tgetSymbols(tickers, src = 'yahoo', from = '1970-01-01', env = data, auto.assign = T)\n\t\t# remove companies with less than 5 years of data\n\t\trm.index = which( sapply(ls(data), function(x) nrow(data[[x]])) < 1000 )\t\n\t\trm(list=names(rm.index), envir=data)\n\n\t\tfor(i in ls(data)) data[[i]] = adjustOHLC(data[[i]], use.Adjusted=T)\t\t\n\tbt.prep(data, align='keep.all', dates='1994::')\n\t\ttickers = data$symbolnames\n\n\tdata.spy <- new.env()\n\tgetSymbols('SPY', src = 'yahoo', from = '1970-01-01', env = data.spy, auto.assign = T)\n\tbt.prep(data.spy, align='keep.all', dates='1994::')\n\n\t#*****************************************************************\n\t# Code Strategies\n\t#****************************************************************** \n\tprices = data$prices\n\t\tn = ncol(prices)\n\n\t#*****************************************************************\n\t# Setup monthly periods\n\t#****************************************************************** \n\tperiodicity = 'months'\n\n\tperiod.ends = endpoints(data$prices, periodicity)\n\t\tperiod.ends = period.ends[period.ends > 0]\n\n\tprices = prices[period.ends, ]\t\t\n\n\t#*****************************************************************\n\t# Create Benchmarks, omit results for the first 36 months - to be consistent with Factor Attribution\n\t#****************************************************************** \t\n\tmodels = list()\n\n\t# SPY\n\tdata.spy$weight[] = NA\n\t\tdata.spy$weight[] = 1\n\t\tdata.spy$weight[1:period.ends[36],] = NA\n\tmodels$spy = bt.run(data.spy)\n\n\t# Equal Weight\n\tdata$weight[] = NA\n\t\tdata$weight[period.ends,] = ntop(prices, n)\n\t\tdata$weight[1:period.ends[36],] = NA\t\t\n\tmodels$equal.weight = bt.run(data)\n\n```", "```\n\n# function to compute additional custom stats for factor.rolling.regression\nfactor.rolling.regression.custom.stats <- function(x,y,fit) {\n\tn = len(y)\n\te = y - x %*% fit$coefficients\n\tse = sd(e)\n\treturn(c(e[n], e[n]/se))\n}\n\n\t#*****************************************************************\n\t# Load factors and align them with prices\n\t#****************************************************************** \t\n\t# load Fama/French factors\n\tfactors = get.fama.french.data('F-F_Research_Data_Factors', periodicity = periodicity,download = T, clean = F)\n\n\t# align monthly dates\n\tmap = match(format(index(factors$data), '%Y%m'), format(index(prices), '%Y%m'))\n\t\tdates = index(factors$data)\n\t\tdates[!is.na(map)] = index(prices)[na.omit(map)]\n\tindex(factors$data) = as.Date(dates)\n\n\t# add factors and align\n\tdata.fa <- new.env()\n\t\tfor(i in tickers) data.fa[[i]] = data[[i]][period.ends, ]\n\t\tdata.fa$factors = factors$data / 100\n\tbt.prep(data.fa, align='remove.na')\n\n\tindex = match( index(data.fa$prices), index(data$prices) )\n\t\tprices = data$prices[index, ]\n\n\t#*****************************************************************\n\t# Compute Factor Attribution for each ticker\n\t#****************************************************************** \t\n\n\ttemp = NA * prices\n\tfactors\t= list()\n\t\tfactors$last.e = temp\n\t\tfactors$last.e_s = temp\n\n\tfor(i in tickers) {\n\t\tcat(i, '\\n')\n\n\t\t# Facto Loadings Regression\n\t\tobj = factor.rolling.regression(data.fa, i, 36, silent=T,\n\t\t\tfactor.rolling.regression.custom.stats)\n\n\t\tfor(j in 1:len(factors))\t\t\n\t\t\tfactors[[j]][,i] = obj$fl$custom[,j]\n\n\t}\n\n\t# add base strategy\n\tfactors$one.month = coredata(prices / mlag(prices))\n\n```", "```\n\n\t#*****************************************************************\n\t# Create Quantiles\n\t#****************************************************************** \n\tquantiles = list()\n\n\tfor(name in names(factors)) {\n\t\tcat(name, '\\n')\n\t\tquantiles[[name]] = bt.make.quintiles(factors[[name]], data, index, start.t =  1+36, prefix=paste(name,'_',sep=''))\n\t}\t\n\n\t#*****************************************************************\n\t# Create Report\n\t#****************************************************************** \t\t\t\t\t\n\tplotbt.custom.report.part1(quantiles$one.month$spread,quantiles$last.e$spread,quantiles$last.e_s$spread)\n\n\tplotbt.strategy.sidebyside(quantiles$one.month$spread,quantiles$last.e$spread,quantiles$last.e_s$spread)\n\n\tplotbt.custom.report.part1(quantiles$last.e_s)\n\n```"]