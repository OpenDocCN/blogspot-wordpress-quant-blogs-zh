- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-18 13:59:54'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-18 13:59:54
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Machine learning is for closers – Quantum Financier
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 机器学习是为决策者准备的——量子金融家
- en: 来源：[https://quantumfinancier.wordpress.com/2017/12/23/machine-learning-is-for-closers/#0001-01-01](https://quantumfinancier.wordpress.com/2017/12/23/machine-learning-is-for-closers/#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://quantumfinancier.wordpress.com/2017/12/23/machine-learning-is-for-closers/#0001-01-01](https://quantumfinancier.wordpress.com/2017/12/23/machine-learning-is-for-closers/#0001-01-01)
- en: '[Put that machine learning tutorial down. Machine learning is for closers only.](https://www.youtube.com/watch?v=QMFwFgG9NE8)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**放下那些机器学习教程吧。机器学习是为决策者准备的 only。**（链接保留）'
- en: As some of you that were around back in the early of this blog may know, I always
    held high hopes for the application of machine learning (ml) to generate trading
    edges. I think like many people first coming across machine learning the promises
    of being able to feed raw data in some algorithm you don’t really understand to
    conjure profitable trading ideas seemingly out of thin air is very appealing.
    There is only one problem with that; it doesn’t work like that!
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些在这个博客早期就关注我的朋友可能知道，我一直对机器学习（ml）产生交易优势抱有很高的期望。我认为，像许多首次接触机器学习的人一样，能够将一些你并不真正理解的原始数据输入某种算法，似乎从无中生出盈利交易想法的承诺是非常有吸引力的。唯一的问题是，它不是那样运作的！
- en: 'Much to my chagrin now, a lot (and I mean *a lot*) of what this blog is known
    for is exactly his type of silly applications of ml. With this post, I hope to
    share some of the mistakes I  made and lessons I learned trying to successfully
    make ml work for me that haven’t made it on the blog due to my abysmal posting
    frequency. Here they are, in no particular order:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 让我现在感到非常遗憾的是，这个博客大部分（我的意思是*很多*）知名的内容正是这种对机器学习愚蠢应用。通过这篇文章，我希望分享一些我试图成功让机器学习为我工作而犯的错误和学到的教训，这些内容因为我的更新频率极低而没有在博客上出现。以下内容没有特定的顺序：
- en: '*Understanding the algorithm you are using is important.*'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**理解你正在使用的算法很重要。**'
- en: It is almost too easy to use ml these days. Multiple times I would read a paper
    forecasting the markets using some obscure algorithm and would be able to, through
    proper application of google-fu, find open-sourced code that I could instantly
    try out with my  data. This is both good and bad; on the one hand it is nice to
    be able to use the cutting edge of research easily but of the other, should you
    really give something you don’t understand very well access to your trading account?
    Many of my dollars were mercilessly lit on fire walking that path. I don’t think
    you need to master the algorithm to be able to apply it successfully but understand
    it enough to be able to explain why it might be successful with your specific
    problem is a good start.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，使用机器学习几乎太容易了。我多次读过用某种晦涩算法预测市场的论文，并能够通过恰当的应用谷歌搜索技巧，找到开源代码，我可以用自己的数据立即尝试。这既是好事也是坏事；一方面，能够轻松使用研究的尖端成果是件好事，但另一方面，你真的应该让你的交易账户暴露在你并不深入了解的东西上吗？我走过的路上，很多美元都被无情地烧光了。我认为你不需要精通算法就能成功应用它，但理解它足以解释为什么它可能解决你的特定问题，这是一个很好的开始。
- en: '*Simple, not easy.*'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**简单，不等于容易。**'
- en: One of my worst flaws as a trader is that I am relentlessly attracted to complex
    ideas. I dream about building out complex models able solve the market puzzle
    raking in billions of dollars a la RenTec. Meanwhile, back in the ruthless reality
    of the trading life, just about all the money I make trading comes from thoughtful
    application of simple concepts I understand well to generate meaningful trading
    edges. That however, does not mean that it needs has to be easy. For instance,
    there are multiple reasons why a properly applied ml algorithm might outperform
    say ordinary least-squares regression in certain cases. The trick is to figure
    out if the problem you are currently trying to solve is one of those. Related
    to the point above, understanding a ml technique allows you to have a better idea
    beforehand and saves you time.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 作为交易者，我最大的缺点之一就是我对复杂的想法有着不懈的吸引力。我梦想着建立复杂的模型，能够解决市场的难题，像RenTec那样赚取数十亿美元。然而，在交易生活的残酷现实中，我通过深思熟虑地应用我理解透彻的简单概念来产生有意义的交易优势，几乎所有的交易收入都来源于此。然而，这并不意味着它一定很容易。例如，有多个原因说明为什么在某些情况下，一个正确应用的机器学习算法可能会优于普通的最小二乘回归。关键是要弄清楚你目前正在尝试解决的问题是否其中之一。与上述观点相关的是，理解机器学习技术让你可以在开始之前有一个更好的想法，并节省你的时间。
- en: '*Feature engineering is often more important than the algorithm you choose.*'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**特征工程往往比选择算法更重要。**'
- en: I cannot emphasize this point enough. A lot of the older posts on this blog are
    quite bad in that respect. Most of them use the spray-and-pray approach, that
    is to say put a bunch of technical indicators as features, cry .fit()!, and let
    slip the dogs of war as data-scientist Mark Antony would say. As you can imagine
    it is quite difficult to actually make that work and a lot of the nice equity
    curves generated by these signals don’t really hold up
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我无法强调这一点 enough。博客上许多较早的帖子在这方面相当糟糕。它们大多采用喷洒和祈祷的方法，也就是说，将一堆技术指标作为特征，大喊.fit()，让数据科学家马克·安东尼称之为“让战争之狗逃脱”。正如你所想象的，实际上要让它发挥作用相当困难，而且许多由这些信号产生的漂亮股票曲线并不能真正站得住脚。
- en: out-of-sample. Not a particularly efficient way to go about it. Generating good
    features is the trader’s opportunity to leverage their market knowledge and add
    value to the process. Think of it as getting the algorithm to augment a trader’s
    ability, not replacing it altogether.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 样本外（out-of-sample）方法并不是一种特别高效的途径。生成好的特征是交易员利用市场知识并增加过程价值的机会。将其视为让算法增强交易员的能力，而不是完全取代它。
- en: '*Ensembles > single model.*'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '*集成模型 > 单个模型.*'
- en: Classical finance theory teaches us that diversification through combining multiple
    uncorrelated bets is the only free-lunch left out there. In my experience, combining
    models is quite superior to trying to find the one model to rule them all.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 经典金融理论告诉我们，通过结合多个不相关的投注进行多元化是市场上唯一剩下的免费午餐。据我经验，结合模型远比试图找到一个统治一切的模型要有效。
- en: '*Model predictions can themselves be features.*'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '*模型预测本身可以作为特征.*'
- en: Model-stacking might seem counter-intuitive at first but there were many Kaggle
    competition winners that built very good models based on that concept. The idea
    is simple, use the predictions of ml models as features for a meta-model to generate
    the final output for the model.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 模型堆叠初看起来可能违反直觉，但在很多Kaggle竞赛中，许多获胜者正是基于这个概念构建了非常好的模型。这个想法很简单，就是利用机器学习模型的预测作为元模型的特征，以生成模型的最终输出。
- en: I’ll conclude this non-exhaustive list by saying that the best results I have
    had come from using genetic programming to find a lot of simple edge that by themselves
    wouldn’t make great systems but when thoughtfully combined create a profitable
    platform. I will discuss the approach in forthcoming posts.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我将通过说明使用遗传编程找到了许多简单的边缘条件，这些条件本身并不能构成伟大的系统，但深思熟虑地结合起来，却创造了一个盈利的平台，来总结这个非详尽的列表。在未来的文章中，我将讨论这种方法。
