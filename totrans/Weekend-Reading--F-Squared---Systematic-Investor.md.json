["```\n\n###############################################################################\n# Load Systematic Investor Toolbox (SIT)\n# https://systematicinvestor.wordpress.com/systematic-investor-toolbox/\n###############################################################################\nsetInternet2(TRUE)\ncon = gzcon(url('http://www.systematicportfolio.com/sit.gz', 'rb'))\n    source(con)\nclose(con)\n\n\t#*****************************************************************\n\t# Load historical data\n\t#******************************************************************    \n\tload.packages('quantmod')\t\t\n\n\tdata = new.env()\n\t# load historical market returns\n\ttemp = get.fama.french.data('F-F_Research_Data_Factors', periodicity = '',download = T, clean = T)\n\t\tret = cbind(temp[[1]]$Mkt.RF + temp[[1]]$RF, temp[[1]]$RF)\n\t\tprice = bt.apply.matrix(ret / 100, function(x) cumprod(1 + x))\n\tdata$SPY = make.stock.xts( price$Mkt.RF )\n\tdata$SHY = make.stock.xts( price$RF )\n\n\t# load historical sector returns\n\ttemp = get.fama.french.data('10_Industry_Portfolios', periodicity = '',download = T, clean = T)\t\t\n\t\tret = temp[[1]]\n\t\tprice = bt.apply.matrix(ret[,1:9] / 100, function(x) cumprod(1 + x))\n\tfor(n in names(price)) data[[n]] = make.stock.xts( price[,n] )\n\n\t# align dates\n\tdata$symbolnames = c(names(price), 'SHY', 'SPY')\n\tbt.prep(data, align='remove.na', dates='2000::')\n\n\t# back-test dates\n\tbt.dates = '2001:04::'\n\n\t#*****************************************************************\n\t# Setup\n\t#****************************************************************** \t\n\tprices = data$prices  \n\tn = ncol(data$prices)\n\n\tmodels = list()\n\n\t#*****************************************************************\n\t# Benchmark Strategies\n\t#****************************************************************** \t\t\t\n\tdata$weight[] = NA\n\t\tdata$weight$SPY[1] = 1\n\tmodels$SPY = bt.run.share(data, clean.signal=F, dates=bt.dates)\n\n\tweight = prices\n\t\tweight$SPY = NA\n\t\tweight$SHY = NA\n\n\tdata$weight[] = NA\n\t\tdata$weight[] = ntop(weight[], n)\n\tmodels$EW = bt.run.share(data, clean.signal=F, dates=bt.dates)\n\n\t#*****************************************************************\n\t# Code Strategies\n\t# http://www.mebanefaber.com/2013/12/04/square-root-of-f-squared/\n\t#****************************************************************** \t\t\t\n\tsma = bt.apply.matrix(prices, SMA, 10)\n\n\t# create position score\n\tposition.score = sma\n\tposition.score[ prices < sma ] = NA\n\t\tposition.score$SHY = NA\t\n\t\tposition.score$SPY = NA\t\n\n\t# equal weight allocation\n\tweight = ntop(position.score[], n)\t\n\n\t# number of invested funds\n\tn.selected = rowSums(weight != 0)\n\n\t# cash logic\n\tweight$SHY[n.selected == 0,] = 1\n\n\tweight[n.selected == 1,] = 0.25 * weight[n.selected == 1,]\n\tweight$SHY[n.selected == 1,] = 0.75\n\n\tweight[n.selected == 2,] = 0.5 * weight[n.selected == 2,]\n\tweight$SHY[n.selected == 2,] = 0.5\n\n\tweight[n.selected == 3,] = 0.75 * weight[n.selected == 3,]\n\tweight$SHY[n.selected == 3,] = 0.25\n\n\t# cbind(round(100*weight,0), n.selected)\t\n\n\tdata$weight[] = NA\n\t\tdata$weight[] = weight\n\tmodels$strategy1 = bt.run.share(data, clean.signal=F, dates=bt.dates)\t\n\n\t#*****************************************************************\n\t# Create Report\n\t#******************************************************************       \t\n\tstrategy.performance.snapshoot(models, one.page = T)\n\n```"]