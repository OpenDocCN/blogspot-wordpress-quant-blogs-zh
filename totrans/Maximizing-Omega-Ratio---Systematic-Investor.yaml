- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-18 14:47:34'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Maximizing Omega Ratio | Systematic Investor
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://systematicinvestor.wordpress.com/2011/11/03/maximizing-omega-ratio/#0001-01-01](https://systematicinvestor.wordpress.com/2011/11/03/maximizing-omega-ratio/#0001-01-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The [Omega Ratio](http://en.wikipedia.org/wiki/Omega_ratio) was introduced by
    [Keating and Shadwick](http://faculty.fuqua.duke.edu/~charvey/Teaching/BA453_2006/Keating_An_introduction_to.pdf)
    in 2002\. It measures the ratio of average portfolio wins over average portfolio
    losses for a given target return L.
  prefs: []
  type: TYPE_NORMAL
- en: Let x.i, i= 1,…,n be weights of instruments in the portfolio. We suppose that
    j= 1,…,T scenarios of returns with equal probabilities are available. I will use
    historical assets returns as scenarios. Let us denote by r.ij the return of i-th
    asset in the scenario j. The portfolio’s Omega Ratio can be written as
  prefs: []
  type: TYPE_NORMAL
- en: '![\Omega(L) = \frac{E\left [ max(\sum_{i=1}^{n}r_{ij}x_{i} - L, 0) \right ]}{E\left
    [ max(L - \sum_{i=1}^{n}r_{ij}x_{i}, 0) \right ]}  ](img/7c6ae5b6ac440223dd7e9afdcfed4f65.png)'
  prefs: []
  type: TYPE_IMG
- en: I will use methods presented in [Optimizing Omega by H. Mausser, D. Saunders,
    L. Seco (2006)](http://www.math.uwaterloo.ca/~dsaunder/Site/Publications_files/OmegaOptimizationWAppendix.pdf)
    paper to construct optimal portfolios that maximize Omega Ratio.
  prefs: []
  type: TYPE_NORMAL
- en: The maximization problem (pages 5-6) can be written as
  prefs: []
  type: TYPE_NORMAL
- en: '![\Omega^{*}(L) = max_{x,u,d}\frac{\frac{1}{T} \sum_{i=1}^{n}u_{i}}{\frac{1}{T}
    \sum_{i=1}^{n}d_{i}}  \newline\newline  \sum_{i=1}^{n}r_{ij}x_{i} - u_{j}+d_{j}
    = L, j=1,...,T  \newline\newline  u_{j},d_{j}\geq 0, j=1,...,T  \newline\newline  u_{j}*d_{j}
    = 0, j=1,...,T  ](img/fa37a5489fd92a15e4024551a4d76c66.png)'
  prefs: []
  type: TYPE_IMG
- en: It can be formulated as a linear programming problem with following transformation
  prefs: []
  type: TYPE_NORMAL
- en: '![t=\frac{1}{\frac{1}{T} \sum_{i=1}^{n}u_{i}}  \newline\newline  \Omega^{*}(L)
    = max_{\tilde{x},\tilde{u},\tilde{d},t}\frac{1}{T} \sum_{i=1}^{n}\tilde{u}_{i}  \newline\newline  \sum_{i=1}^{n}r_{ij}\tilde{x}_{i}
    - \tilde{u}_{j}+\tilde{d}_{j} = L, j=1,...,T  \newline\newline  \frac{1}{T}\sum_{i=1}^{n}\tilde{d}_{i}
    = 1  \newline\newline  \tilde{u}_{j},\tilde{d}_{j}\geq 0, j=1,...,T  ](img/1f8201cae5584c778215086bf0be1150.png)'
  prefs: []
  type: TYPE_IMG
- en: This method will only work for ![\Omega^{*}(L) > 1](img/123140917b72af9ad0975a2603a5e3b6.png).
    In the case ![\Omega^{*}(L) \leqslant 1](img/778e8ea6f4bbb03715666db080441524.png),
    I will use a Nonlinear programming solver, [Rdonlp2](http://arumat.net/Rdonlp2/tutorial.html),
    which is based on donlp2 routine developed and copyright by [Prof. Dr. Peter Spellucci](http://www.mathematik.tu-darmstadt.de/fbereiche/numerik/staff/spellucci/spellucci.html).
    Following code might not properly execute on your computer because Rdonlp2 is
    only available for R version 2.9 or below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: First let’s examine how the traditional mean-variance efficient frontier looks
    like in the Omega Ratio framework.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[![](img/114dc795b2063c1ab876ec35d6bf3cf0.png "plot1.png.small")](https://systematicinvestor.wordpress.com/wp-content/uploads/2011/11/plot1-small1.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Portfolio returns and Portfolio Omega Ratio are monotonically increasing as
    we move along the traditional mean-variance efficient frontier in the Omega Ratio
    framework. The least risky portfolios (Risk_weight_1, Risk_weight_10) have lower
    Omega Ratio for 13% threshold (target return) and the most risky portfolios (Risk_weight_40,
    Risk_weight_50) have higher Omega Ratio.
  prefs: []
  type: TYPE_NORMAL
- en: 'To create efficient frontier in the Omega Ratio framework, I propose first
    to compute range of returns in the mean-variance framework. Next split this range
    into # Portfolios equally spaced points. For each point, I propose to find portfolio
    that has expected return less than given point’s expected return and maximum Omega
    Ratio.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[![](img/a78ce6fb17bfcdc70c174c1179071a9e.png "plot2.png.small")](https://systematicinvestor.wordpress.com/wp-content/uploads/2011/11/plot2-small1.png)'
  prefs: []
  type: TYPE_NORMAL
- en: The Omega Ratio efficient frontier looks similar to the traditional mean-variance
    efficient frontier for expected returns greater than 13% threshold (target return).
    However, there is a big shift in allocation and increase in Omega Ratio for portfolios
    with expected returns less than 13% threshold.
  prefs: []
  type: TYPE_NORMAL
- en: '[![](img/7a7b6a554d2a943fe27c9086e4585979.png "plot3.png.small")](https://systematicinvestor.wordpress.com/wp-content/uploads/2011/11/plot3-small.png)'
  prefs: []
  type: TYPE_NORMAL
- en: The Omega Ratio efficient frontier looks very inefficient in the Risk framework
    for portfolios with expected returns less than 13% threshold. But remember that
    goal of this optimization was to find portfolios that maximize Omega Ratio for
    given user constraints. Overall I find results a bit radical for portfolios with
    expected returns less than 13% threshold, and this results defiantly call for
    more investigation.
  prefs: []
  type: TYPE_NORMAL
- en: To view the complete source code for this example, please have a look at the
    [aa.omega.test() function in aa.test.r at github](https://github.com/systematicinvestor/SIT/blob/master/R/aa.test.r).
  prefs: []
  type: TYPE_NORMAL
