- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-18 06:44:41'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: 'Creating an HFT Strategy: Identifying Trader Type Pt. 2 | Mechanical Markets'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://mechanicalmarkets.wordpress.com/2015/01/20/identifying-trader-type-pt-2/#0001-01-01](https://mechanicalmarkets.wordpress.com/2015/01/20/identifying-trader-type-pt-2/#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'We saw in [part 1](https://mechanicalmarkets.wordpress.com/2015/01/13/trader-type-and-order-age/
    "part 1") that orders that have been sitting on an exchange for a while don’t
    do as well versus the market price as their short-lived peers. In this post I
    discuss whether this tendency can be made into a viable trading strategy. The
    most boneheadedly obvious basis for a strategy would be to do the following:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: When we see a sufficiently old order execute in the market data feed, immediately
    send a marketable order at the same price, attempting to trade against any liquidity
    remaining in the book.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: While doing this sort of thing results in better executions than simply copying
    all executions, it won’t get anywhere near profitability. To do that, we need
    to know a few other things about the structure of the US equities market. Probably
    the most important fact would be that resting orders on DirectEdge’s EdgeX tend
    to perform much worse after execution than on other conventional exchanges. I
    don’t know the reason for it, but every exchange has a different mix of traders
    and order flow. EdgeX could have incoming marketable orders with unusually high
    alpha, resting passive orders with unusually low alpha, or both.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '[![toa-exchangesummary-1366](img/e06c511356db5156cce9a17760f1b610.png)](https://mechanicalmarkets.wordpress.com/wp-content/uploads/2015/01/toa-exchangesummary-13661.png)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: Performance of visible orders executed on various exchanges. Chart is generally
    the same as those in Part 1\. Note that exchange rebates are not included, so
    the enhanced performance of the passive orders on the inverted exchanges, Nasdaq
    Bx (Bsx) ; Bats BYX (BatsY); DirectEdge EdgeA (EdgeA), is largely due to the difference
    in rebate.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: Another important fact is that trades on ‘expensive’ stocks (those with a high
    per-share price, not valuation) also have their passive side tend to perform poorly
    after execution in comparison with ‘cheap’ stocks. This is an interesting phenomenon
    all by itself and could be a sign of reduced market making activity in expensive
    stocks – possibly due to reduced liquidity, the tick size and exchange rebates
    being less significant compared to volatility, the SEC fee (which is charged per
    dollar value traded) being higher per-share, or even just the tradition that orders
    are submitted in 100-share increments (making the ‘minimum’ counterparty order
    size of 100 shares too big for market makers to deal with profitably). For similar
    reasons, strategies that lean towards removing resting liquidity may find the
    economics better on expensive stocks. A more bizarre attribute of EdgeX is that
    its large resting orders make for favorable counterparties. For a wide class of
    trading activity across many exchanges, having a large order partially execute
    leaving a significant quantity of it un-executed probably means that the large
    order is getting the better side of the deal than whoever traded with it. The
    reason for this behavior is intuitive; at the least you’d expect that if the smaller
    trader in this example were confident about the direction of the price then that
    trader would have traded the entire quantity available. If all high-alpha traders
    behave optimally in this way, then the trades that only nip at the large orders
    will be sent by relatively more noise-traders and those who will not be following
    up with additional orders (e.g. they filled their allotment or reached a position
    limit). For some reason, on EdgeX, this isn’t really the case. For example if
    I simulate a ‘strategy’ that copies all aggressive executions (trading with the
    resting passive orders), it actually performs better when EdgeX has more quantity
    available at the price level.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个重要的事实是，'昂贵'股票（指每股价格高的股票，而不是估值高的股票）在执行后，它们的被动一方表现往往比'便宜'股票差。这本身就是一个有趣的现象，可能表明昂贵股票的做市活动减少-可能是由于流动性降低，tick大小和交易所回扣相对波动性不那么重要，SEC费用（按交易的美元价值收取）每股更高，甚至只是订单以100股为单位提交的传统（使得'最小'交易对手订单量至少为100股，这对于做市商来说太大，无法盈利地处理）。基于类似的原因，倾向于移除挂单流动性的策略可能在昂贵的股票上有更好的经济效益。EdgeX更奇怪的特性是，它的大量挂单为有利的交易对手。在许多交易所上进行的广泛类别交易活动中，大量订单部分执行，留下大量未执行，可能意味着大订单获得的交易更好。这种行为的原因是直观的；至少您期望，如果在这个例子中的较小交易者对价格方向有信心，那么这个交易者将交易所有可用数量。如果所有高阿尔法交易者都以这种方式有效行动，那么只针对大订单进行交易的交易将由相对更多的噪声交易者发送，并且那些不会跟进其他订单的交易者（例如，他们填满了自己的配额或达到了头寸限制）。但由于某种原因，在EdgeX上并非真的如此。例如，如果我模拟一个简单复制在EdgeX上看到的激进执行（与挂单被动交易）的“策略”，当EdgeX在价格水平上可用的数量更多时，它实际上表现更好。
- en: '[![toa-shrsfilled-edgexsignal-1000shrorder-800](img/27744782bd2cee70f2da414c775808a0.png)](https://mechanicalmarkets.wordpress.com/wp-content/uploads/2015/01/toa-shrsfilled-edgexsignal-1000shrorder-13662.png)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[![toa-shrsfilled-edgexsignal-1000shrorder-800](img/27744782bd2cee70f2da414c775808a0.png)](https://mechanicalmarkets.wordpress.com/wp-content/uploads/2015/01/toa-shrsfilled-edgexsignal-1000shrorder-13662.png)'
- en: The performance of simulated 1000-share orders that simply copy executions seen
    on EdgeX, split by share price and filled quantity. The enhanced performance of
    the larger fills is highly unusual.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟的1000股订单的表现，只是简单地复制了在EdgeX上看到的交易执行，按股价和填充数量划分。较大订单的增强表现非常不寻常。
- en: 'To see why this is so bizarre, imagine going to a Best Buy and seeing some
    bigshot buy out almost all the Dell laptops in stock. Imagine also that someone
    ordinary comes and buys a single Mac, leaving 50 on the shelves. You’d probably
    expect the guy who bought the Dells, having done his homework, would have gotten
    a better price than the Mac buyer. But it turns out that if Best Buy sells its
    goods on EdgeX, the Mac buyer tends to be a much smarter buyer. Maybe the Dell
    guy is buying all those computers on a corporate expense account and doesn’t care
    about the price, but that’s not really what you expect in a world of professional
    traders who supposedly have their performance carefully tracked. We can also think
    a little bit about our specific edge and whether we’re implementing it well by
    looking only at the age of the order that traded. It’d make far more sense to
    have our strategy look at all orders across all exchanges and trade only when
    all of those orders are sufficiently old. Doing that gets us another 0.1 – 0.15
    cents per share. There’s surely a way to optimize the age cutoffs by exchange,
    but we’ll just slap a uniform threshold of 5 seconds across every resting order
    on every exchange. To summarize, our proposed strategy does the following:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 理解为什么这么奇怪的话，想象一下去百思买看到某个大人物把所有现货中的戴尔笔记本都买走。再想象一下，一个普通人来买一台 Mac，只留下 50 台在货架上。你可能会期待买了戴尔的那个人，已经做好了功课，会得到比买
    Mac 的人更好的价格。但事实证明，如果百思买在 EdgeX 上销售其商品，买 Mac 的人往往是一个更聪明的买家。也许戴尔的那个人是用公司费用账户买了所有那些电脑，不在乎价格，但这并不是你在一个据说他们的表现受到仔细追踪的专业交易员的世界里所期待的。我们还可以通过仅查看已交易订单的年龄来思考一下我们的特定优势是否实现良好。让我们的策略看看所有交易所的所有订单，并且只有在所有这些订单都足够老的时候才交易，这将更有意义。这样做可以使我们每股再增加
    0.1 – 0.15 美分的收益。肯定有一种方法可以通过交易所优化年龄截止时间，但我们将在每个交易所的每个挂单上都打上一个统一的 5 秒的阈值。总结一下，我们提议的策略做了以下几件事：
- en: Looks for 100 shares on EdgeX to trade with an order that is at least 5 seconds
    old.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 EdgeX 上寻找 100 股要与一个至少 5 秒的订单交易。
- en: If every order we see market-wide is older than 5 seconds, submit an order intending
    to execute against any quantity remaining on EdgeX.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们市场范围内看到的每笔订单都超过 5 秒，那么提交一个意图与 EdgeX 上剩余任何数量进行交易的订单。
- en: Send a large order (e.g. 1000 shares) to do more volume and preferentially trade
    during times when there’s a large volume still available on EdgeX (or alternatively,
    send orders of any size, only when there’s at least 300 shares available).
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 发送一个大订单（例如 1000 股）来做更多的交易量，并在 EdgeX 上仍有大量股票可用时进行优先交易（或者，只有在至少有 300 股可用时发送任意大小的订单）。
- en: Do this on stocks over 70$ per share and, to do more volume, price our order
    1 cent more aggressively than the trade we just saw.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在股票超过每股 70 美元时执行此操作，并且为了做更多的交易量，比我们刚刚看到的交易价格高 1 美分。
- en: How does it perform?
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 它的表现如何？
- en: '[![toa-edgex-5s_execution-1000shr-backtest800](img/5116fdab16878efe27b753350007aa8b.png)](https://mechanicalmarkets.wordpress.com/wp-content/uploads/2015/01/toa-edgex-5s_execution-1000shr-backtest13662.png)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[![toa-edgex-5s_execution-1000shr-backtest800](img/5116fdab16878efe27b753350007aa8b.png)](https://mechanicalmarkets.wordpress.com/wp-content/uploads/2015/01/toa-edgex-5s_execution-1000shr-backtest13662.png)'
- en: Simulated performance of trades done by the strategy outlined above. Some important
    exchanges are missing from the simulated data, which can only hurt the performance
    of our strategy, since it’s not able to take into account the age of these exchanges’
    orders. Note that (like all the previous plots), this plot weights a trade’s market
    pnl by its executed quantity. Simulation is over about 2.5 weeks in Aug. 2014,
    not a particularly special time for this strategy. Simulated fills are split by
    filled quantity for illustration. Note that there is no huge spike in volume on
    Nasdaq (the largest and fastest exchange) after our simulated trade. On average
    10-20 shares have traded 1ms after we have, similar to the number seen in the
    much less discriminating simulation directly above. A volume spike would be indicative
    of simultaneous algorithmic trading activity, suggesting few automated traders
    are doing something related to this strategy.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 上述策略执行的交易的模拟表现。模拟数据中缺少一些重要交易所的数据，这可能会损害我们策略的表现，因为它无法考虑到这些交易所订单的年龄。请注意（像之前的所有图表一样），这个图表通过执行的数量来权衡交易的市场盈亏。模拟是在2014年8月的大约2.5周内进行的，并不是这个策略的特别特殊的时间。模拟成交按成交数量拆分以进行说明。请注意，在我们模拟交易后，纳斯达克（最大和最快的交易所）的交易量没有出现巨大的激增。平均每个交易之后1毫秒有10-20股交易，类似于在上面直接模拟中看到的数量。交易量的激增可能表明同时进行的算法交易活动，这表明很少有自动化交易者在执行与此策略相关的操作。
- en: I think the result is pretty shocking. All the facts used in the strategy are
    readily seen in the market data and it’s really not doing anything fancy. In terms
    of HFT, this is about as simple a strategy as you can get; it has undergone virtually
    no optimization, has no statistical model, limited logic, and uses few features
    in the market data. It does somewhat fly in the face of the wisdom that successful
    trading strategies are extremely complex and take years to construct. Of course,
    it doesn’t make all that much money (by HFT standards) and is lacking a method
    to exit its positions in a timely fashion, but it’s not hard to imagine that some
    more serious work could turn it into something that does much more volume. The
    way it is now, it makes about 1 cent per share before fees on the relevant trades,
    trading around 7000 times per day, with an average execution size of about 350
    shares. After paying fees of roughly 0.5 cents per share (0.3 cent exchange fee,
    around 0.2 cent SEC fee on these stocks, clearing fees are usually not more than
    a few hundredths of a cent), we’re looking at around 10k/day profit. I haven’t
    run this strategy in a production environment; it’s just a simulation and sometimes
    real-world results vary. But generally speaking there’s less that can go wrong
    in simulations that trade aggressively compared to market-making simulations.
    In some situations, it’s possible for a market inefficiency to persist, even with
    the presence of vigilant traders. Often in such cases the inefficiency is squeezed
    into the so-called micro-structure, the time-scale of the fastest traders on the
    market. We can imagine a situation where there’s a few sloppy traders responsible
    for those old, large orders that perform poorly. A possibility that keeps the
    inefficiency visible to us would be a stampede to trade with any quantity remaining
    after these older orders execute. In that case, we’d expect a spike in volume
    right after these executions as well as substantial latency sensitivity in the
    simulation, neither of which I see. Adding an extra 100 microseconds (a long time
    to an HFT) to the simulated latency doesn’t make a huge difference. It’s commonly
    said that market inefficiencies tend to exist only in the micro-structure. This
    example shows not just an inefficiency at a middling time scale, but one that
    is sizable enough in principle to generate a profit. It does make me wonder whether
    all those supposedly sophisticated execution algorithms and quantitative strategies
    are capturing even the most basic features of the market.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为结果相当令人震惊。该策略使用的所有事实都可以在市场数据中轻松看到，而且确实没有做任何花哨的事情。就高频交易而言，这是你能得到的最简单的策略之一；它几乎没有经过优化，没有统计模型，逻辑有限，并且在市场数据中使用的特征很少。这确实有点违背了成功的交易策略极度复杂且需要多年构建的智慧。当然，它并没有赚太多钱（按照高频交易的标准），而且缺乏及时退出头寸的方法，但不难想象一些更严肃的工作可以将其转变为更大的量。就目前的情况而言，在相关交易中每股在手续费之前大约赚取1美分，每天交易大约7000次，平均执行量约为350股。支付每股大约0.5美分的费用（0.3美分的交易所费用，这些股票约为0.2美分的SEC费用，清算费通常不超过几百分之几美分），我们可以看到每天约10k美元的利润。我还没有在生产环境中运行过这个策略；它只是一个模拟，有时实际结果会有所不同。但总的来说，在交易积极性较强的模拟中，出错的可能性较小，相比做市商模拟。在某些情况下，即使有警惕的交易员存在，市场的不有效率也可能持续存在。通常在这种情况下，无效率会被挤压到所谓的微观结构中，这是市场上最快速的交易者的时间尺度。我们可以想象这样一种情况，即有几个粗心的交易员负责那些表现不佳的旧大订单。使无效率对我们可见的可能性是在这些旧订单执行后，大家会争相交易剩余的任何数量。在这种情况下，我们预期在这些执行后会有交易量激增，以及模拟中的实质性延迟敏感性，但我没有看到这两者。将模拟延迟增加100微秒（对于高频交易来说是很长的时间）并没有产生很大的影响。人们常说市场无效率往往只存在于微观结构中。这个例子不仅显示了中等时间尺度上的无效率，而且显示了从原理上产生利润的足够大的无效率。这确实让我想知道，所有那些据说是复杂的执行算法和量化策略是否能捕捉到市场最基本的特征。
