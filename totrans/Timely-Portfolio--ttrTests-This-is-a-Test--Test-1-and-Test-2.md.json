["```\n#let's define our silly countupdown function\n#as a sample of a custom ttr rule\nCUD <- function(x,params=50,...) {\n\t#CUD takes the n-period sum of 1 (up days) and -1 (down days)\n\ttemp <- ifelse(runSum(ifelse(ROC(x,1,type=\"discrete\") > 0,1,-1),params)>=0,1,0)\n\t#replace NA with 0 at beginning of period\n\ttemp[is.na(temp)] <- 0\n\ttemp\n}   require(ttrTests)\nrequire(quantmod)\nrequire(lattice)\nrequire(reshape2)\nrequire(PerformanceAnalytics)   #defaults functions is overridden by ggplot2 and plyr if loaded\n#and will cause problems if you want to use ttrTests concurrently   tckrs <- c(\"GSPC\",\"RUT\",\"N225\",\"GDAXI\",\"DJUBS\")   #use 1 or GSPC but adjust however you would like\ni=1\ngetSymbols(paste(\"^\",tckrs[i],sep=\"\"),from=\"1896-01-01\",to=Sys.Date())\ntest_price <- as.vector(get(tckrs[i])[,4])\n#do parameter tests but plot=FALSE\n#we will plot later\nparam_results <- paramStats(x=test_price, ttr = CUD, start = 20, nSteps = 30, stepSize = 10,\n\trestrict = FALSE, burn = 0, short = FALSE, condition = NULL,\n\tsilent = TRUE, TC = 0.001, loud = TRUE, plot = FALSE, alpha = 0.025,\n\tbegin = 1, percent = 1, file = \"\", benchmark = \"hold\")\n#make output slightly more usable with some naming\n#believe I got this right\nnames(param_results) <- c(\"excess.return\",\"z.score\",\"adj.excess.return\",\n\t\"Sharpe.ratio\",\"best\",\"best.repeat\",\"best.adjusted\",\n\tpaste(\"tested.parameters\",c(1:(NROW(param_results)-7)),sep=\"\"))\n#jpeg(filename=\"excess by parameter.jpg\",\n\tquality=100,width=6.25, height = 6.25,  units=\"in\",res=96)\nplot(param_results$excess.return~param_results$tested.parameters1,\n\ttype=\"l\", col=\"darkgray\",\n\tmain=\"ttrTests Excess Return by Parameter\")\nabline(v=param_results$best, col=\"indianred3\")\n#dev.off()   #let's use the returnStats function to get\n#more complete return and distribution info on the best parameter\nstats <- returnStats(x=test_price, ttr=CUD, params=param_results$best,\n\tshort=FALSE, TC=0.001, benchmark=\"hold\")\n#make output slightly more usable with some naming\n#believe I got this right\nnames(stats) <- c(\"benchmark.stats\",\"ttr.stats\",\"adj.stats.and.periods\",\n\t\"excess.stats\",\"long.stats\",\"short.stats\",\"neutral.stats\")\n#jpeg(filename=\"analysis of returns.jpg\",\n\tquality=100,width=6.25, height = 6.25,  units=\"in\",res=96)\nbarplot(c(stats$long.stats[1],stats$short.stats[1],\n\tstats$neutral.stats[1],stats$benchmark.stats[1]),\n\tcol=c(\"darkolivegreen3\",\"indianred3\",\"steelblue3\",\"gray70\"),\n\tnames.arg=c(\"long\",\"short\",\"neutral\",\"benchmark\"),\n\tmain=\"Analysis of Returns from ttrTests\")\n#dev.off()   #now let's test the best parameter with nullModel\n#this tests the parameter with bootstrap resampling\n#for significance across one of three criteria\n#specified by crit = \"sharpe\", \"return\" (excess return),\n#or \"adjust\" (excess adjusted  for trading costs)\nnmodel <- nullModel(x=test_price, model=\"stationaryBootstrap\", userParams=4, bSamples=100,\n\tttr=CUD, params=param_results$best, short=FALSE, TC=0.001, crit=\"sharpe\",\n\tbenchmark=\"hold\")\n#make output slightly more usable with some naming\n#believe I got this right\n#this is different from documentation but code seems to\n#fit with this\nnames(nmodel) <- c(\"excess.return\",\"excess.Sharpe.ratio\",\"adj.excess.return\",\"p.value\")\n#jpeg(filename=\"excess return by bootstrap.jpg\",\n\tquality=100,width=6.25, height = 6.25,  units=\"in\",res=96)\nplot(nmodel$excess.return,type=\"l\",xlab=\"Bootstrap Sample\",\n\tmain=\"Excess Return for each Bootstrapped Sample\")\n#add line for excess return from actual ttr performance\nabline(h=stats$excess.stats[1], col=\"indianred3\")\n#dev.off()   #jpeg(filename=\"excess adjusted return by bootstrap.jpg\",\n\tquality=100,width=6.25, height = 6.25,  units=\"in\",res=96)\nplot(nmodel$adj.excess.return,type=\"l\",col=\"khaki4\",\n\tmain=\"Excess Adjusted Return for each Bootstrapped Sample\")\n#add line for excess adjusted from actual ttr performance\nabline(h=stats$adj.stats.and.periods[1], col=\"indianred3\")\n#dev.off()   #jpeg(filename=\"excess sharpe ratio by bootstrap.jpg\",\n\tquality=100,width=6.25, height = 6.25,  units=\"in\",res=96)\nplot(nmodel$excess.Sharpe.ratio,type=\"l\",lwd=2,xlab=\"BootstrapSample\",col=\"cadetblue4\",\n\tmain=\"Excess Sharpe Ratio for each Bootstrapped Sample\")\n#add line for excess sharpe from actual ttr performance\nabline(h=stats$ttr.stats[3]-stats$benchmark.stats[3], col=\"indianred3\")\n#dev.off()\n```"]