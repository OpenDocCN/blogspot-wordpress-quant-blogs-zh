- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-18 06:26:29'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-18 06:26:29
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Sloppy Counters: Analysis of Linux Scalability to Many Cores | Tales from a
    Trading Desk'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 粗略计数器：分析 Linux 在多核上的可扩展性 | 来自交易台的故事
- en: 来源：[https://mdavey.wordpress.com/2013/04/23/sloppy-counters-analysis-of-linux-scalability-to-many-cores/#0001-01-01](https://mdavey.wordpress.com/2013/04/23/sloppy-counters-analysis-of-linux-scalability-to-many-cores/#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://mdavey.wordpress.com/2013/04/23/sloppy-counters-analysis-of-linux-scalability-to-many-cores/#0001-01-01](https://mdavey.wordpress.com/2013/04/23/sloppy-counters-analysis-of-linux-scalability-to-many-cores/#0001-01-01)
- en: 'Sloppy Counters: Analysis of Linux Scalability to Many Cores'
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 粗略计数器：分析 Linux 在多核上的可扩展性
- en: 'From page 7 of the [paper](http://pdos.csail.mit.edu/papers/linux:osdi10.pdf):'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 来自[论文](http://pdos.csail.mit.edu/papers/linux:osdi10.pdf)第 7 页：
- en: Our solution, which we call sloppy counters, builds on the intuition that each
    core can hold a few spare references to an object, in hopes that it can give ownership
    of these references to threads running on that core, without having to modify
    the global reference count. More concretely, a sloppy counter represents one logical
    counter as a single shared central counter and a set of per-core counts of spare
    references. When a core increments a sloppy counter by V , it ﬁrst tries to acquire
    a spare reference by decrementing its per-core counter by V . If the percore counter
    is greater than or equal to V , meaning there are sufﬁcient local references,
    the decrement succeeds.  Otherwise the core must acquire the references from the
    central counter, so it increments the shared counter by V . When a core decrements
    a sloppy counter by V , it releases these references as local spare references,
    incrementing its per-core counter by V.
  id: totrans-8
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我们的解决方案，称为粗略计数器，基于这样的直觉：每个核心可以持有少量对对象的备用引用，希望可以将这些引用的所有权赋予在该核心上运行的线程，而无需修改全局引用计数。更具体地说，粗略计数器将一个逻辑计数器表示为单个共享中央计数器和一组每个核心计数的备用引用。当一个核心将粗略计数器增加
    V 时，它首先尝试通过将其每个核心计数减少 V 来获取备用引用。如果每个核心计数大于或等于 V，表示有足够的本地引用，则减少成功。否则，核心必须从中央计数器获取引用，因此它将共享计数器增加
    V。当一个核心将粗略计数器减少 V 时，它释放这些引用作为本地备用引用，将其每个核心计数增加 V。
- en: The conclusion states that most kernel performance bottlenecks can be removed
    by changing the application code (or kernel) – as long as you know what to modify,
    and you are familiar with standard parallel programming techniques 🙂
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 结论指出，只要您知道要修改什么，并且熟悉标准的并行编程技术🙂，就可以通过更改应用程序代码（或内核）来消除大多数内核性能瓶颈。
- en: ~ by mdavey on April 23, 2013.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: ~ by mdavey on 2013 年 4 月 23 日。
- en: Posted in [Languages](https://mdavey.wordpress.com/category/languages/)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Posted in [语言](https://mdavey.wordpress.com/category/languages/)
