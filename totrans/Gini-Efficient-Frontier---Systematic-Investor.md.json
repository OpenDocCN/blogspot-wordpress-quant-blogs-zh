["```\n\nmin.gini.portfolio <- function\n(\n\tia,\t\t# input assumptions\n\tconstraints\t# constraints\n)\n{\n\tn = ia$n\n\tnt = nrow(ia$hist.returns)\n\n\t# objective : Gini mean difference - the mean of the difference between every possible pair of returns\n\t#  1/(T^2) * [ SUM <over j = 1,...,T , k>j> a.long.jk + a.short.jk ]\n\tf.obj = c(rep(0, n), (1/(nt^2)) * rep(1, nt*(nt-1)))\n\n\t# adjust constraints, add a.long.jk , a.short.jk\n\tconstraints = add.variables(nt*(nt-1), constraints, lb=0)\n\n\t# [ SUM <over i> x.i * (r.ij - r.ik) ] - a.long.jk + a.short.jk = 0\n\t# for each j = 1,...,T , k>j\t\n\ta = matrix(0, n + nt*(nt-1), nt*(nt-1)/2)\n\t\tdiag(a[(n+1) : (n + nt*(nt-1)/2), ]) = -1\n\t\tdiag(a[(n+1+nt*(nt-1)/2) : (n + nt*(nt-1)), ]) = 1\n\thist.returns = as.matrix(ia$hist.returns)\n\n\ti.start = 0\n\tfor(t in 1:(nt-1)) {\n\t\tindex = (i.start+1) : (i.start + nt -t)\n\t\tfor(i in 1:n) {\n\t\t\ta[i, index] = ( hist.returns[t,i] - hist.returns[,i] ) [ (t+1) : nt ] \n\t\t}\n\t\ti.start = i.start + nt -t\t\t\n\t}\n\tconstraints = add.constraints(a, 0, '=', constraints)\n\n\t# setup linear programming\t\n\tf.con = constraints$A\n\tf.dir = c(rep('=', constraints$meq), rep('>=', len(constraints$b) - constraints$meq))\n\tf.rhs = constraints$b\n\n\t# find optimal solution\n\tx = NA\n\tsol = try(solve.LP.bounds('min', f.obj, t(f.con), f.dir, f.rhs, \n\t\t\t\t\tlb = constraints$lb, ub = constraints$ub), TRUE)\n\n\tif(!inherits(sol, 'try-error')) {\n\t\tx = sol$solution[1:n]\n\t}\n\n\treturn( x )\n}\n\n```", "```\n\n###############################################################################\n# Load Systematic Investor Toolbox (SIT)\n# https://systematicinvestor.wordpress.com/systematic-investor-toolbox/\n###############################################################################\ncon = gzcon(url('http://www.systematicportfolio.com/sit.gz', 'rb'))\n    source(con)\nclose(con)\n\n\t#--------------------------------------------------------------------------\n\t# Create Efficient Frontier\n\t#--------------------------------------------------------------------------\n\tia = aa.test.create.ia.rebal()\n\tn = ia$n\t\t\n\n\t# 0 <= x.i <= 1 \n\tconstraints = new.constraints(n, lb = 0, ub = 1)\n\n\t# SUM x.i = 1\n\tconstraints = add.constraints(rep(1, n), 1, type = '=', constraints)\t\t\n\n\t# create efficient frontier(s)\n\tef.risk = portopt(ia, constraints, 50, 'Risk')\n\tef.gini = portopt(ia, constraints, 50, 'GINI', min.gini.portfolio)\n\n\t#--------------------------------------------------------------------------\n\t# Create Plots\n\t#--------------------------------------------------------------------------\n\tlayout( matrix(1:4, nrow = 2) )\n\tplot.ef(ia, list(ef.risk, ef.gini), portfolio.risk, F)\t\n\tplot.ef(ia, list(ef.risk, ef.gini), portfolio.gini.coefficient, F)\t\n\n\tplot.transition.map(ef.risk)\n\tplot.transition.map(ef.gini)\n\n```"]