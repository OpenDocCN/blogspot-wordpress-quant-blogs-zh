["```\nset.seed(3)\nx <- rnorm(200, mean = 1, sd = 1/8)\ny <- rnorm(200, mean = 1, sd = 1/2)\n\nlibrary(densratio)\nresult <- densratio(x, y)\nresult\n```", "```\n## \n## Call:\n## densratio(x = x, y = y, method = \"uLSIF\")\n## \n## Kernel Information:\n##   Kernel type:  Gaussian RBF \n##   Number of kernels:  100 \n##   Bandwidth(sigma):  0.1 \n##   Centers:  num [1:100, 1] 1.007 0.752 0.917 0.824 0.7 ...\n## \n## Kernel Weights(alpha):\n##   num [1:100] 0.4044 0.0479 0.1736 0.125 0.0597 ...\n## \n## The Function to Estimate Density Ratio:\n##   compute_density_ratio()\n```", "```\ntrue_density_ratio <- function(x) dnorm(x, 1, 1/8) / dnorm(x, 1, 1/2)\nestimated_density_ratio <- result$compute_density_ratio\n\nplot(true_density_ratio, xlim=c(-1, 3), lwd=2, col=\"red\", xlab = \"x\", ylab = \"Density Ratio\")\nplot(estimated_density_ratio, xlim=c(-1, 3), lwd=2, col=\"green\", add=TRUE)\nlegend(\"topright\", legend=c(expression(w(x)), expression(hat(w)(x))), col=2:3, lty=1, lwd=2, pch=NA)\n```", "```\ninstall.packages(\"densratio\")\n```", "```\ninstall.packages(\"devtools\") # if you have not installed \"devtools\" package\ndevtools::install_github(\"hoxo-m/densratio\")\n```", "```\nlibrary(densratio)\n\nx <- rnorm(200, mean = 1, sd = 1/8)\ny <- rnorm(200, mean = 1, sd = 1/2)\n\nresult <- densratio(x, y)\n```", "```\nw_hat <- result$compute_density_ratio(y)\nplot(y, w_hat)\n```", "```\n## \n## Call:\n## densratio(x = x, y = y, method = \"uLSIF\")\n## \n## Kernel Information:\n##   Kernel type:  Gaussian RBF \n##   Number of kernels:  100 \n##   Bandwidth(sigma):  0.1 \n##   Centers:  num [1:100, 1] 1.007 0.752 0.917 0.824 0.7 ...\n## \n## Kernel Weights(alpha):\n##   num [1:100] 0.4044 0.0479 0.1736 0.125 0.0597 ...\n## \n## Regularization Parameter(lambda):  \n## \n## The Function to Estimate Density Ratio:\n##   compute_density_ratio()\n```", "```\nlibrary(densratio)\nlibrary(mvtnorm)\n\nset.seed(71)\nx <- rmvnorm(300, mean = c(1, 1), sigma = diag(1/8, 2))\ny <- rmvnorm(300, mean = c(1, 1), sigma = diag(1/2, 2))\n\nresult <- densratio(x, y)\nresult\n```", "```\n## \n## Call:\n## densratio(x = x, y = y, method = \"uLSIF\")\n## \n## Kernel Information:\n##   Kernel type:  Gaussian RBF \n##   Number of kernels:  100 \n##   Bandwidth(sigma):  0.316 \n##   Centers:  num [1:100, 1:2] 1.178 0.863 1.453 0.961 0.831 ...\n## \n## Kernel Weights(alpha):\n##   num [1:100] 0.145 0.128 0.138 0.187 0.303 ...\n## \n## Regularization Parameter(lambda):  0.1 \n## \n## The Function to Estimate Density Ratio:\n##   compute_density_ratio()\n```", "```\ntrue_density_ratio <- function(x) {\n  dmvnorm(x, mean = c(1, 1), sigma = diag(1/8, 2)) /\n    dmvnorm(x, mean = c(1, 1), sigma = diag(1/2, 2))\n}\nestimated_density_ratio <- result$compute_density_ratio\n\nN <- 20\nrange <- seq(0, 2, length.out = N)\ninput <- expand.grid(range, range)\nz_true <- matrix(true_density_ratio(input), nrow = N)\nz_hat <- matrix(estimated_density_ratio(input), nrow = N)\n\npar(mfrow = c(1, 2))\ncontour(range, range, z_true, main = \"True Density Ratio\")\ncontour(range, range, z_hat, main = \"Estimated Density Ratio\")\n```"]