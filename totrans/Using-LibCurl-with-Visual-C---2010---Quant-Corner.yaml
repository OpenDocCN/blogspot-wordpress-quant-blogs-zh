- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-18 08:08:26'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-18 08:08:26
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Using LibCurl with Visual C++ 2010 | Quant Corner
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Using LibCurl with Visual C++ 2010 | Quant Corner
- en: 来源：[https://quantcorner.wordpress.com/2012/04/08/using-libcurl-with-visual-c-2010/#0001-01-01](https://quantcorner.wordpress.com/2012/04/08/using-libcurl-with-visual-c-2010/#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://quantcorner.wordpress.com/2012/04/08/using-libcurl-with-visual-c-2010/#0001-01-01](https://quantcorner.wordpress.com/2012/04/08/using-libcurl-with-visual-c-2010/#0001-01-01)
- en: I was stuck for some time with **LibCurl** and **Visual C++ 2010** (**VC10**). The
    document [**Using libcurl in Visual Studio**](http://curl.haxx.se/libcurl/c/visual_studio.pdf
    "Using libcurl in Visual Studio") available at the **[Curl](http://curl.haxx.se/libcurl/
    "Curl")** project’s website doesn’t help that much (notice it dates back from
    2002). I searched on the internet for hints, but hadn’t find the ‘right’ solution.
    At the same time ** good for my ego **, I realized I hadn’t been the only one
    in trouble. 😉
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我曾经一段时间困在**LibCurl**和**Visual C++ 2010**（**VC10**）上。在**[Curl](http://curl.haxx.se/libcurl/
    "Curl")**项目网站上的文档[**Using libcurl in Visual Studio**](http://curl.haxx.se/libcurl/c/visual_studio.pdf
    "Using libcurl in Visual Studio")并没有提供太多帮助（注意它追溯到2002年）。我在互联网上寻找线索，但找不到“正确”的解决方案。与此同时**对我的自尊心有益**，我意识到我不是唯一一个遇到困难的人。😉
- en: Below is how I got **LibCurl** working with **VC10** (on a 32-bit machine).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我在**VC10**（在32位机器上）使**LibCurl**工作的方法。
- en: First, download the latest version of **LibCurl** for **VC10,** [here](http://curl.haxx.se/latest.cgi?curl=win32-ssl-devel-msvc
    "here").
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，下载**VC10**的最新版**LibCurl** [这里](http://curl.haxx.se/latest.cgi?curl=win32-ssl-devel-msvc
    "here")。
- en: Now, create a new C++ project.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，创建一个新的C++项目。
- en: (In what follows, I assume that solutions are built in **Debug mode**, but it’s
    easy to derive the steps below  for the **Release mode.**)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: （以下内容假设解决方案是在**Debug mode**构建的，但很容易推导出针对**Release mode**的步骤。）
- en: First  go to **Properties > Configuration Properties > VC++ Directories > Include
    directories**. Here, add the **curl** directory to be found in the **include directory**
    of the unzipped **Libcurl** file (C:\ … \libcurl-7.19.3-win32-ssl-msvc\include\curl).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 首先去**Properties > Configuration Properties > VC++ Directories > Include directories**。在这里，添加**curl**目录，该目录位于解压后的**Libcurl**文件的**include
    directory**中（C:\ … \libcurl-7.19.3-win32-ssl-msvc\include\curl）。
- en: Now go to **VC++ Directories > Library directories**. Add the **Debug** directory
    containing **curllib_static.lib**, **curllib.dll** and **curllib.lib** (C:\Users\Édouard\Documents\Visual
    Studio 2010\LibCurl\lib\Debug).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 现在去**VC++ Directories > Library directories**。添加包含**curllib_static.lib**, **curllib.dll**和**curllib.lib**的**Debug**目录（C:\Users\Édouard\Documents\Visual
    Studio 2010\LibCurl\lib\Debug）。
- en: Still in **Configuration Properties**, go to **Linker > Input > Additional Dependencies**.
    Here, you have to add the **curllib.lib file** (C:\  … \lib\Debug\curllib.lib).
    Type in up to name of the lib file.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 仍然在**Configuration Properties**，去**Linker > Input > Additional Dependencies**。在这里，你必须添加**curllib.lib文件**（C:\
    … \lib\Debug\curllib.lib）。输入lib文件的名称。
- en: The next step consists on adding **curllib.dll**, **libeay32.dll**, **openldap.dll**,
    and **ssleay32.dll** in the **Debug directory** of your project. There all are
    to be found in the root  directory of **Libcurl**. You also have to add **libsasl.dll**
    in this directory. Just google for it.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是向你的项目的**Debug directory**中添加**curllib.dll**, **libeay32.dll**, **openldap.dll**和**ssleay32.dll**。所有这些都可以在**Libcurl**的根目录中找到。你还需要在这个目录中添加**libsasl.dll**。只需谷歌搜索即可。
- en: (Shouldn’t this have been the first step?) Now, open the **curl.h** file. Replace
    the line **#include «curl/curlbuild.h»** with **#include «curlbuild.h»** .
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: （这不应该是最先一步吗？）现在，打开**curl.h**文件。将#include «curl/curlbuild.h»替换为#include «curlbuild.h».
- en: You’re done.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 你完成了。
