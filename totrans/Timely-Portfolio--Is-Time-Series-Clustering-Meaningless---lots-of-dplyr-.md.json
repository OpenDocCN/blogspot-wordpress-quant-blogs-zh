["```\n library(TSclust)\nlibrary(quantmod)\nlibrary(dplyr)\nlibrary(pipeR)\nlibrary(tidyr)\n\nsp5 <- getSymbols(\"^GSPC\",auto.assign=F,from=\"1900-01-01\")[,4]\n\nsp5 %>>%\n  # dplyr doesn't like xts, so make a data.frame\n  (\n    data.frame(\n      date = index(.)\n      ,price = .[,1,drop=T]\n    )\n  ) %>>%\n  # add a column for Year\n  mutate( year = as.numeric(format(date,\"%Y\"))) %>>%\n  # group by our new Year column\n  group_by( year ) %>>%\n  # within each year, find what day in the year so we can join\n  mutate( pos = rank(date) ) %>>%\n  mutate( roc = price/lag(price,k=1) - 1 ) %>>%\n  # can remove date\n  select( -c(date,price) ) %>>%\n  as.data.frame %>>%\n  # years as columns as pos as row\n  spread( year, roc ) %>>%\n  # remove last year since assume not complete\n  ( .[,-ncol(.)] ) %>>%\n  # remove pos since index will be same\n  select( -pos ) %>>%\n  # fill nas with previous value\n  na.fill( 0 ) %>>%\n  t %>>%\n(~sp_wide) %>>%\n  # use TSclust diss; notes lots of METHOD options\n  diss( METHOD=\"ACF\" ) %>>%\n  hclust %>>%\n(~hc) %>>%\n  ape::as.phylo() %>>% \n  treewidget #%>>%\n  #htmlwidgets::as.iframe(file=\"index.html\",selfcontained=F,libdir = \"./lib\")\n\nlibrary(lattice)\nlibrary(ggplot2)\n# get wide to long the hard way\n#  could have easily changed to above pipe to save long\n#  as an intermediate step\n#  but this makes for a fun lapply\n#  and also we can add in our cluster here\nsp_wide %>>%\n  (\n    lapply(\n      rownames(.)\n      ,function(yr){\n        data.frame(\n          year = as.Date(paste0(yr,\"-01-01\"),\"%Y-%m-%d\")\n          ,cluster = cutree(hc,10)[yr]\n          ,pos = 1:length(.[yr,])\n          ,roc = .[yr,]\n        )\n      }\n    )\n  ) %>>%\n  (do.call(rbind,.)) %>>%\n(~sp_long)\n\nsp_long %>>%\n  ggplot( aes( x = roc, group = year, color = factor(cluster) ) ) %>>%\n  + geom_density() %>>%\n  + facet_wrap(  ~ cluster, ncol = 1 ) %>>%\n  + xlim(-0.05,0.05) %>>%\n  + labs(title='Density of S&P 500 Years Clustered by TSclust') %>>%\n  + theme_bw() %>>%\n  # thanks to my friend Zev Ross for his cheatsheet\n  + theme( plot.title = element_text(size=15, face=\"bold\", hjust=0) ) %>>%\n  + theme( legend.position=\"none\" )  %>>%\n  + scale_color_brewer( palette=\"Paired\" ) \n```", "```\n # explore autocorrelations\nsp5 %>>%\n  # dplyr doesn't like xts, so make a data.frame\n  (\n    data.frame(\n      date = index(.)\n      ,price = .[,1,drop=T]\n    )\n  ) %>>%\n  # add a column for Year\n  mutate( year = as.numeric(format(date,\"%Y\"))) %>>%\n  # group by our new Year column\n  group_by( year ) %>>%\n  # within each year, find what day in the year so we can join\n  mutate( pos = rank(date) ) %>>%\n  mutate( roc = price/lag(price,k=1) - 1 ) %>>%\n  # can remove date\n  select( -c(date,price) ) %>>%\n  as.data.frame %>>%\n  # years as columns as pos as row\n  spread( year, roc ) %>>%\n  # remove last year since assume not complete\n  ( .[,-ncol(.)] ) %>>% t -> sP\n\nsp_long %>>%\n  group_by( cluster, year ) %>>%\n  do(\n    . %>>%\n    (\n      clustd ~ \n      acf(clustd$roc,plot=F) %>>%\n        (a ~\n          data.frame(\n            cluster = clustd[1,2]\n            ,year = clustd[1,1]\n            ,lag = a$lag[-1]\n            ,acf = a$acf[-1]\n          )\n        )\n    )\n  ) %>>%\n  as.data.frame %>>%\n  ggplot( aes( x = factor(cluster), y = acf, color = factor(cluster) ) ) %>>%\n    + geom_point() %>>%\n    + facet_wrap( ~lag, ncol = 4 ) %>>%\n    + labs(title='ACF of S&P 500 Years Clustered by TSclust') %>>%\n    + theme_bw() %>>%\n    # thanks to my friend Zev Ross for his cheatsheet\n    + theme(\n        plot.title = element_text(size=15, face=\"bold\", hjust=0)\n        ,legend.title=element_blank()\n    ) %>>%\n    + theme(legend.position=\"none\")  %>>%\n    + scale_color_brewer(palette=\"Paired\") \n```"]