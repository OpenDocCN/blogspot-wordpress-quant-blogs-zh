["```\n\nmin.cvar.portfolio <- function\n(\n\tia,\t\t# input assumptions\n\tconstraints\t# constraints\n)\n{\n\tn = ia$n\n\tnt = nrow(ia$hist.returns)\n\n\talpha = ia$parameters.alpha\n\n\t# objective : Conditional Value at Risk (CVaR)\n\t#  E + 1/(1-a) * 1/T * [ SUM  w.j ]\n\tf.obj = c( rep(0, n), (1/(1-alpha))* (1/nt) * rep(1, nt), 1 )\n\n\t# adjust constraints, add w.j, E\n\tconstraints = add.variables(nt + 1, constraints, lb = c(rep(0,nt),-Inf))\n\n\t#  -E - [ SUM <over i> r.ij * x.i ] < w.j, for each j = 1,...,T \n\ta = rbind( matrix(0, n, nt), diag(nt), 1)\n\t\ta[1 : n, ] = t(ia$hist.returns)\n\tconstraints = add.constraints(a, rep(0, nt), '>=', constraints)\t\t\t\n\n\t# setup linear programming\t\n\tf.con = constraints$A\n\tf.dir = c(rep('=', constraints$meq), rep('>=', len(constraints$b) - constraints$meq))\n\tf.rhs = constraints$b\n\n\t# find optimal solution\n\tx = NA\n\tsol = try(solve.LP.bounds('min', f.obj, t(f.con), f.dir, f.rhs, \n\t\t\t\t\tlb = constraints$lb, ub = constraints$ub), TRUE)\n\n\tif(!inherits(sol, 'try-error')) {\n\t\tx = sol$solution[1:n]\n\n\t}\n\n\treturn( x )\n}\n\n```", "```\n\nmin.cdar.portfolio <- function\n(\n\tia,\t\t# input assumptions\n\tconstraints\t# constraints\n)\n{\n\tn = ia$n\n\tnt = nrow(ia$hist.returns)\n\n\talpha = ia$parameters.alpha\n\n\t# objective : Conditional Drawdown at Risk (CDaR)\n\t#  E + 1/(1-a) * 1/T * [ SUM  w.j ]\n\tf.obj = c( rep(0, n), (1/(1-alpha))* (1/nt) * rep(1, nt), 1, rep(0, nt) )\n\n\t# adjust constraints, add w.j, E, u.j\n\tconstraints = add.variables(2*nt + 1, constraints, lb = c(rep(0,nt), rep(-Inf,nt+1)))\n\n\t#  u.j - [ SUM <over i> [ SUM <over j> r.ij ] * x.i ] - E < w.j, for each j = 1,...,T \n\ta = rbind( matrix(0, n, nt), diag(nt), 1, -diag(nt))\n\t\ta[1 : n, ] = t(apply( t(ia$hist.returns), 1, cumsum))\t\n\tconstraints = add.constraints(a, rep(0, nt), '>=', constraints)\t\t\t\t\t\n\n\t#  [ SUM <over i> [ SUM <over j> r.ij ] * x.i ] < u.j, for each j = 1,...,T \n\ta = rbind( matrix(0, n, nt), 0*diag(nt), 0, diag(nt))\n\t\ta[1 : n, ] = -t(apply( t(ia$hist.returns), 1, cumsum))\n\tconstraints = add.constraints(a, rep(0, nt), '>=', constraints)\n\n\t#  u.j-1 < u.j, for each j = 1,...,T - portfolio high water mark is increasing\t\t\n\ttemp = diag(nt);\n\t\ttemp[-nt,-1]=-diag((nt-1))\n\t\tdiag(temp) = 1\t\t\t\n\n\ta = rbind( matrix(0, n, nt), 0*diag(nt), 0, temp)\n\t\ta = a[,-1]\t\t\n\tconstraints = add.constraints(a, rep(0, (nt-1)), '>=', constraints)\n\n\t# setup linear programming\t\n\tf.con = constraints$A\n\tf.dir = c(rep('=', constraints$meq), rep('>=', len(constraints$b) - constraints$meq))\n\tf.rhs = constraints$b\n\n\t# find optimal solution\n\tx = NA\n\tsol = try(solve.LP.bounds('min', f.obj, t(f.con), f.dir, f.rhs, \n\t\t\t\t\tlb = constraints$lb, ub = constraints$ub), TRUE)\n\n\tif(!inherits(sol, 'try-error')) {\n\t\tx = sol$solution[1:n]\n\n\t}\n\n\treturn( x )\n}\n\n```", "```\n\n# load Systematic Investor Toolbox\nsetInternet2(TRUE)\nsource(gzcon(url('https://github.com/systematicinvestor/SIT/raw/master/sit.gz', 'rb')))\n\n#--------------------------------------------------------------------------\n# Create Efficient Frontier\n#--------------------------------------------------------------------------\n\tia = aa.test.create.ia()\n\tn = ia$n\t\t\n\n\t# 0 <= x.i <= 0.8 \n\tconstraints = new.constraints(n, lb = 0, ub = 0.8)\n\n\t# SUM x.i = 1\n\tconstraints = add.constraints(rep(1, n), 1, type = '=', constraints)\t\t\n\n\t# Alpha for used for CVaR and CDaR\n\t# http://www.investopedia.com/articles/04/092904.asp\n\tia$parameters.alpha = 0.95\n\n\t# create efficient frontier(s)\n\tef.risk = \t\tportopt(ia, constraints, 50, 'Risk')\n\tef.cvar = \t\tportopt(ia, constraints, 50, 'CVaR', \tmin.cvar.portfolio)\n\tef.cdar = \t\tportopt(ia, constraints, 50, 'CDaR', \tmin.cdar.portfolio)\n\n\t# Plot multiple Efficient Frontiers\n\tlayout( matrix(1:4, nrow = 2) )\n\tplot.ef(ia, list(ef.risk, ef.cvar, ef.cdar), portfolio.risk, F)\t\n\tplot.ef(ia, list(ef.risk, ef.cvar, ef.cdar), portfolio.cvar, F)\t\n\tplot.ef(ia, list(ef.risk, ef.cvar, ef.cdar), portfolio.cdar, F)\t\n\n\t# Plot multiple Transition Maps\n\tlayout( matrix(1:4, nrow = 2) )\n\tplot.transition.map(ef.risk)\n\tplot.transition.map(ef.cvar)\n\tplot.transition.map(ef.cdar)\n\n```"]