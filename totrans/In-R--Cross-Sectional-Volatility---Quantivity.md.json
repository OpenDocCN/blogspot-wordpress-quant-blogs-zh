["```\n\nN <- 5\t\t# number of stocks\nT <- 50\t\t# number of seconds in &quot;past&quot;\nH <- 60\t\t# number of seconds in &quot;future&quot;\nk <- 4\t\t# number of PCA eigenvectors to use\n\n```", "```\n\nret <- data.frame(replicate(N, log(1 + rnorm(T + H)/100)))\n\n```", "```\n\nN <- length(ret)\nX <- as.matrix(ret[1:T,])\nfuture <- ret[(T+1):(T+H),]\nM <- colMeans(X)\nY <- scale(X, scale=FALSE)\n\n```", "```\n\nplot.ts(X)\npar(mfrow=c(3,2))\nfor (i in c(1:N)) { \n  lab <- paste('X', i);\n  plot(cumsum(X[,i]), type='l', main=lab, ylab='', xlab='') \n}\n\n```", "```\n\nphi <- prcomp(X)$rotation[,c(1:k)]\nD <- Y %*% phi\n\n```", "```\nImportance of components:\n                           PC1      PC2      PC3      PC4      PC5\nStandard deviation     0.01137 0.009963 0.009274 0.008849 0.008132\nProportion of Variance 0.28177 0.216240 0.187370 0.170580 0.144040\nCumulative Proportion  0.28177 0.498010 0.685380 0.855960 1.000000 \n```", "```\n\nB <- c()\nfor (i in c(1:N))    # iterate over stocks\n{\n  hsum <- future[1,i]\n  Dsum <- D[T,]\n  for (j in c(2:H))&nbsp;&nbsp;&nbsp;# generate rows by walking up the horizon\n  {\n    hsum <- rbind(hsum, sapply(data.frame(future[c(1:j),i]), sum))\n    Dsum <- rbind(Dsum, sapply(data.frame(D[c((T-j+1):T),]), sum))\n  }\n  B <- cbind(B, lm(hsum ~ Dsum)$coefficient[c(1:k+1)])\n}\n\n```", "```\n\npar(mfrow=c(3,3))\nplot(hsum, type='l')\nfor (i in c(1:k)) {\n  lab=paste(\"Dsum[\",i,\"]\");\n  plot(Dsum[,i], type='l', ylab=lab)\n}\n\n```", "```\n\nDhat <- colSums(D[c((T-H):T),])\nS <- Dhat %*% B\nShat <- as.vector(S + M)\nR <- as.vector(colSums(future))\n\n```", "```\n\nsignal <- R > Shat\ncat('Shat:',  Shat, \"\\n\")\ncat('R:', R, \"\\n\")\ncat(ifelse(signal==TRUE, 'SELL', 'BUY'))\n\n```"]