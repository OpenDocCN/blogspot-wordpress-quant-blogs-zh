["```\n\n###############################################################################\n# Load Systematic Investor Toolbox (SIT)\n# https://systematicinvestor.wordpress.com/systematic-investor-toolbox/\n###############################################################################\nsetInternet2(TRUE)\ncon = gzcon(url('http://www.systematicportfolio.com/sit.gz', 'rb'))\n    source(con)\nclose(con)\n\n    #*****************************************************************\n    # Load historical data\n    #******************************************************************  \n    load.packages('quantmod')  \n\n    tickers = spl('SPY')\t\n\n    data <- new.env()\n        getSymbols(tickers, src = 'yahoo', from = '1970-01-01', env = data, auto.assign = T)\n        for(i in ls(data)) data[[i]] = adjustOHLC(data[[i]], use.Adjusted=T)\t\t\n    bt.prep(data, align='keep.all', dates='1999::')\n\n    #*****************************************************************\n    # Code Strategies\n    #****************************************************************** \n    prices = data$prices   \n\n    models = list()\n\n    #*****************************************************************\n    # Code Strategies\n    #****************************************************************** \n    data$weight[] = NA\n        data$weight[] = 1\n    models$buy.hold = bt.run.share(data, clean.signal=T)\n\n    #*****************************************************************\n    # Code Strategies : MA Cross Over\n    #****************************************************************** \n    sma.fast = SMA(prices, 20)\n    sma.slow = SMA(prices, 50)\n\n    buy.signal = iif(cross.up(sma.fast, sma.slow), 1, NA)\n\n    data$weight[] = NA\n        data$weight[] = iif(cross.up(sma.fast, sma.slow), 1, iif(cross.dn(sma.fast, sma.slow), 0, NA))\n    models$ma.cross = bt.run.share(data, clean.signal=T, trade.summary = TRUE)\n\n```", "```\n\n    #*****************************************************************\n    # User Defined Stops\n    #****************************************************************** \n    # fixed stop: exit trade once price falls below % from entry price\n    fixed.stop <- function(weight, price, tstart, tend, pstop) {\n        index = tstart : tend\n        if(weight > 0)\n            price[ index ] < (1 - pstop) * price[ tstart ]\n        else\n            price[ index ] > (1 + pstop) * price[ tstart ]\n    }\n\n    # trailing stop: exit trade once price falls below % from max price since start of trade\n    trailing.stop <- function(weight, price, tstart, tend, pstop) {\n        index = tstart : tend\n        if(weight > 0) \n            price[ index ] < (1 - pstop) * cummax(price[ index ])\n        else\n            price[ index ] > (1 + pstop) * cummin(price[ index ])\n    }\t\n\n    # trailing stop: exit trade once price either\n    # - falls below % from max price since start of trade OR\n    # - rises above % from entry price\n    trailing.stop.profit.target <- function(weight, price, tstart, tend, pstop, pprofit) {\n        index = tstart : tend\n        if(weight > 0) {\n            temp = price[ index ] < (1 - pstop) * cummax(price[ index ])\n\n            # profit target\n            temp = temp | price[ index ] > (1 + pprofit) * price[ tstart ]\n        } else {\n            temp = price[ index ] > (1 + pstop) * cummin(price[ index ])\n\n            # profit target\n            temp = temp | price[ index ] < (1 - pprofit) * price[ tstart ]\t\t\n        }\n        return( temp )\t\n    }\n\n```", "```\n\n    #*****************************************************************\n    # Exit using fixed stop\n    #****************************************************************** \n    data$weight[] = NA\n        data$weight[] = custom.stop.fn(coredata(buy.signal), coredata(prices), fixed.stop, \n\t\tpstop = 1/100)\n    models$ma.cross.fixed.stop = bt.run.share(data, clean.signal=T, trade.summary = TRUE)\n\n    #*****************************************************************\n    # Exit using trailing stop\n    #****************************************************************** \n    data$weight[] = NA\n    \tdata$weight[] = custom.stop.fn(coredata(buy.signal), coredata(prices), trailing.stop, \n\t\tpstop = 1/100)\n    models$ma.cross.trailing.stop = bt.run.share(data, clean.signal=T, trade.summary = TRUE)\n\n    #*****************************************************************\n    # Exit using trailing stop or profit target\n    #****************************************************************** \t\t\n    data$weight[] = NA\n    \tdata$weight[] = custom.stop.fn(coredata(buy.signal), coredata(prices), trailing.stop.profit.target, \n\t\tpstop = 1/100, pprofit = 1.5/100)\n    models$ma.cross.trailing.stop.profit.target = bt.run.share(data, clean.signal=T, trade.summary = TRUE)\n\n    #*****************************************************************\n    # Create Report\n    #****************************************************************** \t\n    strategy.performance.snapshoot(models, T)\n\n```", "```\n\n    #*****************************************************************\n    # Create Plot\n    #****************************************************************** \t\n    dates = '2010::2010'\n    # add moving averages to the strategy plot\n    extra.plot.fn <- function() {\n\tplota.lines(sma.fast, col='red')\n\tplota.lines(sma.slow, col='blue')\n    }\n\n    layout(1:4)\n    bt.stop.strategy.plot(data, models$ma.cross, dates = dates, layout=T, main = 'MA Cross', extra.plot.fn = extra.plot.fn, plotX = F)\n    bt.stop.strategy.plot(data, models$ma.cross.fixed.stop, dates = dates, layout=T, main = 'Fixed Stop', plotX = F)\n    bt.stop.strategy.plot(data, models$ma.cross.trailing.stop, dates = dates, layout=T, main = 'Trailing Stop', plotX = F)\n    bt.stop.strategy.plot(data, models$ma.cross.trailing.stop.profit.target, dates = dates, layout=T, main = 'Trailing Stop and Profit Target')\t\n\n```"]