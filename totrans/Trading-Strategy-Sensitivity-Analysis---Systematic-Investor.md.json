["```\n\n# Load Systematic Investor Toolbox (SIT)\nsetInternet2(TRUE)\ncon = gzcon(url('https://github.com/systematicinvestor/SIT/raw/master/sit.gz', 'rb'))\n\tsource(con)\nclose(con)\n\n\t#*****************************************************************\n\t# Load historical data\n\t#****************************************************************** \n\tload.packages('quantmod')\n\ttickers = spl('SPY')\n\n\tdata <- new.env()\n\tgetSymbols(tickers, src = 'yahoo', from = '1970-01-01', env = data, auto.assign = T)\n\tbt.prep(data, align='keep.all', dates='1970::2011')\n\n\t#*****************************************************************\n\t# Code Strategies\n\t#****************************************************************** \n\tprices = data$prices    \n\n\t# Buy & Hold\t\n\tdata$weight[] = 1\n\tbuy.hold = bt.run(data)\t\n\n\t# Trend-Following strategy: Long[Close > SMA(10) ]\n\tsma = bt.apply(data, function(x) { SMA(Cl(x), 10) } )\t\n\tdata$weight[] = NA\n\t\tdata$weight[] = iif(prices >= sma, 1, 0)\n\ttrend.following = bt.run(data, trade.summary=T)\t\t\t\n\n\t# Trend-Following With Counter-Trend strategy: Long[Close > SMA(10), DVB(1) CounterTrend ]\n\tdv = bt.apply(data, function(x) { DV(HLC(x), 1, TRUE) } )\t\n\tdata$weight[] = NA\n\t\tdata$weight[] = iif(prices > sma & dv < 0.25, 1, data$weight)\n\t\tdata$weight[] = iif(prices < sma & dv > 0.75, 0, data$weight)\n\ttrend.following.dv1 = bt.run(data, trade.summary=T)\t\t\t\n\n\t#*****************************************************************\n\t# Create Report\n\t#****************************************************************** \n\tplotbt.custom.report(trend.following.dv1, trend.following, buy.hold)\t\n\n```", "```\n\n\t#*****************************************************************\n\t# Sensitivity Analysis\n\t#****************************************************************** \n\tma.lens = seq(10, 100, by = 10)\n\tdv.lens = seq(1, 5, by = 1)\n\n\t# precompute indicators\n\tmas = matrix(double(), nrow(prices), len(ma.lens))\n\tdvs = matrix(double(), nrow(prices), len(dv.lens))\n\n\tfor(i in 1:len(ma.lens)) {\n\t\tma.len = ma.lens[i]\n\t\tmas[, i] = bt.apply(data, function(x) { SMA(Cl(x), ma.len) } )\n\t}\n\tfor(i in 1:len(dv.lens)) {\n\t\tdv.len = dv.lens[i]\n\t\tdvs[,i] = bt.apply(data, function(x) { DV(HLC(x), dv.len, TRUE) } )\n\t}\n\n\t# allocate matrixes to store backtest results\n\tdummy = matrix(double(), len(ma.lens), 1+len(dv.lens))\n\t\trownames(dummy) = paste('SMA', ma.lens)\n\t\tcolnames(dummy) = c('NO', paste('DV', dv.lens))\n\n\tout = list()\n\t\tout$Cagr = dummy\n\t\tout$Sharpe = dummy\n\t\tout$DVR = dummy\n\t\tout$MaxDD = dummy\n\n\t# evaluate strategies\n\tfor(ima in 1:len(ma.lens)) {\n\t\tsma = mas[, ima]\n\t\tcat('SMA =', ma.lens[ima], '\\n')\n\n\t\tfor(idv in 0:len(dv.lens)) {\t\t\t\n\t\t\tif( idv == 0 ) {\n\t\t\t\tdata$weight[] = NA\n\t\t\t\t\tdata$weight[] = iif(prices > sma, 1, 0)\t\t\t\n\t\t\t} else {\n\t\t\t\tdv = dvs[, idv]\n\n\t\t\t\tdata$weight[] = NA\n\t\t\t\t\tdata$weight[] = iif(prices > sma & dv < 0.25, 1, data$weight)\n\t\t\t\t\tdata$weight[] = iif(prices < sma & dv > 0.75, 0, data$weight)\n\t\t\t}\n\t\t\tstrategy = bt.run(data, silent=T)\n\n\t\t\t# add 1 to account for benchmark case, no counter-trend\n\t\t\tidv = idv + 1\n\t\t\tout$Cagr[ima, idv] = compute.cagr(strategy$equity)\n\t\t\tout$Sharpe[ima, idv] = compute.sharpe(strategy$ret)\n\t\t\tout$DVR[ima, idv] = compute.DVR(strategy)\n\t\t\tout$MaxDD[ima, idv] = compute.max.drawdown(strategy$equity)\n\t\t}\n\t}\n\n\t#*****************************************************************\n\t# Create Report\n\t#****************************************************************** \n\tlayout(matrix(1:4,nrow=2))\t\n\tfor(i in names(out)) {\n\t\ttemp = out[[i]]\n\t\ttemp[] = plota.format( 100 * temp, 1, '', '' )\n\t\tplot.table(temp, smain = i, highlight = T, colorbar = F)\n\t}\n\n```"]