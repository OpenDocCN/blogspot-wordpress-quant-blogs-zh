["```\n\n###############################################################################\n# Load Systematic Investor Toolbox (SIT)\n# https://systematicinvestor.wordpress.com/systematic-investor-toolbox/\n###############################################################################\nsetInternet2(TRUE)\ncon = gzcon(url('http://www.systematicportfolio.com/sit.gz', 'rb'))\n    source(con)\nclose(con)\n\n\t#*****************************************************************\n\t# Load historical data\n\t#****************************************************************** \n\tload.packages('quantmod')\t\n\ttickers = sp500.components()$tickers\n\n\tdata <- new.env()\n\tgetSymbols(tickers, src = 'yahoo', from = '1970-01-01', env = data, auto.assign = T)\n\t\t# remove companies with less than 5 years of data\n\t\trm.index = which( sapply(ls(data), function(x) nrow(data[[x]])) < 1000 )\t\n\t\trm(list=names(rm.index), envir=data)\n\n\t\tfor(i in ls(data)) data[[i]] = adjustOHLC(data[[i]], use.Adjusted=T)\t\t\n\tbt.prep(data, align='keep.all', dates='1994::')\n\t\ttickers = data$symbolnames\n\n\tdata.spy <- new.env()\n\tgetSymbols('SPY', src = 'yahoo', from = '1970-01-01', env = data.spy, auto.assign = T)\n\tbt.prep(data.spy, align='keep.all', dates='1994::')\n\n\t#*****************************************************************\n\t# Code Strategies\n\t#****************************************************************** \n\tprices = data$prices\n\t\tnperiods = nrow(prices)\n\t\tn = ncol(prices)\n\n\tmodels = list()\n\n\t# SPY\n\tdata.spy$weight[] = NA\n\t\tdata.spy$weight[] = 1\n\tmodels$spy = bt.run(data.spy)\n\n\t# Equal Weight\n\tdata$weight[] = NA\n\t\tdata$weight[] = ntop(prices, n)\n\tmodels$equal.weight = bt.run(data)\n\n```", "```\n\n\t#*****************************************************************\n\t# Compute Factor Attribution for each ticker\n\t#****************************************************************** \n\tperiodicity = 'weeks'\n\n\t# load Fama/French factors\n\tfactors = get.fama.french.data('F-F_Research_Data_Factors', periodicity = periodicity,download = T, clean = F)\n\n\tperiod.ends = endpoints(data$prices, periodicity)\n\t\tperiod.ends = period.ends[period.ends > 0]\n\n\t# add factors and align\n\tdata.fa <- new.env()\n\t\tfor(i in tickers) data.fa[[i]] = data[[i]][period.ends,]\n\tdata.fa$factors = factors$data / 100\n\tbt.prep(data.fa, align='remove.na')\n\n\tindex = match( index(data.fa$prices), index(data$prices) )\n\tmeasure = data$prices[ index, ]\t\n\tfor(i in tickers) {\n\t\tcat(i, '\\n')\n\n\t\t# Facto Loadings Regression\n\t\tobj = factor.rolling.regression(data.fa, i, 36, silent=T)\n\n\t\tmeasure[,i] = coredata(obj$fl$estimate$HML)\n\t}\n\n```", "```\n\n\t#*****************************************************************\n\t# Create Value Quantiles\n\t#****************************************************************** \n\tn.quantiles=5\n\tstart.t = 1+36\n\tquantiles = weights = coredata(measure) * NA\t\t\t\n\n\tfor( t in start.t:nrow(weights) ) {\n\t\tfactor = as.vector(coredata(measure[t,]))\n\t\tranking = ceiling(n.quantiles * rank(factor, na.last = 'keep','first') / count(factor))\n\n\t\tquantiles[t,] = ranking\n\t\tweights[t,] = 1/tapply(rep(1,n), ranking, sum)[ranking]\t\t\t\n\t}\n\n\tquantiles = ifna(quantiles,0)\n\n\t#*****************************************************************\n\t# Create backtest for each Quintile\n\t#****************************************************************** \n\tfor( i in 1:n.quantiles) {\n\t\ttemp = weights * NA\n\t\t\ttemp[] = 0\n\t\ttemp[quantiles == i] = weights[quantiles == i]\n\n\t\tdata$weight[] = NA\n\t\t\tdata$weight[index,] = temp\n\t\tmodels[[ paste('Q',i,sep='_') ]] = bt.run(data, silent = T)\n\t}\n\n\t#*****************************************************************\n\t# Create Report\n\t#****************************************************************** \t\t\t\t\t\n\tplotbt.custom.report.part1(models)\t\t\n\n\tplotbt.strategy.sidebyside(models)\n\n```"]