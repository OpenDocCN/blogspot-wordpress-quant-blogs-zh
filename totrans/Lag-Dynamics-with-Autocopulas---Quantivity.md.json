["```\n\nexploreProxyAutoCopula <- function(p)\n{\n  # Visualize autocopulas for two proxy instruments and excess.\n  #\n  # Args:\n  #     p: matrix of daily instrument price data, including valid colnames\n  #\n  # Returns: none\n\n  pROC <- ROC(p, type=\"discrete\", na.pad=FALSE)\n  cnames <- colnames(pROC)\n\n  exploreMultiAutoCopula(coredata(pROC[,1]))\n  exploreMultiAutoCopula(coredata(pROC[,2]))\n\n  excess <- pROC[,1]-pROC[,2]\n  colnames(excess) <- c(paste(cnames[1],\"-\",cnames[2]))\n  exploreMultiAutoCopula(coredata(excess))  # excess returns\n\n  absReturns <- abs(pROC[,1])\n  absExcess <- abs(excess)\n  acf2(absReturns,max.lag=30)\n  acf2(absExcess,max.lag=30)\n\n  plotCopulaDiff(fitAutoCopula(coredata(pROC[,1]),1), fitAutoCopula(coredata(pROC[,2]),1), xlab=\"\", ylab=\"\", zlab=\"Density Diff\", main=\"Lag-1 Proxy Autocopula\")\n\n  plotCopulaDiff(fitAutoCopula(coredata(pROC[,1]),2), fitAutoCopula(coredata(pROC[,2]),2), xlab=\"\", ylab=\"\", zlab=\"Density Diff\", main=\"Lag-2 Proxy Autocopula\")\n\n  plotCopulaDiff(fitAutoCopula(coredata(pROC[,1]),5), fitAutoCopula(coredata(pROC[,2]),5), xlab=\"\", ylab=\"\", zlab=\"Density Diff\", main=\"Lag-5 Proxy Autocopula\")\n\n  plotCopulaDiff(fitAutoCopula(coredata(pROC[,1]),22), fitAutoCopula(coredata(pROC[,2]),22), xlab=\"\", ylab=\"\", zlab=\"Density Diff\", main=\"Lag-22 Proxy Autocopula\")\n}\n\nplotCopulaDiff <- function(c1, c2, n = 51, theta = 35, phi = 25, expand = 0.618, ...)\n{\n  # Plot difference in copula perspective for two copulas\n\n  xis <- yis <- seq(0, 1, len = n)\n  grids <- as.matrix(expand.grid(xis, yis))\n  funDiff <- dcopula(c1, grids) - dcopula(c2, grids)\n  zmat <- matrix(funDiff, n, n)\n  persp(xis, yis, zmat, theta = theta, phi = phi, expand = expand, ...)\n}\n\nexploreMultiAutoCopula <- function(vec)\n{\n  # Visualize lag-1, lag-2, lag-5, and lag-22 autocopulas for a vector of \n  # data.\n  #\n  # Args:\n  #   vec: vector of data\n  #\n  # Returns: empirically fitted copulas\n\n  oldpar <- par(mfrow=c(2,2))\n  cnames <- colnames(vec)\n\n  lag1Copula <- fitAutoCopula(vec,1)\n  lag2Copula <- fitAutoCopula(vec,2)\n  lag5Copula <- fitAutoCopula(vec,5)\n  lag22Copula <- fitAutoCopula(vec,22)\n\n  persp(lag1Copula, dcopula, main=\"Lag-1 Autocopula\", xlab=cnames[1], ylab=\"lag-1\", zlab=\"Density\", expand=1)\n  persp(lag2Copula, dcopula, main=\"Lag-2 Autocopula\", xlab=cnames[1], ylab=\"lag-2\", zlab=\"Density\", expand=1)\n  persp(lag5Copula, dcopula, main=\"Lag-5 Autocopula\", xlab=cnames[1], ylab=\"lag-5\", zlab=\"Density\", expand=1)\n  persp(lag22Copula, dcopula, main=\"Lag-22 Autocopula\", xlab=cnames[1], ylab=\"lag-22\", zlab=\"Density\", expand=1)\n\n  par(oldpar)\n\n  return (list(lag1=lag1Copula, lag2=lag2Copula, lag5=lag5Copula, lag22=lag22Copula))\n}\n\nfitAutoCopula <- function(vec, lag=1)\n{\n  # Analyze auto copula for a vector of data, with given lag.\n  #\n  # Args:\n  #   vec: vector of data\n  #   lag: order of lag, default to 1\n  #\n  # Returns: list of copula fit and empirical copula\n\n  lagV <- lag(vec, k=lag)\n  lagV <- lagV[(lag+1):nrow(lagV)]\n\n  lagged <- cbind(vec[1:(nrow(vec)-1)],lagV)\n  colnames(lagged) <- c(colnames(vec)[1], paste(\"lag-\",lag,sep=\"\"))\n\n  return(fitEmpiricalCopula(lagged))\n}\n\nfitEmpiricalCopula <- function(pROC)\n{\n  # Fit empirical copula, given series of return data.\n  #\n  # Args:\n  #   pROC: matrix of daily instrument return data, including valid colnames\n  #\n  # Returns: empirical copula\n\n  n <- nrow(pROC)\n\n  tau <- cor(pROC, method=\"kendall\")[2]\n  t.cop <- tCopula(tau, dim=2, dispstr=\"un\", df=3)\n  psuedo <- apply(pROC, 2, rank) / (n + 1)\n\n  fit.mpl <- fitCopula(t.cop, psuedo, method=\"mpl\", estimate.variance=FALSE)\n\n  return (empiricalCopula <- tCopula(fit.mpl@estimate[1], dim=2, dispstr=\"un\", df=fit.mpl@estimate[2]))\n}\n\nacf2 <- function(series, max.lag=NULL)\n{\n  # ACF function replacing broken version from stats library, fixed to\n  # remove lag=0; credit to David Stoffer (http://www.stat.pitt.edu/stoffer).\n\n  num=length(series)\n  if (is.null(max.lag)) max.lag=ceiling(10+sqrt(num))\n  if (max.lag > (num-1)) stop(\"Number of lags exceeds number of observations\")\n  ACF=acf(series, max.lag, plot=FALSE)$acf[-1]\n  PACF=pacf(series, max.lag, plot=FALSE)$acf\n  LAG=1:max.lag/frequency(series)\n  minA=min(ACF)\n  minP=min(PACF)\n  U=2/sqrt(num)\n  L=-U\n  minu=min(minA,minP,L)-.01\n  old.par <- par(no.readonly = TRUE)\n  par(mfrow=c(2,1), mar = c(3,3,2,0.8),\n    oma = c(1,1.2,1,1), mgp = c(1.5,0.6,0))\n  plot(LAG, ACF, type=\"h\",ylim=c(minu,1), \n    main=paste(deparse(substitute(series))))\n    abline(h=c(0,L,U), lty=c(1,2,2), col=c(1,4,4))\n  plot(LAG, PACF, type=\"h\",ylim=c(minu,1))\n    abline(h=c(0,L,U), lty=c(1,2,2), col=c(1,4,4))\n  on.exit(par(old.par))  \n  ACF<-round(ACF,2); PACF<-round(PACF,2)    \n  return(cbind(ACF, PACF)) \n}\n\n```"]