["```\nDate|Symbol|Short Volume|Total Volume|Market Center\n20111230|A|26209|71422|Z\n20111230|AA|298405|487461|Z\n20111230|AACC|300|3120|Z\n20111230|AAN|3600|10100|Z\n20111230|AAON|1875|6156|Z\n\n```", "```\nfrom string import Template\n\ndef createUrl(date):\n    s = Template('http://www.batstrading.com/market_data/shortsales/$year/$month/$fName-dl?mkt=bzx')\n    fName = 'BATSshvol%s.txt.zip' % date.strftime('%Y%m%d')\n\n    url = s.substitute(fName=fName, year=date.year, month='%02d' % date.month)\n\n    return url,fName\n\n```", "```\nhttp://www.batstrading.com/market_data/shortsales/2013/08/BATSshvol20130813.txt.zip-dl?mkt=bzx\n\n```", "```\nimport urllib\n\nfor i,date in enumerate(dates):\n    source, fName =  createUrl(date)# create url and file name\n    dest = os.path.join(dataDir,fName) \n    if not os.path.exists(dest): # don't download files that are present\n        print 'Downloading [%i/%i]' %(i,len(dates)), source\n        urllib.urlretrieve(source, dest)\n    else:\n        print 'x',\n\n```", "```\nDownloading [0/657] http://www.batstrading.com/market_data/shortsales/2011/01/BATSshvol20110103.txt.zip-dl?mkt=bzx\nDownloading [1/657] http://www.batstrading.com/market_data/shortsales/2011/01/BATSshvol20110104.txt.zip-dl?mkt=bzx\nDownloading [2/657] http://www.batstrading.com/market_data/shortsales/2011/01/BATSshvol20110105.txt.zip-dl?mkt=bzx\nDownloading [3/657] http://www.batstrading.com/market_data/shortsales/2011/01/BATSshvol20110106.txt.zip-dl?mkt=bzx\n\n```", "```\nimport datetime as dt\nimport zipfile\nimport StringIO\n\ndef readZip(fName):\n    zipped = zipfile.ZipFile(fName) # open zip file \n    lines = zipped.read(zipped.namelist()[0]) # unzip and read first file \n    buf = StringIO.StringIO(lines) # create buffer\n    df = pd.read_csv(buf,sep='|',index_col=1,parse_dates=False,dtype={'Date':object,'Short Volume':np.float32,'Total Volume':np.float32}) # parse to table\n    s = df['Short Volume']/df['Total Volume'] # calculate ratio\n    s.name = dt.datetime.strptime(df['Date'][-1],'%Y%m%d')\n\n    return s\n\n```", "```\nSymbol\nA         0.531976\nAA        0.682770\nAAIT      0.000000\nAAME      0.000000\nAAN       0.506451\nAAON      0.633841\nAAP       0.413083\nAAPL      0.642275\nAAT       0.263158\nAAU       0.494845\nAAV       0.407976\nAAWW      0.259511\nAAXJ      0.334937\nAB        0.857143\nABAX      0.812500\n...\nZLC       0.192725\nZLCS      0.018182\nZLTQ      0.540341\nZMH       0.413315\nZN        0.266667\nZNGA      0.636890\nZNH       0.125000\nZOLT      0.472636\nZOOM      0.000000\nZQK       0.583743\nZROZ      0.024390\nZSL       0.482461\nZTR       0.584526\nZTS       0.300384\nZUMZ      0.385345\nName: 2013-08-13 00:00:00, Length: 5859, dtype: float32\n\n```", "```\n\n```", "```\nStep 5: Make a chart:\n\nNow the only thing left is to parse all downloaded files and combine them to a single table and plot the result:\n\n In the figure above I have plotted the \n\n*average*\n\nÂ short volume ratio for the past two years. I also could have used a subset of symbols if I wanted to take a look at a specific sector or stock. Quick look at the data gives me an impression that high short volume ratios usually correspond with market bottoms and low ratios seem to be good entry points for a long position.\n\nStarting from here, this short volume ratio can be used as a basis for strategy development. \n```", "```\n\n```"]