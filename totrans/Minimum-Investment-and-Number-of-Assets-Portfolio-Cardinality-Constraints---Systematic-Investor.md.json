["```\n\n# load Systematic Investor Toolbox\nsetInternet2(TRUE)\nsource(gzcon(url('https://github.com/systematicinvestor/SIT/raw/master/sit.gz', 'rb')))\n\n#--------------------------------------------------------------------------\n# Create Efficient Frontier\n#--------------------------------------------------------------------------\nia = aa.test.create.ia()\nn = ia$n\t\t\n\n# 0 <= x.i <= 0.8 \nconstraints = new.constraints(n, lb = 0, ub = 0.8)\n\n# SUM x.i = 1\nconstraints = add.constraints(rep(1, n), 1, type = '=', constraints)\t\t\n\n# create efficient frontier(s)\nef.risk = portopt(ia, constraints, 50, 'Risk')\nef.mad = portopt(ia, constraints, 50, 'MAD', min.mad.portfolio)\n\n# Plot range of portfolio weights and number of assets in each portfolio on efficient frontier\nlayout(1:2)\npar(mar = c(4,4,2,1), cex = 0.8)\ny = iif(ef.risk$weight > 0.000001, ef.risk$weight, NA) \nplot(as.vector(sort(100 * y)), pch=20, xaxt='n', ylim = c(0, 80),\n\txlab='', ylab='Weight', main='Portfolio Weights')\n\tabline(h=0, col = 'red')\n\tabline(h=10, col = 'red')\n\nplot(100* ef.risk$risk, rowSums(!is.na(y), na.rm = T), pch=20, type='b', \n\txlab='Risk', ylab='# Assets', main='Number of Assets')\n\n# Plot multiple Efficient Frontiers & Transition Maps\nlayout( matrix(1:4, nrow = 2) )\nplot.ef(ia, list(ef.risk, ef.mad), portfolio.risk, F)\t\nplot.ef(ia, list(ef.risk, ef.mad), portfolio.mad, F)\t\n\nplot.transition.map(ef.risk)\nplot.transition.map(ef.mad)\n\n```", "```\n\n#--------------------------------------------------------------------------\n# Minimum Investment Constraint is 10%\n# Add binary[0/1] variables\n# 0.1 * b.i <= x.i <= 0.8 * b.i\n#--------------------------------------------------------------------------\n\n# SUM x.i = 1\nconstraints = new.constraints(n, rep(1, n), 1, type = '=')\t\t\n\n# New add binary constraint\t\n# adjust prior constraints: add b.i\nconstraints = add.variables(n, constraints)\n\n# index of binary variables b.i\nconstraints$binary.index = (n+1):(2*n)\n\n# 0.1 * b <= x.i <= 0.8 * b\n# x.i >= 0.1 * b \nconstraints = add.constraints(rbind(diag(n), -0.1 * diag(n)), rep(0, n), type = '>=', constraints)\n\n# x.i <= 0.8 * b\nconstraints = add.constraints(rbind(diag(n), -0.8 * diag(n)), rep(0, n), type = '<=', constraints)\n\n# create efficient frontier(s)\nef.risk = portopt(ia, constraints, 50, 'Risk')\n\tef.risk$weight = ef.risk$weight[, 1:n]\nef.mad = portopt(ia, constraints, 50, 'MAD', min.mad.portfolio)\n\tef.mad$weight = ef.mad$weight[, 1:n]\n\n```", "```\n\n#--------------------------------------------------------------------------\n# Limit number of assets to 3\n# Add binary[0/1] variables\n# 0.00001 * b <= x.i <= 0.8 * b\n# SUM b.i = 3\n#--------------------------------------------------------------------------\n\n# SUM x.i = 1\nconstraints = new.constraints(n, rep(1, n), 1, type = '=')\t\t\n\n# New add binary constraint\t\n# adjust prior constraints: add b.i\nconstraints = add.variables(n, constraints)\n\n# index of binary variables b.i\nconstraints$binary.index = (n+1):(2*n)\n\n# 0.00001 * b <= x.i <= 0.8 * b\n# x.i >= 0.00001 * b \nconstraints = add.constraints(rbind(diag(n), -0.00001 * diag(n)), rep(0, n), type = '>=', constraints)\n\n# x.i <= 0.8 * b\nconstraints = add.constraints(rbind(diag(n), -0.8 * diag(n)), rep(0, n), type = '<=', constraints)\n\n# SUM b.i = 3\nconstraints = add.constraints(c(rep(0,n), rep(1,n)), 3, type = '=', constraints)\n\n# create efficient frontier(s)\nef.risk = portopt(ia, constraints, 50, 'Risk')\n\tef.risk$weight = ef.risk$weight[, 1:n]\nef.mad = portopt(ia, constraints, 50, 'MAD', min.mad.portfolio)\n\tef.mad$weight = ef.mad$weight[, 1:n]\n\n```"]