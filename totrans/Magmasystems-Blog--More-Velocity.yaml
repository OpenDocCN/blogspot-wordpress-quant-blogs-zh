- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-18 05:00:51'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: 'Magmasystems Blog: More Velocity'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[http://magmasystems.blogspot.com/2008/06/more-velocity.html#0001-01-01](http://magmasystems.blogspot.com/2008/06/more-velocity.html#0001-01-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: I had quite an interesting conversation the other day with
  prefs: []
  type: TYPE_NORMAL
- en: Anil Nori
  prefs: []
  type: TYPE_NORMAL
- en: ', who is the "Distinguished Engineer" in charge of the Microsoft Velocity effort.'
  prefs: []
  type: TYPE_NORMAL
- en: Anil
  prefs: []
  type: TYPE_NORMAL
- en: comes to Microsoft from Oracle, so he is not driven by blind devotion to the
  prefs: []
  type: TYPE_NORMAL
- en: '*Church of Microsoft*'
  prefs: []
  type: TYPE_NORMAL
- en: .
  prefs: []
  type: TYPE_NORMAL
- en: Anil
  prefs: []
  type: TYPE_NORMAL
- en: is on a mission, wants to do what's right, and has a very similar vision that
    I do ... Velocity as the center of the "data universe".
  prefs: []
  type: TYPE_NORMAL
- en: One of the things that I was concerned about was interoperability in Velocity.
    It was good to know that this is a topic that
  prefs: []
  type: TYPE_NORMAL
- en: Anil
  prefs: []
  type: TYPE_NORMAL
- en: has been thinking about. In most investment banks, it's usually the native Java
    object caches that are installed, and each of the object caches have to find some
    way to
  prefs: []
  type: TYPE_NORMAL
- en: interop
  prefs: []
  type: TYPE_NORMAL
- en: with .NET clients. With Velocity, it is the other way around.
  prefs: []
  type: TYPE_NORMAL
- en: Anil
  prefs: []
  type: TYPE_NORMAL
- en: knows that, in order to be
  prefs: []
  type: TYPE_NORMAL
- en: successful
  prefs: []
  type: TYPE_NORMAL
- en: in our world, he has to provide
  prefs: []
  type: TYPE_NORMAL
- en: interop
  prefs: []
  type: TYPE_NORMAL
- en: with Java.
  prefs: []
  type: TYPE_NORMAL
- en: Quite truthfully, I have to say that Velocity has most .NET developers jumping
    up and down. I was on a call with the ".NET leadership" of my company today, and
    when I started talking about Velocity, everyone wanted to know how they could
    start playing with it. I have not seen this reaction caused by any Microsoft product
    in quite a while.
  prefs: []
  type: TYPE_NORMAL
- en: WPF
  prefs: []
  type: TYPE_NORMAL
- en: ','
  prefs: []
  type: TYPE_NORMAL
- en: WCF
  prefs: []
  type: TYPE_NORMAL
- en: ', and'
  prefs: []
  type: TYPE_NORMAL
- en: LINQ
  prefs: []
  type: TYPE_NORMAL
- en: were greeted by "ho-hums" within my company. But Velocity was a different story.
  prefs: []
  type: TYPE_NORMAL
- en: This shows you how enterprise .NET architects and developers yearn to get the
    same tools that our Java brethren have had access to for a while. Yes, I know
    that
  prefs: []
  type: TYPE_NORMAL
- en: Tangasol
  prefs: []
  type: TYPE_NORMAL
- en: and
  prefs: []
  type: TYPE_NORMAL
- en: Gigaspaces
  prefs: []
  type: TYPE_NORMAL
- en: and
  prefs: []
  type: TYPE_NORMAL
- en: Gemfire
  prefs: []
  type: TYPE_NORMAL
- en: have .NET caches now. But, there is a certain glimmer in people's eyes when
    they hear that one of these enterprise technologies is coming from Microsoft.
    It's like welcoming home a lost-long relative.
  prefs: []
  type: TYPE_NORMAL
- en: Can we use Velocity to cache an entire day's worth of orders, and easily let
    a client retrieve any order by ID or a list of orders in a certain time range
    or a list of orders that use a certain algo?
  prefs: []
  type: TYPE_NORMAL
- en: Welcome home, Microsoft.... now, don't disappoint me!
  prefs: []
  type: TYPE_NORMAL
- en: ©2008 Marc Adler - All Rights Reserved.
  prefs: []
  type: TYPE_NORMAL
- en: All opinions here are personal, and have no relation to my employer.
  prefs: []
  type: TYPE_NORMAL
