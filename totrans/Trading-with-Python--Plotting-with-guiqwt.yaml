- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-18 15:43:08'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-18 15:43:08
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Trading with Python: Plotting with guiqwt'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Python 交易：使用 guiqwt 绘图
- en: 来源：[http://tradingwithpython.blogspot.com/2011/12/plotting-with-guiqwt.html#0001-01-01](http://tradingwithpython.blogspot.com/2011/12/plotting-with-guiqwt.html#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[http://tradingwithpython.blogspot.com/2011/12/plotting-with-guiqwt.html#0001-01-01](http://tradingwithpython.blogspot.com/2011/12/plotting-with-guiqwt.html#0001-01-01)
- en: 'While it''s been quiet on this blog, but behind the scenes I have been very
    busy trying to build an interactive spread scanner. To make one, a list of ingredients
    is needed:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然博客上很安静，但幕后我一直在忙于构建一个交互式 spread 扫描器。要制作一个，需要一份配料清单：
- en: 'gui toolkit: pyqt -check.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: GUI 工具包：pyqt - 检查。
- en: 'data aquisition: ibpy & tradingWithPython.lib.yahooData - check.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 数据采集：ibpy & tradingWithPython.lib.yahooData - 检查。
- en: 'data container: pandas & sqlite - check.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 数据容器：pandas & sqlite - 检查。
- en: 'plotting library: matplotlib - ehm... No.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 绘图库：matplotlib - 嗯... 不。
- en: After tinkering with matplotlib in pyqt for several days I must admit its use
    in interactive applications is far from optimal. Slow, difficult to integrate
    and little interactivity. PyQwt proven to work a little better, but it had its
    own quirks, a little bit too low-level for me.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在用 pyqt 玩了几天 matplotlib 后，我必须承认它在交互式应用中的使用远非最佳。速度慢，难以集成，且交互性差。PyQwt 证明稍微好一点，但它有自己的怪癖，对我来说有点太底层了。
- en: But as it often happens with Python, somebody, somewhere has already written
    a kick-ass toolkit that is just perfect for the job. And it looks like
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 但正如 Python 经常发生的那样，有人，在某个地方已经写了一个非常棒的工具包，非常适合这个工作。而且看起来像
- en: '[guiqwt](http://packages.python.org/guiqwt/index.html)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[guiqwt](http://packages.python.org/guiqwt/index.html)'
- en: 'is just it. Interactive charts are just a couple of code lines away now, take
    a look at an example here:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样。交互式图表现在只需几行代码就能实现，看看这里的示例：
- en: '[Creating curve dialog](http://code.google.com/p/trading-with-python/source/browse/trunk/cookbook/guiqwt_CurveDialog.py)'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[创建曲线对话框](http://code.google.com/p/trading-with-python/source/browse/trunk/cookbook/guiqwt_CurveDialog.py)'
- en: . For this I used guiqwt example code with some minor tweaks.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 为实现此功能，我使用了 guiqwt 的示例代码并进行了一些小调整。
- en: 'And of course a pretty picture of the result:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，还有结果的漂亮图片：
- en: '...If only I knew how to set dates on the x-axis....'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '...如果我知道如何在 x 轴上设置日期就好了....'
