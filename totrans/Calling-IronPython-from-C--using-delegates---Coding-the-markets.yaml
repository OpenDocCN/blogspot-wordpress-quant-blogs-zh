- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-05-12 19:44:53'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Calling IronPython from C# using delegates | Coding the markets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://etrading.wordpress.com/2007/10/30/calling-ironpython-from-c-using-delegates/#0001-01-01](https://etrading.wordpress.com/2007/10/30/calling-ironpython-from-c-using-delegates/#0001-01-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Calling IronPython from C# using delegates
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: October 30, 2007
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: I wanted to wrap a C# WinForms object in a Python dictionary, so I could make
    it look like a dictionary by implenting __getitem__ and __contains__ using hasattr()
    and getattr(). I’d been using generic EventHandlers to dispatch from C# to Python
    quite happily to date. But the __contains__ implementation needs to return a bool,
    which doesn’t fit with the event handler model. [This post](http://www.mail-archive.com/users@lists.ironpython.com/msg01986.html)
    showed me the way. Here’s the code…
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
