- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-12 19:35:31'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-12 19:35:31
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Lock free: the new C++ frontier | Coding the markets'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[无锁：新的C++前沿](https://etrading.wordpress.com/2011/02/09/lock-free-the-new-c-frontier/#0001-01-01)
    | 编码市场'
- en: 来源：[https://etrading.wordpress.com/2011/02/09/lock-free-the-new-c-frontier/#0001-01-01](https://etrading.wordpress.com/2011/02/09/lock-free-the-new-c-frontier/#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://etrading.wordpress.com/2011/02/09/lock-free-the-new-c-frontier/#0001-01-01](https://etrading.wordpress.com/2011/02/09/lock-free-the-new-c-frontier/#0001-01-01)
- en: 'Lock free: the new C++ frontier'
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 无锁：新的C++前沿
- en: February 9, 2011
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2011年2月9日
- en: One of the joys of C++ is the way the state of the art in the language periodically
    renews itself. I started coding in C++ in 1992 (!?!). I spent a couple of years
    away in 2001 & 2, and when I came back to C++ in 2003 the generic programming
    movement led by the likes of Stepanov and Alexandrescu had renewed the language.
    _1 indeed ! And now it feels like it’s happening again. [LMAX](https://etrading.wordpress.com/2011/01/21/lmax-disrupter/)
    put me onto the lock free meme a couple of weeks back. There’s a [Herb Sutter
    article on lock free queues](http://www.drdobbs.com/high-performance-computing/210604448)
    out there, folks on stackoverflow say [it’s difficult](http://stackoverflow.com/questions/92455/how-can-i-write-a-lock-free-structure),
    Hack the Market has [blogged about FastFlow](http://www.puppetmastertrading.com/blog/2010/02/16/lock-free/),
    and there’s a “Boost” [lock free lib](http://tim.klingt.org/git?p=boost_lockfree.git).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 自从我开始在C++中编程以来，该语言的艺术状态每隔一段时间就会更新自己。我在2001年和2002年离开了几年，当我2003年回到C++时，由Stepanov和Alexandrescu等人领导的泛型编程运动更新了该语言。_1确实！而现在，感觉好像它又正在发生。LMAX[https://etrading.wordpress.com/2011/01/21/lmax-disrupter/](https://etrading.wordpress.com/2011/01/21/lmax-disrupter/)几周前让我接触到了无锁的概念。有一个关于无锁队列的[Herb
    Sutter文章](http://www.drdobbs.com/high-performance-computing/210604448)在那里，人们在stackoverflow上说[它很难](http://stackoverflow.com/questions/92455/how-can-i-write-a-lock-free-structure)，Hack
    the Market已经[关于FastFlow](http://www.puppetmastertrading.com/blog/2010/02/16/lock-free/)博客，还有一个“Boost”[无锁库](http://tim.klingt.org/git?p=boost_lockfree.git)。
