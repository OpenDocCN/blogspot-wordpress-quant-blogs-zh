["```\n\n###############################################################################\n# Load Systematic Investor Toolbox (SIT)\n# https://systematicinvestor.wordpress.com/systematic-investor-toolbox/\n###############################################################################\nsetInternet2(TRUE)\ncon = gzcon(url('http://www.systematicportfolio.com/sit.gz', 'rb'))\n    source(con)\nclose(con)\n\t#*****************************************************************\n\t# Load historical data\n\t#****************************************************************** \n\tload.packages('quantmod')\n\n\ttickers = spl('SPY')\n\n\tdata <- new.env()\n\tgetSymbols.extra(tickers, src = 'yahoo', from = '1980-01-01', env = data, set.symbolnames = T, auto.assign = T)\n\t\tfor(i in data$symbolnames) data[[i]] = adjustOHLC(data[[i]], use.Adjusted=T)\n\tbt.prep(data, align='keep.all', fill.gaps = T)\n\n\t#*****************************************************************\n\t# Setup\n\t#*****************************************************************\n\tprices = data$prices\n\t\tn = ncol(prices)\n\n\tmodels = list()\n\n\tperiod.ends = date.month.ends(data$dates, F)\n\n\t#*****************************************************************\n\t# Strategy\n\t#*****************************************************************\n\tkey.date = NA * prices\n\t\tkey.date[period.ends] = T\n\n\tuniverse = prices > 0\n\tsignal = key.date\n\n\tdata$weight[] = NA\n\t\tdata$weight[] = ifna(universe & key.date, F)\n\tmodels$T0 = bt.run.share(data, do.lag = 0, trade.summary=T, clean.signal=T) \n\n```", "```\nportfolio.returns = lag(signal, do.lag) * returns = lag(signal, 1) * returns\n```", "```\nportfolio.returns = lag(signal, do.lag) * returns = signal * returns\n```", "```\n\n\tcalendar.strategy <- function(data, signal, universe = data$prices > 0) {\n\t\tdata$weight[] = NA\n\t\t\tdata$weight[] = ifna(universe & signal, F)\n\t\tbt.run.share(data, do.lag = 0, trade.summary=T, clean.signal=T)  \t\n\t}\n\n\tcalendar.signal <- function(key.date, offsets = 0) {\n\t\tsignal = mlag(key.date, offsets[1])\n\t\tfor(i in offsets) signal = signal | mlag(key.date, i)\n\t\tsignal\n\t}\n\n\t# Trade on key.date\n\tmodels$T0 = calendar.strategy(data, key.date)\n\n\t# Trade next day after key.date\n\tmodels$N1 = calendar.strategy(data, mlag(key.date,1))\n\t# Trade two days next(after) key.date\n\tmodels$N2 = calendar.strategy(data, mlag(key.date,2))\n\n\t# Trade a day prior to key.date\n\tmodels$P1 = calendar.strategy(data, mlag(key.date,-1))\n\t# Trade two days prior to key.date\n\tmodels$P2 = calendar.strategy(data, mlag(key.date,-2))\n\n\t# Trade: open 2 days before the key.date and close 2 days after the key.date\n\tsignal = key.date | mlag(key.date,-1) | mlag(key.date,-2) | mlag(key.date,1) | mlag(key.date,2)\n\tmodels$P2N2 = calendar.strategy(data, signal)\n\n\t# same, but using helper function above\t\n\tmodels$P2N2 = calendar.strategy(data, calendar.signal(key.date, -2:2))\n\n\tstrategy.performance.snapshoot(models, T)\n\n\tstrategy.performance.snapshoot(models, control=list(comparison=T), sort.performance=F)\n\n```", "```\n\n\tlast.trades <- function(model, n=20, make.plot=T, return.table=F) {\n\t\tntrades = min(n, nrow(model$trade.summary$trades))\t\t\n\t\ttrades = last(model$trade.summary$trades, ntrades)\n\t\tif(make.plot) {\n\t\t\tlayout(1)\n\t\t\tplot.table(trades)\n\t\t}\t\n\t\tif(return.table) trades\t\n\t}\n\n\tlast.trades(models$P2)\n\n```"]