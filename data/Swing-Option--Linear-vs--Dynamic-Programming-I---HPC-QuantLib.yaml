- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-17 23:40:05'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-17 23:40:05
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Swing Option: Linear vs. Dynamic Programming I – HPC-QuantLib'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摆动期权：线性规划与动态规划 I – HPC-QuantLib
- en: 来源：[https://hpcquantlib.wordpress.com/2011/05/29/swing-option-i-linear-vs-dynamic-programming/#0001-01-01](https://hpcquantlib.wordpress.com/2011/05/29/swing-option-i-linear-vs-dynamic-programming/#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://hpcquantlib.wordpress.com/2011/05/29/swing-option-i-linear-vs-dynamic-programming/#0001-01-01](https://hpcquantlib.wordpress.com/2011/05/29/swing-option-i-linear-vs-dynamic-programming/#0001-01-01)
- en: Finding the optimal exercise strategy for a swing option is a challenging task,
    even for simple payoff structures. In the absence of complicated time-integral
    constraints dynamic programming can be used to calculate the optimal exercise
    strategy. Linear programming applied *ex post* over the whole spot price path
    is capable to deal with more complicated time-integral constraints but the algorithm
    leads only to an upper bound of the real option price [1].
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 为摆动期权寻找最优行使策略是一项挑战，即使对于简单的收益结构。在缺少复杂的时间积分约束的情况下，可以使用动态规划计算最优行使策略。对整个标的资产路径进行
    *ex post* 的线性规划能够处理更复杂的时间积分约束，但该算法只能得到真实期权价格的上界 [1]。
- en: 'A basic payoff structure is e.g.: On the exercise dates ![t_i, i\in\{1..N\}](img/ceb7402f3d0d2dd826076a0feaa3b25e.png)
    the decision variables ![\beta_i\in\{0,1\}](img/14f0ae1ade7291e90648b241544494cb.png)
    indicate whether to exercise ![(\beta_i=1)](img/55b71e53ca8639f44d82e937c1c4dcd3.png)
    or not to exercise ![(\beta_i=0)](img/b9db13e10d2f21a5d9722ac3d5be68de.png) the
    option at a given point ![t_i](img/47514cfd3eec7658c4bd9fa21c2063d0.png) in time.
    Payoff is either ![\beta_i (P(t_i)-K)](img/a79acf140baa7d65b986a73d84feb4e8.png)
    for a call or ![\beta_i(K-P(t_i))](img/607f2105f2f287fc46cae44efebe5298.png) for
    a put option. Here ![K](img/7fbda8d36d2bb059dcc3ef722b1f7c78.png) is the strike
    price and ![P(t_i)](img/a34bd0cc174927dcc1f6360b85e0f7e0.png) is the spot price
    . The number of exercise opportunities is constraint by'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 一个基本的收益结构例如：在行使日期 ![t_i, i\in\{1..N\}](img/ceb7402f3d0d2dd826076a0feaa3b25e.png)
    时，决策变量 ![\beta_i\in\{0,1\}](img/14f0ae1ade7291e90648b241544494cb.png) 表示是否行使 ![(\beta_i=1)](img/55b71e53ca8639f44d82e937c1c4dcd3.png)
    或不行使 ![(\beta_i=0)](img/b9db13e10d2f21a5d9722ac3d5be68de.png) 期权。收益为 ![\beta_i
    (P(t_i)-K)](img/a79acf140baa7d65b986a73d84feb4e8.png) 对于看涨期权或 ![\beta_i(K-P(t_i))](img/607f2105f2f287fc46cae44efebe5298.png)
    对于看跌期权。其中 ![K](img/7fbda8d36d2bb059dcc3ef722b1f7c78.png) 是执行价格，![P(t_i)](img/a34bd0cc174927dcc1f6360b85e0f7e0.png)
    是即期价格。行使次数由
- en: '![E_{min} \le \sum_{i=1}^N \beta_i \le E_{max}](img/87f9ef1bd007e87335bde8c4bf967923.png).'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![E_{min} \le \sum_{i=1}^N \beta_i \le E_{max}](img/87f9ef1bd007e87335bde8c4bf967923.png)。'
- en: The price of a swing call option is then given by
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 期权的摆动看涨期权价格由
- en: '![\text{npv} = \max_{\beta}\mathbb{E}^\mathbb{Q} \left[ \sum_{i=1}^N \beta_i
    \left( P(t_i) - K\right)e^{rt_i}\right]](img/81f6ce454db48d6841abb4b35ef23406.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![\text{npv} = \max_{\beta}\mathbb{E}^\mathbb{Q} \left[ \sum_{i=1}^N \beta_i
    \left( P(t_i) - K\right)e^{rt_i}\right]](img/81f6ce454db48d6841abb4b35ef23406.png)'
- en: 'Let the dynamics of the spot price in the risk neutral measure ![\mathbb{Q}](img/5303e8e873ee25c92b0ce4499aa13f42.png)
    be given by the Kluge model [2]:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 令风险中性测度 ![\mathbb{Q}](img/5303e8e873ee25c92b0ce4499aa13f42.png) 下的标的资产价格动态为
    Kluge 模型 [2]：
- en: '![\begin{array}{rcl} S &=& exp(X_t + Y_t) \\ dX_t &=& \alpha(\mu(t)-X_t)dt
    + \sigma dW_t \\ dY_t &=& -\beta Y_{t-}dt + J_tdN_t \\ \omega(J)&=& \eta_u e^{-\eta_u
    J} \end{array}](img/26404891dce6827104120e026b6228fc.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![\begin{array}{rcl} S &=& exp(X_t + Y_t) \\ dX_t &=& \alpha(\mu(t)-X_t)dt
    + \sigma dW_t \\ dY_t &=& -\beta Y_{t-}dt + J_tdN_t \\ \omega(J)&=& \eta_u e^{-\eta_u
    J} \end{array}](img/26404891dce6827104120e026b6228fc.png)'
- en: 'This model is composed of an Ornstein-Uhlenbeck (OU) process ![X_t](img/bac49ad8e6c0a4d679f98639122d578f.png),
    a deterministic period function ![\mu(t)](img/fbf2ff543464902ce67787f23dc78cd2.png)
    characterizing the seasonality and a mean reverting process ![Y_t](img/f6195da594b33c3d1302f6dd33eaf94d.png)
    with jumps to incorporate spikes. ![N_t](img/c6d44fd3b9c210c1d0e71a4a31edb3dc.png)
    is a Poisson  process with jump intensity ![\lambda](img/4a42b8a415b6b944138e18b71269a40a.png)
    and the jump size itself is exponentially distributed. The random variables ![W_t,
    N_t](img/bb74d9d6f7f62360527ae50bf2908bf9.png) and ![J_t](img/97d07d8e4f632ef05d60a661bf325be8.png)
    are independent. The Monte-Carlo path simulation will be built on top of standard
    components for an OU process and a Poisson jump-diffusion process [3]. The dynamic
    programming approach can either be carried out using least squares Monte-Carlo
    *ansatz* (Longstaff Schwartz algorithm) or using finite difference methods. We
    prefer finite difference methods to avoid e.g. the problem of choosing an appropriate
    basis function set. The Feynman-Kac theorem leads to the corresponding partial
    integro differential equation (PIDE):'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这个模型由一个奥恩斯坦-乌伦贝克（OU）过程![X_t](img/bac49ad8e6c0a4d679f98639122d578f.png)，一个确定性的周期函数![\mu(t)](img/fbf2ff543464902ce67787f23dc78cd2.png)组成，用来描述季节性，还有一个均值回归过程![Y_t](img/f6195da594b33c3d1302f6dd33eaf94d.png)以及跳跃来引入尖峰。![N_t](img/c6d44fd3b9c210c1d0e71a4a31edb3dc.png)是一个泊松过程，跳跃强度为![\lambda](img/4a42b8a415b6b944138e18b71269a40a.png)，跳跃本身是指数分布。随机变量![W_t,
    N_t](img/bb74d9d6f7f62360527ae50bf2908bf9.png)和![J_t](img/97d07d8e4f632ef05d60a661bf325be8.png)是独立的。蒙特卡洛路径模拟将建立在标准OU过程和泊松跳跃扩散过程组件之上[3]。动态规划方法可以使用最小二乘蒙特卡洛*假设*（朗斯菲尔德-施瓦茨算法）或使用有限差分方法。我们更喜欢有限差分方法，以避免例如选择适当基函数集的问题。费曼-卡克定理导致相应的部分积分微分方程（PIDE）：
- en: '![\begin{array}{rcl} rV =&&\frac{\partial V}{\partial t}+\frac{\sigma^2}{2}\frac{\partial^2
    V}{\partial x^2} + \alpha(\mu(t)-x)\frac{\partial V}{\partial x}-\beta y\frac{\partial
    V}{\partial y}\\&+&\lambda \int_\mathbb{R} \left( V(x,y+z,t)-V(x,y,t)\right )\omega(z)
    dz \end{array}](img/a3a73ff1959163c672753674462aa215.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: \[ \begin{array}{rcl} rV =&&\frac{\partial V}{\partial t}+\frac{\sigma^2}{2}\frac{\partial^2
    V}{\partial x^2} + \alpha(\mu(t)-x)\frac{\partial V}{\partial x}-\beta y\frac{\partial
    V}{\partial y}\\&+&\lambda \int_\mathbb{R} \left( V(x,y+z,t)-V(x,y,t)\right )\omega(z)
    dz \end{array} \](img/a3a73ff1959163c672753674462aa215.png)
- en: A Gauss-Laguerre quadrature is appropriate to calculate the integral part of
    the PIDE. Beside this two-dimensional PIDE an additional dimension is needed to
    keep track of the already consumed exercise rights. The three-dimensional formulation
    together with Bellman’s principle of optimality transforms the global optimization
    problem into a local optimization problem.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 高斯-拉格朗日积分适用于计算PIDE的积分部分。除了这个二维PIDE，还需要一个额外的维度来跟踪已经消耗的行权。三维公式与贝尔曼最优性原理一起，将全局优化问题转化为局部优化问题。
- en: Target of the linear programming approach is the upper bound
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 线性规划方法的目标是上界。
- en: '![\text{npv} \le \mathbb{E}^\mathbb{Q}\left[ \max_{\beta} \sum_{i=1}^N \beta_i\left(P(t_i)
    - K \right) e^{rt_i}\right]](img/d3323d572751de6a4fb5675e5291b5cd.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: \[ \text{npv} \le \mathbb{E}^\mathbb{Q}\left[ \max_{\beta} \sum_{i=1}^N \beta_i\left(P(t_i)
    - K \right) e^{rt_i}\right] \](img/d3323d572751de6a4fb5675e5291b5cd.png)
- en: The linear programming algorithm will calculate the optimal exercise strategy
    ![\left\{ \beta \right\}](img/4f009d2460fee1e8452a41c85c6921d4.png) on each Monte-Carlo
    path separately (*perfect foresight*) with respect to the given constraints. For
    this basic type of swing option linear programming is sort of over-engineering
    because a simple sort algorithm will also reproduce the optimal exercise strategy.
    But introducing linear programming and mixed integer programming now will enable
    us later on to deal with more complicated time-integral constraints. Libraries
    for this task are freely available, e.g. the [GNU Linear Programming Kit](http://www.gnu.org/software/glpk/).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 线性规划算法将分别在每个蒙特卡洛路径上计算最优行权策略![\left\{ \beta \right\}](img/4f009d2460fee1e8452a41c85c6921d4.png)，以给定约束为基准（*完美预见*）。对于这种基本的摆动期权，线性规划有点过度设计，因为一个简单的排序算法也可以复制最优行权策略。但是，现在引入线性规划和小整数规划将使我们能够
    later on to deal with more complicated time-integral constraints. 用于此任务的库是免费可用的，例如[GNU线性规划套件](http://www.gnu.org/software/g
- en: The test parameterization of the model is
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 模型的测试参数化是
- en: '![\alpha=1.0, \sigma=200\%, \mu(t)=3.0,\beta=5.0, \eta=2.0, \lambda=1.0, X_0=3.0,
    Y_0=0.0](img/6b6620506cbf541f1e2da30a6ec4b724.png),'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: \[ \alpha=1.0, \sigma=200\%, \mu(t)=3.0,\beta=5.0, \eta=2.0, \lambda=1.0, X_0=3.0,
    Y_0=0.0 \](img/6b6620506cbf541f1e2da30a6ec4b724.png)，
- en: the example swing call option has maturity of one year, strike price is equal
    40, one exercise opportunity per month and the minimum number of exercise rights
    is equal to the maximum number of exercise rights, ![E_{min} = E_{max}](img/499cc638eb418659cf82efd80b3cb754.png).
    Interest rates are at ![r=10\%](img/fb7aa0e0aa181469fc7643400a87d281.png).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这个示例的摆动看涨期权到期日为一年，行权价格为40，每月有一次行权机会，最低行权次数等于最高行权次数，![E_{min} = E_{max}](img/499cc638eb418659cf82efd80b3cb754.png)。利率为![r=10\%](img/fb7aa0e0aa181469fc7643400a87d281.png)。
- en: '[![](img/7c5b650cd5158acb69c1aab71e776dbf.png "plot")](https://hpcquantlib.wordpress.com/wp-content/uploads/2011/05/plot8.png)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '![图](https://hpcquantlib.wordpress.com/wp-content/uploads/2011/05/plot8.png)'
- en: As the diagram above shows for this set-up the upper bound for the swing option
    price calculated using linear programming differs significantly from the correct
    price calculated based on dynamic programming on a lattice. For twelve exercise
    rights both algorithms have to provide the same results because the constraint
    forces to always exercise on each exercise date. Next to come is to rerun the
    simulation with a more realistic forward curve and process parameters.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 正如上面的图表所示，对于这个设置，使用线性规划计算的摆动期权价格上限与基于格子动态规划计算的正确价格有显著差异。对于十二次行权机会，两种算法必须提供相同的结果，因为约束强制在每次行权日期行使。接下来是使用更现实的远期曲线和过程参数重新运行模拟。
- en: The code is available [here](http://hpc-quantlib.de/src/simpleswing.zip). It
    depends on the [GNU Linear Programming Kit](http://www.gnu.org/software/glpk/),
    the [Boost Thread](http://www.boost.org) library for parallelization and at the
    time of writing on the latest [QuantLib](http://www.quantlib.org) version from
    the [SVN trunk](http://sourceforge.net/p/quantlib/code/HEAD/tree/). If you want
    to generate the plot directly out of the C++ program you also need [R](http://www.r-project.org/),
    [RCPP](http://cran.r-project.org/web/packages/Rcpp/index.html) and [RInside](http://cran.r-project.org/web/packages/RInside/index.html).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 代码可在此处[获得](http://hpc-quantlib.de/src/simpleswing.zip)。它依赖于[GNU线性规划套件](http://www.gnu.org/software/glpk/)，用于并行化的[Boost线程](http://www.boost.org)库，以及截至写作时最新的[QuantLib](http://www.quantlib.org)版本，来自[SVN主干](http://sourceforge.net/p/quantlib/code/HEAD/tree/)。如果你想直接从C++程序生成图表，还需要[R](http://www.r-project.org/)，[RCPP](http://cran.r-project.org/web/packages/Rcpp/index.html)和[RInside](http://cran.r-project.org/web/packages/RInside/index.html)。
- en: '[1] M. Burger, B. Graeber, G. Schindlmayr, Managing Energy Risk, ISDN 978-0-470-ß2962-6'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] M. Burger, B. Graeber, G. Schindlmayr, 管理能源风险，ISDN 978-0-470-ß2962-6'
- en: '[2] T. Kluge, [Pricing Swing Options and other Electricity Derivatives](http://eprints.maths.ox.ac.uk/246/1/kluge.pdf)'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] T. Kluge, [定价摆动期权及其他电力衍生品](http://eprints.maths.ox.ac.uk/246/1/kluge.pdf)'
- en: '[3] P. Glasserman, Monte Carlo Methods in Financial Engineering.  ISBN-0387004513'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[3] P. Glasserman, 金融工程中的蒙特卡洛方法。ISBN-0387004513'
