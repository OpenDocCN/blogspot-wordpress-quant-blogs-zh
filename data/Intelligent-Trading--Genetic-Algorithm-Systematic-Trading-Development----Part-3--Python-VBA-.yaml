- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: →yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-18 04:46:39'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-18 04:46:39
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: →
- en: 'Intelligent Trading: Genetic Algorithm Systematic Trading Development -- Part
    3 (Python/VBA)'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 智能交易：遗传算法系统交易开发——第3部分（Python/VBA）
- en: 来源：[http://intelligenttradingtech.blogspot.com/2010/02/genetic-algorithm-systematic-trading_20.html#0001-01-01](http://intelligenttradingtech.blogspot.com/2010/02/genetic-algorithm-systematic-trading_20.html#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[http://intelligenttradingtech.blogspot.com/2010/02/genetic-algorithm-systematic-trading_20.html#0001-01-01](http://intelligenttradingtech.blogspot.com/2010/02/genetic-algorithm-systematic-trading_20.html#0001-01-01)
- en: As mentioned in prior posts, it is not possible to use the standard Weka GUI
    to instantiate a Genetic Algorithm, other than for feature selection. Part of
    the reason is that there is no generic algorithm to instantiate a fitness function.
    The same flexibility that allows an infinite possible range of fitnesses also
    requires custom scripting. Although it is possible to write a custom class for
    Weka/JAVA, I chose to utilize Python for this example, along with an older VBA
    tool I developed for the back-end results summary. Hopefully, you'll see that
    there are many tools that may be utilized to prototype various systems and augment
    the development process.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 如先前的文章所述，无法使用标准的Weka GUI实例化遗传算法，除了用于特征选择。部分原因是没有通用的算法来实例化适应度函数。正是这种灵活性允许了无限可能的适应度范围，同时也需要自定义脚本。尽管可以为Weka/JAVA编写一个自定义类，但我选择在这个例子中使用Python，同时还用了一个我为后端结果总结开发的较老的VBA工具。希望你会看到有很多工具可以用来原型化各种系统并增强开发过程。
- en: 'The essential GA uses a 17 bit string length to encode the following rule:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 基本的遗传算法使用17位字符串长度来编码以下规则：
- en: '{if ma(m) binop ma(n) then buy}'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果ma(m)二进制操作ma(n)那么买入
- en: The first 8 bits are used to encode the 1st ma value. Note there are 2^n = 2^8
    = 256 potential decimal values that can be used for the parameter argument. The
    9th bit is a 2 bit encoded value of the > or < binary operator as discussed in
    prior posts. The last 8 bits are used for the 2nd moving average parameter value.
    A simple fitness of the net dollar return was used for this example (Note Sharpe
    ratio, and other fitness metrics could have been used). The input series is SPY,
    using the range from 1993-2005 daily to optimize.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 前8位用于编码第一个ma值。如先前的文章所述，有2^n=2^8=256个可能的十进制值可以用于参数论点。第9位是一个两位的二进制运算符>或<的编码值。最后8位用于第二个移动平均参数值。本例中使用简单的净美元回报作为适应度（注意夏普比率和其他适应度指标本可以被使用）。输入序列是SPY，使用1993-2005日期的数据进行优化。
- en: The python script was essentially set up to run 40 generations of a population
    of size 20 using elitism and tournament selection. Although this is by no means
    optimal (it is quite small), it was set up using these values for illustrative
    purposes. When you watch the video, what you'll see is the initial population
    in binary encoded strings each time a generation is passed. In addition, the decoded
    moving average rule is shown for each selection change. Although the video has
    been truncated for brevity, you should notice that the fitness number is improving
    each generation. The final solution was designed to halt after a fitness did not
    improve over five generations. In addition, you can see the final encoded result
    and a plot of the fitness convergence.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 该Python脚本基本上设置运行一个大小为20的种群，使用精英主义和锦标赛选择，进行40代。虽然这绝不是最优的（它相当小），但设置这些值是为了说明目的。当你看视频时，你会看到每次迭代时种群的初始二进制编码字符串。此外，每次选择变化都会显示解码的移动平均规则。虽然视频为了简洁被截断了，但你应该注意到每一代适应度数都在提高。最终解决方案设计在连续五代适应度没有提高后停止。此外，你可以看到最终的编码结果和适应度收敛的图表。
- en: <param name="movie" value="http://www.youtube.com/v/Fw8TFDKk92Q&amp;hl=en&amp;fs=1"><param
    name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"><embed
    src="http://www.youtube.com/v/Fw8TFDKk92Q&amp;hl=en&amp;fs=1" type="application/x-shockwave-flash"
    allowscriptaccess="always" allowfullscreen="true">
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 参数名称“movie”的值为“http://www.youtube.com/v/Fw8TFDKk92Q&hl=en&fs=1”（允许全屏播放的参数值已设置为true）
- en: Video 1\. Optimization of MA parameters using Python GA
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 视频1. 使用Python GA优化MA参数
- en: '[![](img/8a528cf90da5fc01e2731e82acb58832.png)](https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiFCoFr3pgfTFQxH2Qg1WYRWo8XPyASyjnrM0ahpC73qHYbJn2_vodjYoT-oA3Lzo2IsVCei7zBbdc2UpCV_w0Xsh6SI6opUEaJRHQElZcQwAyY3XJbkZAyEqqqaguVlPs8fQRU1LKXgro/s1600-h/figout1.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](img/8a528cf90da5fc01e2731e82acb58832.png)](https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiFCoFr3pgfTFQxH2Qg1WYRWo8XPyASyjnrM0ahpC73qHYbJn2_vodjYoT-oA3Lzo2IsVCei7zBbdc2UpCV_w0Xsh6SI6opUEaJRHQElZcQwAyY3XJbkZAyEqqqaguVlPs8fQRU1LKXgro/s1600-h/figout1.jpg)'
- en: Fig 1\. Final Fitness result output to console
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1. 最终适应度结果输出到控制台
- en: In fig 1\. we see that the final rule converged to {if ma(220) > ma(221)) then
    Buy.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在图 1 中，我们看到的最终规则收敛到了 {if ma(220) > ma(221) then Buy}。
- en: In addition, the final binary string is shown along with the final fitness value.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，最终的二进制字符串还显示了最终的适应度值。
- en: We can decode the binary string with relative ease.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以相对容易地解码这个二进制字符串。
- en: '[110110111110111100] is the 17 bit string representing the optimal fitness.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[110110111110111100] 是表示最优适应度的 17 位二进制字符串。'
- en: ma1 is 1st 8 bits = 11011011 = 219 decimal a +1 offset was used (so as not to
    have 0 day moving average) to get a resulting parameter argument of 220.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: ma1 是前 8 位二进制数 = 11011011 = 219 十进制。使用了 +1 的偏移量（这样就不会有 0 的移动平均值）来得到一个结果参数 220。
- en: The next bit is = 1 corresponding to >
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个位是 = 1，对应于“大于”。
- en: The final 8 bits represent the 221 argument by similar reasoning as the first.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 最后的 8 位二进制数代表了 221 参数，推理方式与第一个类似。
- en: 'So the resulting rule with parameters is:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，具有参数的结果规则是：
- en: if ma(220) > ma(221) then Buy
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 ma(220) > ma(221)，则买入。
- en: fitness = net$gain = $316.12
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: fitness = net$gain = $316.12
- en: '[![](img/cec9657bb63b463cee904083a79be225.png)](https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiLQzQTtpoi6BTvTSJ9rrzsnAe_qGWiG_2yxzKNgPnncILqSQKnmxhW55hjkoHLsQJLR2uplZmuljQiYBgRdkZp0pklA28B3FZ7ZDXVMnRfVwHX7FLiWXDJCKXAyloFZ6jGtJM5qoEHa9Y/s1600-h/figout2.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](img/cec9657bb63b463cee904083a79be225.png)](https://blogger.googleusercontent.com/img/b/'
- en: fig 2\. Fitness Convergence
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2. 适应度收敛
- en: In fig 2\. We see how the fitness continued to climb over successive generations
    until early convergence caused a halt at the fitness value that did not change
    over the prior 5 generations.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在图 2 中，我们看到了适应度是如何在连续的几代中持续上升，直到早期的收敛导致在过去的 5 代中适应度值没有变化而停止。
- en: In order to verify the results, we will also show how other tools may be used.
    In this case, I used an older VBA simulator that I wrote a few years back.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 为了验证结果，我们还将展示其他工具的使用方法。在这个案例中，我使用了一个几年前编写的较旧的 VBA 模拟器。
- en: <param name="movie" value="http://www.youtube.com/v/Q6SRTE-m13s&amp;hl=en&amp;fs=1"><param
    name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"><embed
    src="http://www.youtube.com/v/Q6SRTE-m13s&amp;hl=en&amp;fs=1" type="application/x-shockwave-flash"
    allowscriptaccess="always" allowfullscreen="true">
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: <param name="movie" value="http://www.youtube.com/v/Q6SRTE-m13s&hl=en&fs=1"><param
    name="allowFullScreen" value="true"><param name="allowscriptaccess" value="always"><embed
    src="http://www.youtube.com/v/Q6SRTE-m13s&hl=en&fs=1" type="application/x-shockwave-flash"
    allowscriptaccess="always" allowfullscreen="true">
- en: Video 2\. Summary of optimized parameters using VBA/Excel
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Video 2. 使用 VBA/Excel 优化的参数总结
- en: '[![](img/5fee365d7ad33d24d5c0a859de0bc73c.png)](https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgTmrtDbp-hdWonl0LFLbbQ1IDbIm_J1E8XxPNy8CraDdOV_cF23nQwCMML1vaoLvor8iPEGRB1gXvM8r2CVWip4ah1rldQ-Ob6EnQI_szSmwbZd_bu9gsl99En3g6PD3TDFVznv77El6Q/s1600-h/fig3summaryc.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](img/5fee365d7ad33d24d5c0a859de0bc73c.png)](https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgTmrtDbp-hdWonl0LFLbbQ1IDbIm_J1E8XxPNy8CraDdOV_cF23nQwCMML1vaoLvor8iPEGRB1gXvM8r2CVWip4ah1rldQ-Ob6EnQI_szSmwbZd_bu9gsl99En3g6PD3TDFVznv77El6Q/s1600-h/fig3summaryc.jpg)'
- en: Fig 3\. Summary of Back Test Results
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3. 回测结果总结
- en: Above is a capture of the summary statistics using the back test program. Total
    net profit is slightly higher than the python results. This is due to the fact
    that the python simulation truncated the series length of the moving average data,
    so as to avoid zero front padded values, while the excel program did not. However,
    they are still in close agreement. It's often useful to use several different
    programs to force yourself to double check results.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 上面是使用回测程序捕获的摘要统计信息。总净盈利略高于 Python 结果。这是由于 Python 模拟器截断了移动平均数据的序列长度，以避免前导零填充值，而
    Excel 程序没有。然而，它们仍然非常接近。通常，使用几种不同的程序来迫使自己再次核对结果是非常有用的。
- en: Now, as an astute commenter already pointed out... this method is indeed curve
    fitting. What we found was the best possible pair of parameters(or at least one
    of the best; there are superior parameters, but I didn't run the example generation
    set too long) for our particular rule set we set out to investigate. Or as I mentioned
    in the first thread, we zeroed in on the region of the distribution curve with
    the most profitable candidates. Now, for those of you not familiar with curve
    fitting, it is not a happy concept amongst developers. In fact, it suffers from
    almost the same egregious problems as cherry picking examples, as I mentioned
    earlier on.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，一个敏锐的评论者已经指出...这种方法确实是在曲线拟合。我们发现的是我们想要研究的特定规则集的最佳可能参数对（至少是最好的之一；有更优秀的参数，但我没有运行太长时间的例子生成集）。或者如我在第一个帖子中提到的，我们集中在分布曲线最有利于盈利候选项的区域。现在，对于那些不熟悉曲线拟合的人来说，这个概念在开发者中并不受欢迎。事实上，它几乎和我之前提到的挑例子一样，有着同样严重的弊端。
- en: That being said, however, it is not done in vain. Our goal here is to quantitatively
    augment common development (the part where you create and verify) tools beyond
    mere guessing, intuition, and cherry picking. Firstly, it is possible that this
    particular rule set will not fare as well out of sample, which is true. However,
    in the same sense that we can not just take one cherry picked example for granted,
    we must also evaluate how things actually do perform out of sample. I say this
    because I've used similar techniques that looked very good, and did indeed perform
    very well out of sample for several periods out into the future. By honing in
    on the best candidates, we help to narrow down the set of candidates that are
    worthy of out of sample investigation. There are other additional techniques (some
    mentioned earlier, such as ensemble methods, different objective/fitness functions,
    and even different optimization criteria) that can be used to enhance this method,
    and in addition, verify robustness out of sample.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这样做并非徒劳。我们在这里的目标是量化增强常见开发（即创建和验证）工具，而不仅仅是猜测、直觉和挑挑拣拣。首先，这种特定的规则集在样本外可能不会表现得那么好，这是真的。然而，同样地，我们不能仅仅因为一个挑出来的例子就轻率地断定，我们还需要评估事物在样本外的实际表现。我说这话是因为我曾经使用过一些看起来非常不错的类似技术，确实在样本外表现非常好，持续了好几个时期。通过精细挑选最佳候选项，我们有助于缩小值得进行样本外研究的候选项集合。还有其他一些额外的技术（前面提到过的一些，比如集成方法、不同的目标/适应度函数，甚至不同的优化标准）可以用来增强这种方法，并且验证样本外的鲁棒性。
- en: 'edit: Just for giggles, I decided to actually run the Out of Sample performance
    on this optimized in sample trained rule. The following chart illustrates how
    it performed ''out of sample'' for the years 2005-today(2010).'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑：为了娱乐，我决定实际运行一下这个在样本内训练后优化的规则的样本外性能。下面的图表说明了他'样本外'在2005年至今（2010年）的表现。
- en: '[![](img/48ebb4f6e2354c313f10165eab59cb61.png)](https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj4vPld0sjsu-O1xiKPMd0JkjdZR2IbwkGZ99GWtqXwpWpJkGijWSsgdmLf-AOYJZOWTh_uJwAqUX-4DRjfpwVZWOC2wtV7k1NdvI1qCMRr85aGVZwnrVNK-_4Aj9p2PUkpUbikIx_ucE4/s1600-h/training_test.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](img/48ebb4f6e2354c313f10165eab59cb61.png)](https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj4vPld0sjsu-O1xiKPMd0JkjdZR2IbwkGZ99GWtqXwpWpJkGijWSsgdmLf-AOYJZOWTh_uJwAqUX-4DRjfpwVZWOC2wtV7k1NdvI1qCMRr85aGVZwnrVNK-_4Aj9p2PUkpUbikIx_ucE4/s1600-h/training_test.jpg)'
- en: Fig 4\. Out of Sample Test Performance on optimized training rule parameters.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图4。优化训练规则参数的样本外测试性能。
- en: Not all that shabby for that curve fitted simple system during the worst meltdown
    in recent history, eh (much easier on the gut)?
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个在近期历史上最糟糕的崩盘期间进行曲线拟合的简单系统来说，表现不算太差，对吧（对心灵来说要容易得多）？
- en: To be frank, I have run so many evaluations on simple SMA systems, that I would
    say that they are not the most superior parameters to optimize around. Obviously,
    however, it really depends on what your objective is. There are some long term
    studies that have shown using the fitness objective of reduced volatility as the
    goal is quite beneficial with this simple rule set (you can verify that this simple
    system had far less volatility over the down periods, than the actual market--
    in and out of sample) . It is up to you to find those parameters that are worthy
    of optimizing further. See
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 坦白说，我对简单的SMA系统进行了如此多的评估，以至于我认为它们并不是最值得优化的参数。显然，这真的取决于你的目标。有一些长期的研究表明，使用减少波动性的适应度目标作为这种简单规则集的目标是非常有益的（你可以验证，这个简单的系统在熊市期间比实际市场——样本内和样本外——的波动性要小得多）。找到那些值得进一步优化的参数取决于你自己。见
- en: '[commentary on A Quantitative Approach to Tactical Asset Allocation](http://blog.fosstrading.com/2010/02/updated-tactical-asset-allocation.html)'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '[《战术资产配置的量化方法》评论](http://blog.fosstrading.com/2010/02/updated-tactical-asset-allocation.html)'
- en: for a related example.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 作为相关示例。
- en: As always, please do your own due diligence before making any trading decisions.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如往常一样，在做出任何交易决策之前，请务必做好自己的尽职调查。
- en: And please continue to give your feedback on what you like or don't like and
    areas you want to explore.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 请继续向我们反馈你喜欢或不喜欢的部分以及你想要探索的领域。
- en: '---------------------------------------------------------------------------------'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '---------------------------------------------------------------------------------'
- en: 'If you are new to Python and would like to order a fantastic textbook, I highly
    recommend the following (applications geared a bit towards science and engineering):'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你刚接触Python并且想订购一本出色的教科书，我强烈推荐以下这本（应用方向稍偏向科学和工程）：
- en: '[A Primer on Scientific Programming with Python](http://www.amazon.com/Scientific-Programming-Computational-Science-Engineering/dp/3642024742/ref=sr_1_26?ie=UTF8&s=books&qid=1266694073&sr=8-26)
    [![](img/d7c663739d1cf49a99eb159f3cd5ad3c.png)](https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgbuSOutut7UL6Y3q4Bxhvs9sof5DoY020Z8KiIJsCnHpXRuRrZklXYQfJKCuH_TEJpU5VPgohqqOZ1n22Z0UiXOjHPz4-2J2f91T4LcJIRwLdK8q3ILkdJLpxmWfFj0bjhQMCtqeNSKxE/s1600-h/pythonad.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '[Python科学编程入门](http://www.amazon.com/Scientific-Programming-Computational-Science-Engineering/dp/3642024742/ref=sr_1_26?ie=UTF8&s=books&qid=1266694073&sr=8-26)
    ![](img/d7c663739d1cf49a99eb159f3cd5ad3c.png) [链接](https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgbuSOutut7UL6Y3q4Bxhvs9sof5DoY020Z8KiIJsCnHpXRuRrZklXYQfJKCuH_TEJpU5VPgohqqOZ1n22Z0UiXOjHPz4-2J2f91T4LcJIRwLdK8q3ILkdJLpxmWfFj0bjhQMCtqeNSKxE/s1600-h/pythonad.jpg)'
- en: 'In addition, users who are interested in learning a bit more about VBA with
    a Financial Oriented slant will find great practical examples in the text:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，对学习更多关于VBA并且偏向金融方向的读者会在书中找到很好的实践示例：
- en: '[Financial Modeling, 3rd Edition](http://www.amazon.com/Financial-Modeling-3rd-Simon-Benninga/dp/0262026287/ref=sr_1_1?ie=UTF8&s=books&qid=1266694665&sr=1-1)
    [![](img/d9a70b41253e9b1a75c1f96bf9a94ecd.png)](https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjXH-pisfW312Ck27Z04lequdoNSbAC7VqecTAk16LmLSyfJVV3sn1_JTQlwmgt0EZUK1dKPpvPqQ-ZBGWchS4sWjsKyYZwpJzdBk3ZZer8nKYYxf_BDU-AW2BzimJJWFDDGFC3wUqmS5I/s1600-h/finanialmodellingad.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '[《金融建模，第三版》](http://www.amazon.com/Financial-Modeling-3rd-Simon-Benninga/dp/0262026287/ref=sr_1_1?ie=UTF8&s=books&qid=1266694665&sr=1-1)
    ![](img/d9a70b41253e9b1a75c1f96bf9a94ecd.png) [链接](https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjXH-pisfW312Ck27Z04lequdoNSbAC7VqecTAk16LmLSyfJVV3sn1_JTQlwmgt0EZUK1dKPpvPqQ-ZBGWchS4sWjsKyYZwpJzdBk3ZZer8nKYYxf_BDU-AW2BzimJJWFDDGFC3wUqmS5I/s1600-h/finanialmodellingad.jpg)'
