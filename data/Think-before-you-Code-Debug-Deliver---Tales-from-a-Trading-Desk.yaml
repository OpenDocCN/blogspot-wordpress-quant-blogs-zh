- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-18 06:36:23'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-18 06:36:23
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Think before you Code/Debug/Deliver | Tales from a Trading Desk
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在编码/调试/交付之前要三思 | 交易台故事
- en: 来源：[https://mdavey.wordpress.com/2012/08/16/think-before-you-codedebugdeliver/#0001-01-01](https://mdavey.wordpress.com/2012/08/16/think-before-you-codedebugdeliver/#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://mdavey.wordpress.com/2012/08/16/think-before-you-codedebugdeliver/#0001-01-01](https://mdavey.wordpress.com/2012/08/16/think-before-you-codedebugdeliver/#0001-01-01)
- en: Think before you Code/Debug/Deliver
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在编码/调试/交付之前要三思
- en: Rob Pike’s “The Best Programming [advice](http://www.informit.com/articles/article.aspx?p=1941206)
    I Ever Got” is spot on in terms of thinking.  However, its not just specific to
    writing code 🙂  I think the real key piece of advice for anyone working as part
    of a team delivering a software solution to the “business” is to ensure they think
    before they undertake the task they have picked up from the [kanban](http://en.wikipedia.org/wiki/Kanban_board)
    board.  Likewise, when they hit a perceived problem, thought should be applied
    to ensure that they are thinking about a problem which will aid in delivery of
    the software application, and not a problem that has occurred because the individual
    has side tracked down an alley because its slightly more interesting that the
    actual task they are suppose to be working on.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Rob Pike的“我得到过的最好的编程[建议](http://www.informit.com/articles/article.aspx?p=1941206)”在思考方面非常准确。然而，这并不仅限于编写代码：）我认为，对于任何作为团队一部分向“业务”交付软件解决方案的人来说，真正的关键建议是确保他们在接受看板（[kanban](http://en.wikipedia.org/wiki/Kanban_board)）板上的任务之前进行思考。同样，当他们遇到一个
    perceived 问题时，应该应用思考，以确保他们关注的是将有助于软件应用程序交付的问题，而不是因为个人分心而进入小巷，因为这比他们实际要做的任务更有趣。
- en: Another areas that “thinking” could be applied more, is in how the story (agile)
    deliverable will be used by the rest of the team in the delivery of the solution. 
    So often individualw within an agile team work using a silo approach (yes, I know
    its a contradiction to agile) even though they are part of an “agile” team, with
    little thought to the “pain” they might incur on other team members post delivery
    of their story – be it code, backlogs, stories, UX, etc.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个可以更多应用“思考”的领域是，故事（敏捷）可交付成果如何被团队中的其他人用于交付解决方案。在敏捷团队中，个体经常使用孤岛式方法（是的，我知道这与敏捷相矛盾）工作，即使他们是“敏捷”团队的一部分，也很少考虑到在交付他们的故事（无论是代码、待办事项、故事、UX等）后可能会给其他团队成员带来的“痛苦”。
- en: Maybe to aid “thinking” we need the equivalent of the “Green [Cross](http://talesoftheroad.direct.gov.uk/stop-look-listen.php)
    Code” for software development?
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 也许为了帮助“思考”，我们需要软件开发中的“绿灯[过马路](http://talesoftheroad.direct.gov.uk/stop-look-listen.php)”信号？
- en: ~ by mdavey on August 16, 2012.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: ~ mdavey于2012年8月16日。
- en: Posted in [Agile](https://mdavey.wordpress.com/category/agile/)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 发表于[敏捷](https://mdavey.wordpress.com/category/agile/)
