- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-18 06:47:57'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '日期: 2024-05-18 06:47:57'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'HOXO-M - anonymous data analyst group in Japan - : The complete catalog of
    argument variations of select() in dplyr'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HOXO-M - 日本匿名数据分析师团队 -：dplyr中select()函数的完整参数目录
- en: 来源：[http://mockquant.blogspot.com/2015/07/the-complete-catalog-of-argument.html#0001-01-01](http://mockquant.blogspot.com/2015/07/the-complete-catalog-of-argument.html#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[http://mockquant.blogspot.com/2015/07/the-complete-catalog-of-argument.html#0001-01-01](http://mockquant.blogspot.com/2015/07/the-complete-catalog-of-argument.html#0001-01-01)
- en: When I read the [dplyr vignette](https://cran.rstudio.com/web/packages/dplyr/vignettes/introduction.html),
    I found a convenient way to select sequential columns such as `select(data, year:day)`.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 当我阅读[dplyr介绍文档](https://cran.rstudio.com/web/packages/dplyr/vignettes/introduction.html)时，我发现了一种便利的选择连续列的方式，比如`select(data,
    year:day)`。
- en: Because I had inputted only column names to `select()` function, I was deeply
    affected by the convenient way.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我只向`select()`函数输入列名，所以深受这种便利方式的影响。
- en: On closer inspection, I found that the `select()` function accepts many types
    of input.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 仔细观察后，我发现`select()`函数接受多种类型的输入。
- en: Here, I will enumerate the variety of acceptable inputs for `select()` function.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我将列举`select()`函数的可接受输入的各种类型。
- en: By the way, these column selection methods also can use in the `summarise_each()`,
    `mutate_each()` and some functions in **tidyr** package(e.g. `gather()`).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 顺便一提，这些列选择方法也可以在**tidyr**包中的一些函数（例如`gather()`）以及`summarise_each()`、`mutate_each()`中使用。
- en: 1\. Whole codes.
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1\. 全部代码。
- en: At first, whole codes were shown for perspicuity.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，为了明晰起见，展示了全部代码。
- en: In the sections below, the details of each command were shown.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的章节中，展示了每个命令的细节。
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 2\. Data preparation.
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2\. 数据准备。
- en: To follow the [dplyr vignette](https://cran.rstudio.com/web/packages/dplyr/vignettes/introduction.html),
    `flights` data set in **nycflights13** package were used as an example.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 要按照[dplyr介绍文档](https://cran.rstudio.com/web/packages/dplyr/vignettes/introduction.html)，我们以**nycflights13**包中的`flights`数据集作为示例。
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This data set includes the 16 columns shown above.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这个数据集包括上面展示的16列。
- en: 3\. Basic method of use select().
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3\. select()的基本使用方法。
- en: At first, the ways of using `select()` were shown.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，展示了使用`select()`的方式。
- en: '[PRE3]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This process shows the way to take the `year` column out of data. To pick multiple
    columns, you can write the following.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程展示了将`year`列从数据中取出的方法。要选择多个列，可以写以下内容。
- en: '[PRE5]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: If columns were sequential in the dataset, you could write the following to
    pick sequential columns.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在数据集中列是连续的，你可以写以下内容来选择连续的列。
- en: '[PRE7]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: If you want to remove a specific column, add `-` in the head of the column name
    as follows.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要去除特定的列，可以在列名前添加`-`，如下所示。
- en: '[PRE9]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: To remove sequential columns, put sequential columns in brackets `()` connected
    with a colon.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 要去除连续的列，将连续的列放在用冒号连接的括号`()`中。
- en: '[PRE11]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: It is also possible to pick columns by choosing the column number.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以通过选择列号选取列。
- en: '[PRE13]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Next topics are slightly advanced.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 下一主题稍微有些深入。
- en: It is possible to pick sequential columns temporarily and remove some of these.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 可以暂时选出连续的列并去除其中的一部分。
- en: '[PRE15]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: It is also possible to remove sequential columns and keep a part of these.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以去除连续的列然后保留其中的一部分。
- en: '[PRE17]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Even using a column number can give the same result with the column name. (The
    results are omitted.)
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 即使使用列编号，也可以用列名得到相同的结果。（结果已被省略。）
- en: '[PRE19]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 4\. Utility functions of select().
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4\. select()的实用函数。
- en: Utility functions existing in `select()`, `summarise_each()` and `mutate_each()`
    in **dplyr** as well as some functions in the **tidyr** package.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '`select()`、`summarise_each()`和`mutate_each()`中存在的实用函数，以及**tidyr**包中的一些函数。'
- en: Seven functions existed in the utility functions of `select()`.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '`select()`的实用函数中存在七种函数。'
- en: '`starts_with(match, ignore.case = TRUE)`'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`starts_with(match, ignore.case = TRUE)`'
- en: '`ends_with(match, ignore.case = TRUE)`'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ends_with(match, ignore.case = TRUE)`'
- en: '`contains(match, ignore.case = TRUE)`'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`contains(match, ignore.case = TRUE)`'
- en: '`matches(match, ignore.case = TRUE)`'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`matches(match, ignore.case = TRUE)`'
- en: '`num_range(prefix, range, width = NULL)`'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`num_range(prefix, range, width = NULL)`'
- en: '`one_of(...)`'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`one_of(...)`'
- en: '`everything()`'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`everything()`'
- en: We now check the respective commands and how to use them.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来检查各个命令及其使用方法。
- en: First, `starts_with()` picks columns whose name starts with the specified string.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，`starts_with()`选择以指定字符串开头的列。
- en: '[PRE20]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The argument `ignore.case` specifies whether the lowercase is classified as
    a capital letter(default is `TRUE`).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 参数`ignore.case`指定小写字母是否被分类为大写字母（默认为`TRUE`）。
- en: The `ends_with()` picks columns whose name ends with the specified string .
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '`ends_with()`选择以指定字符串结尾的列。'
- en: '[PRE22]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: The `contains()` picks columns whose name contains the specified string.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '`contains()`选择包含指定字符串的列。'
- en: '[PRE24]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: The `matches()` picks columns based on a regular expression matching string.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '`matches()`基于正则表达式匹配的字符串选择列。'
- en: '[PRE26]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: When the numbers were included in column names, `num_range()` might be useful.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 当列名中包含数字时，`num_range()`可能会很有用。
- en: In this example, we change the column names to be `x1`-`x16` and execute `num_range()`
    command for the data set.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在本例中，我们将列名称更改为`x1`-`x16`，并对数据集执行`num_range()`命令。
- en: '[PRE28]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: By specifying as `num_range("x", 8:11)`, columns `x8` to `x11` can be identified.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 通过`num_range("x", 8:11)`指定，可以识别出`x8`到`x11`列。
- en: Numbers in the column name are not necessarily sequential.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 列名中的数字不一定是连续的。
- en: '[PRE30]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: When column names were padded, the column name was shown as `x01`.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 当列名被填充时，列名会显示为`x01`。
- en: Here, the argument `width` in `num_range()` might be useful.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`num_range()`中的`width`参数可能很有用。
- en: We now try this process for a data that changes the column names as `x01`-`x16`.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们尝试用列名称更改为`x01`-`x16`的数据进行这个过程。
- en: '[PRE32]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: By specifying as `width=2`, the zero filled columns can be picked out.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 通过指定`width=2`，可以选择出填充为零的列。
- en: When a column is named as a vector or character string, `one_of()` might be
    useful.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 当列名被命名为向量或字符字符串时，`one_of()`可能会有用。
- en: An error occurs in the following case with `select()`.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下情况下，使用`select()`会出现错误。
- en: '[PRE34]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '[PRE35]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: However, an intended process occurs in the case of `one_of()`.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，在使用`one_of()`时会出现意外情况。
- en: '[PRE36]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[PRE37]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: The `everything()` selects all columns. (Result was omitted.)
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '`everything()`选择所有列。（结果被省略）'
- en: '[PRE38]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: If add `-` is in the head of a utility function name, we can pick out all except
    for the area specified in the utility function.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在实用函数名字开头加上`-`，我们可以选择除实用函数指定区域外的所有内容。
- en: '[PRE39]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[PRE40]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 5\. Standard evaluation.
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5\. 标准评估。
- en: Thus far, we explained the normal `select()` function; however, the normal `select()`
    function cannot handle character strings as arguments.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们解释了一般的`select()`函数；但是，一般的`select()`函数无法处理字符字符串作为参数。
- en: This might become a problem when column names are given as a string vector for
    example.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 当例如将列名给定为字符串向量时，这可能会成为一个问题。
- en: 'To solve this problem, the `select_()` function was equipped in **dplyr**.
    (Caution: An underscore was added in the function name.)'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题，**dplyr**中装备了`select_()`函数。（注意：在函数名中添加了下划线。）
- en: The use of the `select_()` function is the same as the `select()` except specifying
    columns by string; however, attention is needed when specifying a column name
    by a vector.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '`select_()`函数的使用方式与`select()`相同，只是通过字符串指定列；但是，在通过向量指定列名时需要注意。'
- en: '[PRE41]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[PRE42]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: When specifying column names by a vector, the vector should be given the `.dot`
    argument.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 当通过向量指定列名时，应该给向量提供`.dot`参数。
- en: '[PRE43]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[PRE44]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: All arguments that can use the `select()` function are also possible candidates
    for the `select_()` function.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 所有能够使用`select()`函数的参数也都可以成为`select_()`函数的潜在候选。
- en: '[PRE45]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Furthermore, also in this case, the argument vector should be given the `.dot`
    argument in the `select_()` function.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，即使在这种情况下，也应该在`select_()`函数中给参数向量提供`.dot`参数。
- en: '[PRE46]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 6\. References.
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6\. 参考资料。
- en: Introduction to dplyr
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: dplyr介绍
- en: '[https://cran.rstudio.com/web/packages/dplyr/vignettes/introduction.html](https://cran.rstudio.com/web/packages/dplyr/vignettes/introduction.html)'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://cran.rstudio.com/web/packages/dplyr/vignettes/introduction.html](https://cran.rstudio.com/web/packages/dplyr/vignettes/introduction.html)'
- en: Help page for `select()` function
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '`select()`函数的帮助页面'
- en: '`> help("select", package = "dplyr")`'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '`> help("select", package = "dplyr")`'
- en: Original entry in Japanese by hoxo_m
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 原始日语输入者为hoxo_m
- en: '[https://qiita.com/hoxo_m/items/f2f1793c6f086d381340](https://qiita.com/hoxo_m/items/f2f1793c6f086d381340)'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://qiita.com/hoxo_m/items/f2f1793c6f086d381340](https://qiita.com/hoxo_m/items/f2f1793c6f086d381340)'
- en: Translated by siero
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 译者：siero
