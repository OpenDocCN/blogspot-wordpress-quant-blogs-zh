- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-18 05:31:59'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-18 05:31:59
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: ModelFactory – Inference Model | Tales from a Trading Desk
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模型工厂 – 推理模型 | 交易桌面故事
- en: 来源：[https://mdavey.wordpress.com/2016/05/17/modelfactory-inference-model/#0001-01-01](https://mdavey.wordpress.com/2016/05/17/modelfactory-inference-model/#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://mdavey.wordpress.com/2016/05/17/modelfactory-inference-model/#0001-01-01](https://mdavey.wordpress.com/2016/05/17/modelfactory-inference-model/#0001-01-01)
- en: ModelFactory – Inference Model
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模型工厂 – 推理模型
- en: '[ModelFactory](https://jena.apache.org/documentation/notes/model-factory.html)
    is the on stop shop for creating Model’s in Apache Jena.  ModelFactory is also
    the way to create Inference models, which offer different kinds of inference over
    RDF-based models (used for RDFS and OWL) – through reasoners.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[模型工厂](https://jena.apache.org/documentation/notes/model-factory.html)是创建Apache
    Jena中模型的一站式商店。模型工厂也是创建推理模型的途径，这些模型通过推理器为基于RDF的模型（用于RDFS和OWL）提供不同类型的推理。'
- en: One interesting example can be seen here on [stackoverflow](http://stackoverflow.com/questions/25055263/how-to-get-only-inferred-data-from-jena-ontology-model).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 一个有趣的例子可以在这里[stackoverflow](http://stackoverflow.com/questions/25055263/how-to-get-only-inferred-data-from-jena-ontology-model)上看到。
- en: Which does lead back to section 2 and the OpenTox [article](http://opentox.org/data/documents/development/RDF%20files/JavaOnly/query-reasoning-with-jena-and-sparql).
     Its a shame the article doesn’t go further to show effectively a SPARQL made
    against a D2RQ data source, but prior to the D2RQ data source being queried, a
    Reasoner is leveraged to effectively enhance the SPARQL.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这又回到了第2节和OpenTox的[文章](http://opentox.org/data/documents/development/RDF%20files/JavaOnly/query-reasoning-with-jena-and-sparql)。遗憾的是，文章没有进一步有效地展示针对D2RQ数据源的SPARQL，但在查询D2RQ数据源之前，利用推理器有效地增强了SPARQL。
- en: Finally, probably worth having a look at these [samples](https://www.google.co.uk/url?sa=t&rct=j&q=&esrc=s&source=web&cd=2&cad=rja&uact=8&ved=0ahUKEwjK9dDBzeDMAhVmOMAKHRNtABgQFggjMAE&url=http%3A%2F%2Finfo.slis.indiana.edu%2F~dingying%2FTeaching%2FZ636%2FSlides%2FJenaExample.ppt&usg=AFQjCNEsWI18VrDHhP5mjTN2fG71yMAcgw&sig2=QVvUNXFYBbvFWFCXu9-0Gg&bvm=bv.122129774,d.ZGg)
    around Family Tree.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，可能值得查看一下这些关于家族树的[样本](https://www.google.co.uk/url?sa=t&rct=j&q=&esrc=s&source=web&cd=2&cad=rja&uact=8&ved=0ahUKEwjK9dDBzeDMAhVmOMAKHRNtABgQFggjMAE&url=http%3A%2F%2Finfo.slis.indiana.edu%2F~dingying%2FTeaching%2FZ636%2FSlides%2FJenaExample.ppt&usg=AFQjCNEsWI18VrDHhP5mjTN2fG71yMAcgw&sig2=QVvUNXFYBbvFWFCXu9-0Gg&bvm=bv.122129774,d.ZGg)。
- en: ~ by mdavey on May 17, 2016.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: ~ mdavey于2016年5月17日
- en: Posted in [Data](https://mdavey.wordpress.com/category/data/)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 发布在[数据](https://mdavey.wordpress.com/category/data/)分类中
- en: 'Tags: [Ontology](https://mdavey.wordpress.com/tag/ontology/)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 标签：[本体](https://mdavey.wordpress.com/tag/ontology/)
