- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-18 14:49:45'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-18 14:49:45
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Timely Portfolio: Extracting Heatmap'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 及时投资组合：提取热图
- en: 来源：[http://timelyportfolio.blogspot.com/2015/03/extracting-heatmap.html#0001-01-01](http://timelyportfolio.blogspot.com/2015/03/extracting-heatmap.html#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[http://timelyportfolio.blogspot.com/2015/03/extracting-heatmap.html#0001-01-01](http://timelyportfolio.blogspot.com/2015/03/extracting-heatmap.html#0001-01-01)
- en: Inspired by this tweet, I wanted to try to do something similar in JavaScript.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 受此推文的启发，我想尝试在JavaScript中做类似的事情。
- en: Fortunately, I had this old post [Chart from R + Color from Javascript](http://timelyportfolio.blogspot.com/2014/07/chart-from-r-color-from-javascript.html)
    to serve as a reference, and I got lots of help from these links.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，我找到了这篇旧帖子[R图表+JavaScript颜色](http://timelyportfolio.blogspot.com/2014/07/chart-from-r-color-from-javascript.html)作为参考，并且从这些链接中得到了很多帮助。
- en: In a couple of hours, I got this crude but working [rendering](http://timelyportfolio.github.io/rCharts_color_thief/index_jsfeat.html)
    complete with a d3.js brush to get the scale.  Then since this is sort of a finance
    blog, I imagined we found an old correlation heatmap like the one in [Pretty Correlation
    Map of PIMCO Funds](http://timelyportfolio.blogspot.com/2012/06/pretty-correlation-map-of-pimco-funds.html). 
    Although, we could guess at the correlation values, I thought it would be a lot
    more fun to get live values.  Try it out below.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在几小时内，我完成了这个粗糙但可用的[渲染](http://timelyportfolio.github.io/rCharts_color_thief/index_jsfeat.html)，其中包括d3.js刷子来获取缩放。然后，由于这是一个金融博客，我想我们找到了一个旧的相关性热图，就像在[PIMCO基金的美好相关性地图](http://timelyportfolio.blogspot.com/2012/06/pretty-correlation-map-of-pimco-funds.html)中一样。尽管我们可以猜测相关性值，但我认为获取实时值会更有趣。试试下面的功能。
- en: Brush over the scale / legend
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在缩放/图例上刷
- en: Input scale min and max
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入缩放最小值和最大值
- en: Mouseover color areas in the chart
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在图表中的颜色区域悬停
- en: As I said, it is rough, but it works. It needs a little UI work :)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如我所说，这很粗糙，但能工作。它需要一点UI工作:)
