- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-12 19:32:55'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-12 19:32:55'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Hardcore Windows debugging | Coding the markets
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hardcore Windows debugging | Coding the markets
- en: 来源：[https://etrading.wordpress.com/2014/05/10/hardcore-windows-debugging/#0001-01-01](https://etrading.wordpress.com/2014/05/10/hardcore-windows-debugging/#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://etrading.wordpress.com/2014/05/10/hardcore-windows-debugging/#0001-01-01](https://etrading.wordpress.com/2014/05/10/hardcore-windows-debugging/#0001-01-01)
- en: Hardcore Windows debugging
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Hardcore Windows debugging
- en: May 10, 2014
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2014年5月10日
- en: 'I’ve been getting into [windbg](http://msdn.microsoft.com/en-gb/library/windows/hardware/ff551063%28v=vs.85%29.aspx)
    while working on my [POC](https://etrading.wordpress.com/2014/02/16/poc-m1-running/).
    I’ve long been a fan of Microsoft’s Visual Studio debugger. Even back in the late
    90s, when I got a serious case of Open Source Religion after falling under the
    spell of Eric Raymond’s Cathedral and the Bazaar, and went through an anti Microsoft
    phase, I never stopped rating the debugger. Visual Studio debugger is great, but
    windbg is a whole ‘nother thing. It’s the debugger MS use themselves for debugging
    Windows. Yes, the interface is a little clunky compared to the VS debugger, but
    the power of the command set more than compensates. It’s got it’s own scripting
    system built in, so you can construct custom breakpoints: for instance, break
    the 5th time round the loop when this int is greater than 100\. And it has an
    API too, so the debug engine can be driven from [other languages like Python](http://pydbgeng.sourceforge.net/).
    Personally, I’m really enjoying discovering the power of windbg. While I do so
    I’m capturing tips and tricks [here](https://etrading.wordpress.com/windbg/ "windbg").'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的[POC](https://etrading.wordpress.com/2014/02/16/poc-m1-running/)项目中，我开始使用[windbg](http://msdn.microsoft.com/en-gb/library/windows/hardware/ff551063%28v=vs.85%29.aspx)。我一直是Microsoft的Visual
    Studio调试器的粉丝。甚至在90年代末，当我深受Eric Raymond的《大教堂与市集》的催眠，陷入反微软阶段时，我也从未停止对调试器的评价。Visual
    Studio调试器非常出色，但windbg却是另一种东西。这是微软自己用来调试Windows的调试器。是的，与VS调试器相比，界面有点臃肿，但命令集的强大超乎想象。它内置了自己的脚本系统，因此你可以构建自定义断点：例如，当这个整数大于100时第5次进入循环时中断。它还有一个API，因此调试引擎可以从[Python等其他语言](http://pydbgeng.sourceforge.net/)进行操作。就我个人而言，我非常喜欢发现windbg的强大之处。在我这么做的同时，我在[这里](https://etrading.wordpress.com/windbg/
    "windbg")记录了一些提示和技巧。
