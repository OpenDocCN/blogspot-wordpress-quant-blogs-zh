- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-12 19:44:18'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-12 19:44:18
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: The Resolver | Coding the markets
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解决者 | 编写市场代码
- en: 来源：[https://etrading.wordpress.com/2008/02/01/the-resolver/#0001-01-01](https://etrading.wordpress.com/2008/02/01/the-resolver/#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://etrading.wordpress.com/2008/02/01/the-resolver/#0001-01-01](https://etrading.wordpress.com/2008/02/01/the-resolver/#0001-01-01)
- en: The Resolver
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决者
- en: February 1, 2008
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2008年2月1日
- en: 'So I’ve had a little play with [Resolver One](http://www.resolversystems.com/),
    now that it’s out of beta and at 1.0\. To give a somewhat simplistic view, it’s
    an Excel clone implemented in IronPython. Where it scores big over Excel is in
    exposing its internals, specifically the calc model and worksheet in one seamless
    view. In Excel, we have several different APIs for injecting our own logic into
    a spreadsheet: Excel’s own internal C API for coding XLLs, VBA and COM. Those
    APIs allow us to express worksheet functionality in C, VB and any COM language.
    Resolver gives us one seamless view of its internals in our favourite programming
    language: Python. Simple example [here](http://www.resolversystems.com/documentation/index.php/The_Auto-Total).'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我对[Resolver One](http://www.resolversystems.com/)小试了一下，现在它已经完成了测试版，发布了1.0版本。为了提供一个稍微简单的看法，它是一个用IronPython实现的Excel克隆。它在暴露其内部结构方面超过Excel的是，它将计算模型和工作表以一种无缝的方式展示出来。在Excel中，我们有几种不同的API可以将我们自己的逻辑注入到电子表格中：Excel自身的内部C
    API用于编写XLLs，VBA和COM。这些API允许我们用C、VB和任何COM语言表达工作表功能。Resolver以其内部结构在我们最喜欢的编程语言Python中提供了一个无缝的视图给我们。简单的例子[在此](http://www.resolversystems.com/documentation/index.php/The_Auto-Total)。
- en: This is attractive for those of us already using Python for front office systems.
    I’m not sure how much it will appeal to others though…
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这对于那些已经使用Python进行前端系统的人来说是有吸引力的。我不确定它对其他人会有多大的吸引力……
