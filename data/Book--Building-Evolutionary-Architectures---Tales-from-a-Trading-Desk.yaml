- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-18 05:27:09'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024年05月18日 05:27:09
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Book: Building Evolutionary Architectures | Tales from a Trading Desk'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 书名：构建演进式架构 | 交易台的故事
- en: 来源：[https://mdavey.wordpress.com/2018/05/28/book-building-evolutionary-architectures/#0001-01-01](https://mdavey.wordpress.com/2018/05/28/book-building-evolutionary-architectures/#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://mdavey.wordpress.com/2018/05/28/book-building-evolutionary-architectures/#0001-01-01](https://mdavey.wordpress.com/2018/05/28/book-building-evolutionary-architectures/#0001-01-01)
- en: 'Book: Building Evolutionary Architectures'
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 书名：构建演进式架构
- en: Had this [book](https://www.thoughtworks.com/books/building-evolutionary-architectures)
    for some time, just took a while to write up my notes 🙂
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有这本[书](https://www.thoughtworks.com/books/building-evolutionary-architectures)已经有一段时间了，只是花了一些时间写我的笔记
    🙂
- en: Page 7, Fitness Functions – objective function used to summarise how close a
    prospective design solution is to achieving the set aims
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第7页，适应性函数 - 用于总结潜在设计解决方案与实现设定目标的接近程度的客观函数
- en: Page 12, structure of teams around service boundaries.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第12页，围绕服务边界的团队结构。
- en: Page 35, QA in Production.  I’ve used this over the last n years, to great effect
    🙂
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第35页，生产环境中的质量保证。我过去几年一直在使用这个方法，效果非常好 🙂
- en: Page 36, Chaos Monkey, Simian Army, and [Conformity Monkey](https://github.com/Netflix/SimianArmy/wiki/Conformity-Home). 
    Design with Chaos Monkey in mind to ensure architectures have resilience built
    in from day 1 🙂  Conformity Monkey checks services to ensure they follow architect-defined
    best practices.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第36页，混沌猴，猴群，和[一致性猴](https://github.com/Netflix/SimianArmy/wiki/Conformity-Home)。设计时要考虑混沌猴，以确保架构从一开始就具有韧性
    🙂 一致性猴检查服务以确保它们遵循由架构定义的最佳实践。
- en: Hypothesis [driven](https://medium.theuxblog.com/hypotheses-driven-ux-design-c75fbf3ce7cc)
    UX design
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 假设[驱动](https://medium.theuxblog.com/hypotheses-driven-ux-design-c75fbf3ce7cc)用户体验设计
- en: Page 48, Domain-Driven Design.  Forget the unified class across all services
    concept.  Allow each service to define their own, and reconcile differences at
    integration points (bounded context)
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第48页，领域驱动设计。忘记跨所有服务的统一类概念。允许每个服务定义自己的类，并在集成点（有界上下文）上协调差异。
- en: Page 96, Use Deployment Pipelines to Automate Fitness Functions.  Cycle Time
    is the measure of engineering efficiency.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第96页，使用部署管道自动化适应性函数。循环时间是衡量工程效率的标准。
- en: Page 98, the biggest single common impediment to building evolutionary architecture
    is intractable operations.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第98页，构建演进式架构的最大单一常见障碍是棘手的运维问题。
- en: Page 128, Anti-pattern – Code Reuse Abuse
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第128页，反模式 - 代码重用滥用
- en: Page 131, Pitfall – Resume-Driven Development.  We’ll all seen this one
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第131页，陷阱 - 简历驱动开发。我们都见过这种情况
- en: Page 133, Forced [Decoupling](https://www.infoq.com/news/2014/11/gotober-wunderlist-microservices)
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第133页，强制[解耦](https://www.infoq.com/news/2014/11/gotober-wunderlist-microservices)
- en: 'Page 133, Goldilocks Governance model – pick three technology stacks for standardisation:
    Simple, intermediate and complex.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第133页，金发姑娘治理模型 - 选择三种技术堆栈进行标准化：简单，中级和复杂。
- en: Page 144, Product over project 🙂  Like this concept a lot 🙂
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第144页，产品优于项目 🙂 很喜欢这个概念 🙂
- en: Page 154, Testing.  Obvious, but constantly needs to be re-iterated 😦
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第154页，测试。显而易见，但经常需要重申 😦
- en: Great book.  Sensible length.  Easy to consume 🙂
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 很棒的书。长度合理。易于消化 🙂
- en: ~ by mdavey on May 28, 2018.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 作者mdavey，于2018年5月28日发布。
- en: Posted in [Agile](https://mdavey.wordpress.com/category/agile/), [Languages](https://mdavey.wordpress.com/category/languages/)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 发表在[敏捷](https://mdavey.wordpress.com/category/agile/)，[语言](https://mdavey.wordpress.com/category/languages/)类别下
