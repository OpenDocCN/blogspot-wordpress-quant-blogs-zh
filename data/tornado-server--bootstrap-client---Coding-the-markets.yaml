- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-12 19:32:22'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-12 19:32:22
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: tornado server, bootstrap client | Coding the markets
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: tornado服务器，Bootstrap客户端 | 编码市场
- en: 来源：[https://etrading.wordpress.com/2014/10/07/tornado-server-bootstrap-client/#0001-01-01](https://etrading.wordpress.com/2014/10/07/tornado-server-bootstrap-client/#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://etrading.wordpress.com/2014/10/07/tornado-server-bootstrap-client/#0001-01-01](https://etrading.wordpress.com/2014/10/07/tornado-server-bootstrap-client/#0001-01-01)
- en: tornado server, bootstrap client
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: tornado服务器，bootstrap客户端
- en: October 7, 2014
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2024年5月12日
- en: 'Back in April I [posted on my use of tornado](https://etrading.wordpress.com/2014/04/26/tornado-websockets/)
    for real time push up to a browser client using [websockets](http://en.wikipedia.org/wiki/WebSocket).
    Then I was building a proof of concept. I’ve come a lot further since; I’m now
    building the beta of my product. I’m still using tornado on the server side, and
    I’ve adopted Twitter’s [Bootstrap](http://getbootstrap.com/) framework for the
    browser GUI. There’s a bit of a learning curve to become productive in Bootstrap
    & [jQuery](http://jquery.com/). But it’s been worthwhile, and I’ve been pleasantly
    surprised by how far browser GUI development has advanced in the last five years.
    Anyway, the purpose of this post is to flag an excellent resource for anyone digging
    deeper into tornado server dev: [Oscar Vilaplana](http://oscarvilaplana.cat/)‘s
    [Tornado In Depth Europython talk](https://www.youtube.com/watch?v=4Ztq-Yz1ero).
    There’s no sound on that youtube video for the first couple of minutes, and even
    after that the audio is a little scratchy. But bear with it. Oscar spends an hour
    walking you through tornado based code and the supporting internals, and makes
    it all beautifully simple. All the examples from his talk can be [found here on
    bitbucket](https://bitbucket.org/grimborg/tornado-in-depth/src/tip/examples/).
    Thanks Oscar!'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 去年四月份我[在我的博客上发过一篇关于使用tornado进行实时推送的文章](https://etrading.wordpress.com/2014/04/26/tornado-websockets/)，该文章讨论了如何使用[WebSocket](http://en.wikipedia.org/wiki/WebSocket)将实时数据推送到浏览器客户端。那时我正在构建一个概念验证（Proof
    of Concept, PoC）。自那时以来，我已经取得了很大的进步；我现在正在构建我产品的测试版。我仍在服务器端使用tornado，并采用了Twitter的[Bootstrap](http://getbootstrap.com/)框架用于浏览器图形用户界面（GUI）。要熟练使用Bootstrap和[jQuery](http://jquery.com/)框架确实需要一定的学习曲线。但这是值得的，而且我对浏览器GUI开发在过去五年中的进步感到非常惊讶。不管怎样，本文的目的是推荐一个深入学习tornado服务器开发的优秀资源：[Oscar
    Vilaplana](http://oscarvilaplana.cat/)的[深入解析Tornado - Europython演讲](https://www.youtube.com/watch?v=4Ztq-Yz1ero)。这个YouTube视频的前几分钟没有声音，即使在那之后，音频也有点杂音。但请耐心观看。Oscar花了一个小时引导大家通过基于tornado的代码及其支持的内核，并使其变得非常简单。他演讲中所有的示例都可以[在bitbucket上找到](https://bitbucket.org/grimborg/tornado-in-depth/src/tip/examples/)。感谢Oscar！
