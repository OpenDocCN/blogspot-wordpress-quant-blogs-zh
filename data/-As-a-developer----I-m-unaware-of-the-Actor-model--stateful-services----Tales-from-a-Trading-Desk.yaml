- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-18 05:38:34'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-18 05:38:34
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: “As a developer..” I’m unaware of the Actor model (stateful services) | Tales
    from a Trading Desk
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: “作为一名开发者...”我对Actor模型（有状态服务）一无所知 | 来自交易桌的故事
- en: 来源：[https://mdavey.wordpress.com/2015/10/28/as-a-developer-im-unaware-of-the-actor-model-stateful-services/#0001-01-01](https://mdavey.wordpress.com/2015/10/28/as-a-developer-im-unaware-of-the-actor-model-stateful-services/#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://mdavey.wordpress.com/2015/10/28/as-a-developer-im-unaware-of-the-actor-model-stateful-services/#0001-01-01](https://mdavey.wordpress.com/2015/10/28/as-a-developer-im-unaware-of-the-actor-model-stateful-services/#0001-01-01)
- en: “As a developer..” I’m unaware of the Actor model (stateful services)
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: “作为一名开发者...”我对Actor模型（有状态服务）一无所知
- en: Almost every day there is another “micro services” article that implies the
    new silver bullet to software architecture will solve all current architecture
    problems.  Its therefore refreshing to [read](http://highscalability.com/blog/2015/10/12/making-the-case-for-building-scalable-stateful-services-in-t.html)
    “Making The Case For Building Scalable Stateful Services In The Modern Era”.  What’s
    also interesting is Caitie McCaffrey “Building Scalable Stateful Services” [presentation](https://speakerdeck.com/caitiem20/building-scalable-stateful-services) due
    to the many patterns discussed – Sticky Sessions, Data Shipping Paradigm, Function
    Shipping Paradigm, Data Locality, CAP, Cluster Membership, Gossip Protocols, Consistent
    Hashing, DHT.  There is also a nice mention of Microsofts Orleans runtime and
    programming model based on the Actor model (blogged about a long time ago) which,
    if your a Java developer, should hopefully lead you to the [Akka](http://akka.io/)
    toolkit and runtime for some home study.  Time to embrace the Actor model?
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎每天都有一篇关于“微服务”的文章，暗示这种新的软件架构银弹将解决所有当前的架构问题。因此，阅读[“在现代时代构建可扩展的有状态服务的案例”](http://highscalability.com/blog/2015/10/12/making-the-case-for-building-scalable-stateful-services-in-t.html)令人耳目一新。同样有趣的是
    Caitie McCaffrey 的“构建可扩展的有状态服务”[演讲](https://speakerdeck.com/caitiem20/building-scalable-stateful-services)，其中讨论了许多模式——粘性会话、数据传输范式、功能传输范式、数据局部性、CAP、集群成员资格、八卦协议、一致性哈希、DHT。还提到了基于Actor模型的微软Orleans运行时和编程模型（很久以前就写过博客），如果你是一名Java开发者，这应该会引导你到[Akka](http://akka.io/)工具包和运行时进行一些自学。是时候拥抱Actor模型了吗？
- en: ~ by mdavey on October 28, 2015.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 由 mdavey 于 2015 年 10 月 28 日发表。
- en: Posted in [Languages](https://mdavey.wordpress.com/category/languages/)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 发表于 [语言](https://mdavey.wordpress.com/category/languages/)
