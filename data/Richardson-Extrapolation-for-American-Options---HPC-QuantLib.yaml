- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-05-17 23:30:53'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-17 23:30:53
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Richardson Extrapolation for American Options – HPC-QuantLib
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Richardson Extrapolation for American Options – HPC-QuantLib
- en: 来源：[https://hpcquantlib.wordpress.com/2012/06/10/richardson-extrapolation-for-american-options/#0001-01-01](https://hpcquantlib.wordpress.com/2012/06/10/richardson-extrapolation-for-american-options/#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://hpcquantlib.wordpress.com/2012/06/10/richardson-extrapolation-for-american-options/#0001-01-01](https://hpcquantlib.wordpress.com/2012/06/10/richardson-extrapolation-for-american-options/#0001-01-01)
- en: Popular finite difference schemes like the one-dimensional Crank-Nicholson scheme
    or multi dimensional operating splitting methods like the Hundsdorfer-Verwer scheme
    often achieve second order convergence in ![\Delta t](img/35bff8105c8314c62070030cd46f8a1c.png)
    for typical partial differential equations in financial engineering. Unfortunately
    if these schemes are used together with dynamic programming to price America options
    the second order convergence is destroyed by the first order convergence of the
    dynamic programming step.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 像一维的 Crank-Nicholson 方案或多维的操作分解方法如 Hundsdorfer-Verwer 方案这样的流行有限差分方案，通常在金融工程中的典型偏微分方程中以![\Delta
    t](img/35bff8105c8314c62070030cd46f8a1c.png)实现二阶收敛。不幸的是，如果这些方案与动态规划结合使用来定价美式期权，动态规划步骤的一阶收敛会破坏二阶收敛。
- en: The Richardson extrapolation is a simple numerical gem to increase the convergence
    order of a numerical method. Say a numerical method has the following convergence
    behavior
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 理查森外推法是一种简单的数值宝石，用以提高数值方法的收敛阶。比如说，一个数值方法的收敛行为如下
- en: '![f(\Delta t) = f_0 + \alpha \cdot (\Delta t)^n + O((\Delta t)^{n+1}) ](img/9494255d5ef2da3a60d4f8ecc90f202e.png)
    .'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![f(\Delta t) = f_0 + \alpha \cdot (\Delta t)^n + O((\Delta t)^{n+1}) ](img/9494255d5ef2da3a60d4f8ecc90f202e.png)
    .'
- en: Please note that this is a more restrictive requirement than to assume that
    the numerical method is of order *n* because ![\alpha](img/86ceb19e0d1d39c689d6601fd46650ae.png)
    does not depend on ![\Delta t](img/35bff8105c8314c62070030cd46f8a1c.png). Now
    the formula
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这比假设数值方法的阶数为*n*的要求更为严格，因为![\alpha](img/86ceb19e0d1d39c689d6601fd46650ae.png)不依赖于![\Delta
    t](img/35bff8105c8314c62070030cd46f8a1c.png)。现在公式
- en: '![R(x, \Delta t) = \frac{x^n f\left(\frac{\Delta t}{x}\right)-f(\Delta t)}{x^n-1}
    = f_0 + O((\Delta t)^{n+1}) ](img/61a914424f58647e72dd50ef590106bd.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![R(x, \Delta t) = \frac{x^n f\left(\frac{\Delta t}{x}\right)-f(\Delta t)}{x^n-1}
    = f_0 + O((\Delta t)^{n+1}) ](img/61a914424f58647e72dd50ef590106bd.png)'
- en: also has
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 也有
- en: '![\lim_{\Delta t\rightarrow 0} R(x,\Delta t) = f_0 ](img/e122534998d71446282043df314626fe.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![\lim_{\Delta t\rightarrow 0} R(x,\Delta t) = f_0 ](img/e122534998d71446282043df314626fe.png)'
- en: but the order of convergence of ![R(x, \Delta t)](img/df54f5183a31ab276e6f5e360d3f01c6.png)
    is  *n+1*. The order does not depend on the particular value of *x* but often
    *x* is chosen to be two. This simple trick can be extended to the case where *n*
    is unknown or the Richardson extrapolation can be used *m* times to increase the
    order of convergence to *n+m* [2].
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 但理查森外推法的收敛阶![R(x, \Delta t)](img/df54f5183a31ab276e6f5e360d3f01c6.png)是 *n+1*。阶数不依赖于*x*的具体值，但通常*x*选择为2。这个简单的技巧可以扩展到*n*未知的情况，或者可以使用理查森外推法*m*次以提高收敛阶到*n+m*
    [2]。
- en: Lets apply the Richardson extrapolation to the pricing of an American Put under
    the Heston stochastic differential equation. The corresponding partial differential
    equation
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将理查森外推法应用于海森随机微分方程下美式看跌期权的价格。相应的偏微分方程
- en: '![0 = \frac{\partial u}{\partial t} + \frac{1}{2}S^2v\frac{\partial^2 u}{\partial
    S^2}+\rho\sigma S\nu \frac{\partial^2 u}{\partial S\partial \nu} + \frac{1}{2}\sigma^2\nu
    \frac{\partial^2 u}{\partial \nu^2} + rS\frac{\partial u}{\partial S} + \kappa(\theta
    - \nu)\frac{\partial u}{\partial \nu} -r u ](img/95a5ff3857be332a7e1487df4894904e.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![0 = \frac{\partial u}{\partial t} + \frac{1}{2}S^2v\frac{\partial^2 u}{\partial
    S^2}+\rho\sigma S\nu \frac{\partial^2 u}{\partial S\partial \nu} + \frac{1}{2}\sigma^2\nu
    \frac{\partial^2 u}{\partial \nu^2} + rS\frac{\partial u}{\partial S} + \kappa(\theta
    - \nu)\frac{\partial u}{\partial \nu} -r u ](img/95a5ff3857be332a7e1487df4894904e.png)'
- en: is solved using the Hundsdorfer-Verwer scheme [1]. The early exercise condition
    is impressed using dynamic programming after every time step. The parameters of
    the experiment are
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Hundsdorfer-Verwer方案[1]求解。在每一步之后，使用动态规划实现提前行权条件。实验的参数是
- en: '![\small{T=1, K=10, S_0=11, r=0.1, \nu_0=0.0625, \kappa=5, \theta=0.16, \sigma=0.9,
    \rho=0.1}](img/8a9ceb6a6ee6b2ceb9928f4cbbb88408.png) .'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '![\small{T=1, K=10, S_0=11, r=0.1, \'
- en: As can be seen in the diagram below even though the Richardson extrapolation
    is a simple formula it increases the convergence by one order from *1.0* to approx.
    *2.1*. If the order is not known a priori then the resulting order is still *1.4*.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如图所示，即使理查德森外推法是一个简单的公式，但它将收敛阶从*1.0*提升到了约*2.1*。如果事先不知道阶数，则得到的阶数仍为*1.4*。
- en: '[![](img/3d4df409c8ec94324b1bfe0fa6178781.png "plot")](https://hpcquantlib.wordpress.com/wp-content/uploads/2012/06/plot.png)'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '![plot](https://hpcquantlib.wordpress.com/wp-content/uploads/2012/06/plot.png)'
- en: The source code is available [here](http://hpc-quantlib.de/src/richardson.zip).
    It depends on the latest QuantLib version from the [SVN trunk](http://sourceforge.net/p/quantlib/code/HEAD/tree/).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 源代码可在[此处](http://hpc-quantlib.de/src/richardson.zip)找到。它依赖于从[SVN主干](http://sourceforge.net/p/quantlib/code/HEAD/tree/)获取的最新QuantLib版本。
- en: '[1] Karel in ’t Hout, [ADI finite difference schemes for the Heston model with
    correlation.](http://win.ua.ac.be/~kihout/ADI_Heston_lecture.pdf)'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] Karel in ’t Hout, [ADI有限差分法用于具有相关性的Heston模型](http://win.ua.ac.be/~kihout/ADI_Heston_lecture.pdf)。'
- en: '[2] Eric Hung-Lin Liu, [Fundamental Methods of Numerical Extrapolation with
    Applications](http://ocw.mit.edu/courses/mathematics/18-304-undergraduate-seminar-in-discrete-mathematics-spring-2006/projects/xtrpltn_liu_xpnd.pdf).'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] Eric Hung-Lin Liu, [数值外推法的基本方法及其应用](http://ocw.mit.edu/courses/mathematics/18-304-undergraduate-seminar-in-discrete-mathematics-spring-2006/projects/xtrpltn_liu_xpnd.pdf)。'
