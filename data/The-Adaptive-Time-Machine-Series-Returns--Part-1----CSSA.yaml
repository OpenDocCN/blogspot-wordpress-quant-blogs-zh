- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-12 18:20:58'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-05-12 18:20:58
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: The Adaptive Time Machine Series Returns (Part 1) | CSSA
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 适应性时间机器系列回归（第一部分）| CSSA
- en: 来源：[https://cssanalytics.wordpress.com/2010/07/23/the-adaptive-time-machine-series-returns-part-1/#0001-01-01](https://cssanalytics.wordpress.com/2010/07/23/the-adaptive-time-machine-series-returns-part-1/#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://cssanalytics.wordpress.com/2010/07/23/the-adaptive-time-machine-series-returns-part-1/#0001-01-01](https://cssanalytics.wordpress.com/2010/07/23/the-adaptive-time-machine-series-returns-part-1/#0001-01-01)
- en: 'First, thanks to everyone that commented on the last post—your kind words and
    support are much appreciated.  Getting back to the subject matter–The Adaptive
    Time Machine– the first installment is about examining the original algorithm
    to understand where it can be improved. Quantum Financier did a good series recap
    on the time machine and also tested out the original algorithm on various markets:
    [http://quantumfinancier.wordpress.com/2010/05/10/time-machine-test-part-1/](http://quantumfinancier.wordpress.com/2010/05/10/time-machine-test-part-1/)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，感谢在上一篇文章中留言的每一个人——你们的良言和支持非常令我感激。回到主题——适应性时间机器——第一部分是关于检查原始算法以了解其可以改进之处。量子金融家对时间机器做了一个很好的系列总结，并在各种市场中测试了原始算法：[http://quantumfinancier.wordpress.com/2010/05/10/time-machine-test-part-1/](http://quantumfinancier.wordpress.com/2010/05/10/time-machine-test-part-1/)
- en: The original algorithm was based on using a simple t-test confidence-based method
    of selecting from 50 different runs-based strategies. The entry run was between
    1-5 days in length, while the exit run was also between 1-5 days in length. Mean-reversion
    type run strategies entered on a down run of “n” days and exiting on an up run
    of “n” days. This produced 25 different combinations of long/short strategies.
    Trend-type strategies entered on an up run of “n” days and exited on a down run
    of “n” days–also producing 25 different combinations of long/short strategies
    for a total of 50\. It was shown that selecting strategies with increasingly high
    levels of confidence generated superior returns than each prior group, and significantly
    outperformed buy and hold. This algorithm was able to adapt to changing market
    environments over time.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 原始算法基于使用简单的t-test置信度方法从50个不同的基于运行的策略中进行选择。入场运行为1-5天长度，而退出运行也为1-5天长度。均值回归类型的运行策略在“n”天下降运行时进入，在“n”天上升运行时退出。这产生了25个不同的多空策略组合。趋势类型的策略在“n”天上升运行时进入，在“n”天下降运行时退出——也产生了25个不同的多空策略组合，总共有50个。结果显示，选择置信度越来越高的策略产生的回报优于每个先前的组，并且显著胜过买入持有。这个算法能够随着时间的推移适应不断变化的市场环境。
- en: 'But the algorithm was far from perfect–although it proved to be fairly robust
    across instruments,  in many different  markets it struggled to beat buy and hold
    and in some cases even under-performed. The question is why?  The most obvious
    problem with the original algorithm is with the strategy selection criteria itself.
     First of all, the problem with using runs is twofold: 1) run frequency changes
    over time- there is both intra-year variation and secular shifts in run frequency
    across years 2) run frequency varies significantly by instrument which limits
    adaptation. As a simple example, a strategy that goes long on a 3-day run down,
    and exits on a 5-day run up will experience periods where it is completely inactive
    or even worse stuck waiting for an exit. If this strategy was selected prior to
    going into a deep bear market, it is possible that no significant up run would
    materialize for a month or more.  In addition, the frequency of long runs either
    up or down have shrunk over the last few decades, and this transition greatly
    impacts the bias in strategy selection—we may end up selecting a strategy that
    is no longer regularly active. Furthermore, in relation to different markets,
    while a run of 4 or 5 is very rare for the S&P500, it may be quite common  with
    different commodities or currencies. The best solution to this problem: **a normalized
    up and down run indicator using (what else?) the 252-day percentrank!**'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 但这个算法远非完美——尽管它在不同工具上表现相当稳健，但在许多不同市场中，它很难超越买入并持有的策略，在某些情况下甚至表现得更差。问题是为什么？原始算法最明显的问题就是策略选择标准本身。首先，使用运行数的问题有两个方面：1)
    运行频率随时间变化——年内有波动，历年运行频率也有长期变动2) 运行频率因工具而异，这限制了适应性。作为一个简单的例子，一个在3天运行下跌时做多，在5天运行上涨时退出的策略，可能会经历完全无活动或更糟的，等待退出的时期。如果这个策略是在进入深度熊市之前选定的，那么有可能一个月以上都不会出现显著的上涨运行。此外，过去几十年中，上涨或下跌的长期运行频率有所下降，这种转变对策略选择偏见产生了很大影响——我们可能会选择一个不再活跃的策略。此外，与不同市场相关的是，虽然标普500的4或5天运行非常罕见，但对于不同的商品或货币来说可能很常见。解决这个问题的最佳方案：**使用252天百分比排名进行标准化上下运行指标！**
- en: Another problem with the time machine algorithm relates to the t-test itself
    which assumes normality and independence–both highly flawed assumptions with time
    series data. The use of non-parametric statistics are slightly better, but they
    lack the statistical power of more rigorous tests like the bootstrap or the monte
    carlo simulation as popularized by David Aronson in **Evidence-Based Technical
    Analysis**. This book is well worth reading, and provides the requisite dose of
    rigor and skepticism into a world filled with snake oil. Implementing and adapting
    these tests for hypothesis testing  is well beyond the scope of this blog and
    is something we have invested a fair bit of time on internally at CSS.  Truthfully
    the simple t-test, or a regression-based t-test will have to suffice for most
    traders since conducting the above tests is both complex and computer-intensive.
    One important point is that many strategies will have greater than 95% confidence,
    and what was sorely lacking in the time machine was a performance selection criterion
    to isolate the best of the strategies that already pass the confidence test. To
    improve upon the existing framework we will use a fancy new statistic called **“Omega”**
    to select strategies, which is essentially a distribution-based measure of upside
    versus downside. The Omega is by itself very useful for different  applications
    and will be introduced in a post later this summer.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 时间机器算法存在的另一个问题与t检验本身有关，该检验假设数据呈正态分布且相互独立——这两个假设对于时间序列数据来说都是极其错误的。非参数统计学稍好一些，但它们缺乏像Bootstrap或由David
    Aronson在《基于证据的技术分析》一书中推广的Monte Carlo模拟这样更严格检验的统计功效。这本书非常值得一读，它为充满伪科学的世界提供了必要的严谨和怀疑主义。在CSS内部，我们已经在实施和适应这些测试方面投入了大量时间，超出了本博客的范围。事实上，对于大多数交易员来说，简单的t检验或基于回归的t检验就足够了，因为进行上述测试既复杂又耗时。一个重要的问题是，许多策略的置信度将超过95%，而时间机器严重缺乏的是一个性能选择标准，以隔离那些已经通过置信度测试的策略中的最佳策略。为了改进现有的框架，我们将使用一个名为**“Omega”**的新潮统计量来选择策略，这本质上是一个基于分布的上行与下行风险的度量。Omega本身对于不同的应用非常有用，我们将在今年夏天稍后的帖子中介绍它。
- en: Finally, the last problem with the time machine pertains to the use of long/short
    strategies. If a market is perpetually rising, short strategies may not be very
    profitable and will obscure the strength of its long-side cousin. The converse
    will happen when the market is falling. This makes it more difficult to adapt
    to what is working, and also less flexible.  The best way to solve this issue
    is to have long only strategies, short only strategies, and also long/short strategies.
     This provides maximum flexibility for strategy selection. Next week I will begin
    presenting some of the refinements and spend time developing the new and improved
    algorithm. Stay tuned!
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，时间机器的最后一个问题与长/短策略的使用有关。如果一个市场持续上涨，短策略可能不会非常盈利，并且会掩盖其多头策略的强度。当市场下跌时，情况恰恰相反。这使得适应正在起作用的事物变得更加困难，并且灵活性也较低。解决这个问题的最佳方法是拥有仅多头策略、仅短策略以及多头/短策略。这为策略选择提供了最大的灵活性。下周我将开始介绍一些改进内容，并花时间开发新的和改进的算法。敬请期待！
