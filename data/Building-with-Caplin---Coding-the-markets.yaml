- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-12 19:41:56'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-12 19:41:56'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Building with Caplin | Coding the markets
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Caplin 构建 | 编码市场
- en: 来源：[https://etrading.wordpress.com/2008/07/08/building-with-caplin/#0001-01-01](https://etrading.wordpress.com/2008/07/08/building-with-caplin/#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://etrading.wordpress.com/2008/07/08/building-with-caplin/#0001-01-01](https://etrading.wordpress.com/2008/07/08/building-with-caplin/#0001-01-01)
- en: Building with Caplin
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Caplin 构建
- en: July 8, 2008
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2008年7月8日
- en: So, let’s imagine you’re building a brand new single dealer channel for your
    bank with [Caplin Trader](http://www.caplin.com/caplintrader) from [Caplin Systems](http://www.caplin.com/about/).
    You picked Caplin because it’s the clear leader in the streaming [comet server](http://cometdaily.com/)
    space, and you want to deliver your etrading app into the browser so it’s zero
    install on the client desktop. There are other vendors with viable offerings that
    compete with Caplin’s [Liberator](http://www.freeliberator.com/documentation/)
    as comet servers – [Lightstreamer](http://www.lightstreamer.com/) is the clear
    number two. There are interesting new vendors entering the sector like [Kaazing](http://www.kaazing.com/),
    and there are [open source products](http://cometdproject.dojotoolkit.org/) too.
    But none of them is as mature or as widely deployed in live production etrading
    apps as Caplin Liberator.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，让我们想象一下，你正在使用 [Caplin Trader](http://www.caplin.com/caplintrader) 从 [Caplin
    Systems](http://www.caplin.com/about/) 构建银行的全新单一经销商渠道。你选择了 Caplin，因为它在流媒体 [comet
    server](http://cometdaily.com/) 领域是明显的领导者，并且你希望将你的电子交易应用程序交付到浏览器中，以便客户端桌面上零安装。还有其他供应商提供了与
    Caplin 的 Liberator 相竞争的可行方案作为 [comet server](http://www.freeliberator.com/documentation/)，其中
    [Lightstreamer](http://www.lightstreamer.com/) 是明显的第二名。还有一些有趣的新供应商进入了这个领域，比如 [Kaazing](http://www.kaazing.com/)，还有
    [开源产品](http://cometdproject.dojotoolkit.org/)。但是，没有一个像 Caplin Liberator 那样成熟或在生产中的电子交易应用程序中被广泛部署。
- en: A server to stream live ticking prices to a browser is just one part of the
    puzzle of building a web 2.0 etrading app. You need to build the GUI in the browser,
    and you need an execution system that will handle RFQ/RFS. Unlike the other vendors
    Caplin provide this in the shape of the Caplin Trader GUI and the Trading Data
    Source. The GUI is based on the JavaScript widget kit from [SoCentric](http://www.socentric.com/),
    and the Trading Data Source provides configurable state machines that keep GUI
    and server side state in lock step during the lifetime of an RFQ ticket.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 向浏览器实时传送报价的服务器只是构建 web 2.0 电子交易应用的谜题中的一部分。你需要在浏览器中构建 GUI，并且你需要一个执行系统来处理 RFQ/RFS。与其他供应商不同，Caplin
    提供了 Caplin Trader GUI 和 Trading Data Source。GUI 基于 [SoCentric](http://www.socentric.com/)
    的 JavaScript 小部件工具包，而 Trading Data Source 则提供可配置的状态机，以在 RFQ 票证的生命周期内将 GUI 和服务器端状态保持同步。
