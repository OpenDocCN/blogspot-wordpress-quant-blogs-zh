- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-05-12 19:46:23'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-12 19:46:23'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Python 2.5.1 | Coding the markets
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python 2.5.1 | Coding the markets
- en: 来源：[https://etrading.wordpress.com/2007/06/18/python-251/#0001-01-01](https://etrading.wordpress.com/2007/06/18/python-251/#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://etrading.wordpress.com/2007/06/18/python-251/#0001-01-01](https://etrading.wordpress.com/2007/06/18/python-251/#0001-01-01)
- en: Python 2.5.1
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python 2.5.1
- en: June 18, 2007
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2007年6月18日
- en: The standard [Python 2.5.1](http://www.python.org/download/releases/2.5.1/)
    binaries in the Windows download are built with Visual C++ 7.1, which means that
    the python25.dll supplied references msvcr71.dll. If you’re linking python25.lib
    and building with Visual C++ 8, you’ll get a core dump.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Windows下载的Python 2.5.1标准二进制文件是用Visual C++ 7.1构建的，这意味着提供的python25.dll引用了msvcr71.dll。如果你正在链接python25.lib并且使用Visual
    C++ 8进行构建，你将会遇到核心转储。
- en: Fortunately the source tarball has a VC8 project file that build right out of
    the box. So it was really no trouble to generate a python25.dll that uses msvcr80.dll.
    Kudos to the Pythonistas for having a well sorted build…
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，源代码压缩包中有一个VC8项目文件，可以立即构建。所以生成一个使用msvcr80.dll的python25.dll真的不是什么麻烦事。为Python开发者们有一个井井有条的构建过程点赞…
