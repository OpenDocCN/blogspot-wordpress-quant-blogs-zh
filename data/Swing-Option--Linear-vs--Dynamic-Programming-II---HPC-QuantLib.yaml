- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-05-17 23:41:02'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-05-17 23:41:02'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Swing Option: Linear vs. Dynamic Programming II – HPC-QuantLib'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摆动期权：线性规划与动态规划 II – HPC-QuantLib
- en: 来源：[https://hpcquantlib.wordpress.com/2011/06/04/swing-option-linear-vs-dynamic-programming-ii/#0001-01-01](https://hpcquantlib.wordpress.com/2011/06/04/swing-option-linear-vs-dynamic-programming-ii/#0001-01-01)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://hpcquantlib.wordpress.com/2011/06/04/swing-option-linear-vs-dynamic-programming-ii/#0001-01-01](https://hpcquantlib.wordpress.com/2011/06/04/swing-option-linear-vs-dynamic-programming-ii/#0001-01-01)
- en: In order to get an improved impression on the differences between Monte-Carlo/linear
    programming and  finite difference methods/dynamic programming  a more realistic
    swing option with hourly payoff profile is evaluated based on a German hourly
    forward curve. The forward curve is taken from the [Kyos example download page](http://www.kyos.com/?content=65).
    The parameterization of the Kluge model is outlined in [1].
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地了解蒙特卡罗/线性规划和有限差分法/动态规划之间的区别，我们评估了一种更真实的具有每小时支付概况的摆动期权，该概况基于德国每小时的远期曲线。这个远期曲线来自于[Kyos示例下载页面](http://www.kyos.com/?content=65)。
    Kluge模型的参数化在[1]中概述。
- en: With maturity of twelve weeks the example swing option provides ![12*7*24=2016](img/5646a4e5fc3a2f4f07e39a9e1800ba5f.png)
    exercise opportunities. The number of overall exercised swing opportunities is
    constraint by
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 以十二周为期限，示例摆动期权提供了![12*7*24=2016](img/5646a4e5fc3a2f4f07e39a9e1800ba5f.png)次执行机会。总体执行的摆动机会次数受到限制
- en: '![100 \le \sum_{i=1}^{2016} \beta_i \le 500](img/4a820d640b4437a9e9f7d3848bde26aa.png).'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![100 \le \sum_{i=1}^{2016} \beta_i \le 500](img/4a820d640b4437a9e9f7d3848bde26aa.png).'
- en: The size of two dimensions of the finite difference method (dynamic programming)
    is therefore already been given. 2016 steps are needed in time direction and 500
    steps are needed in the “consumed exercises” direction. Together with the two
    other directions – one for the power price and one dimension for the jump process
    – and without further simplidsfications this forms a pretty large finite difference
    problem. The Monte-Carlo based linear programming approach reduces the computational
    burden but will lead to an upper bound of the swing option price. The diagram
    below shows the corresponding results.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 有限差分法（动态规划）的两个维度的大小已经确定。时间方向需要2016步，而“已执行操作”方向需要500步。加上另外两个方向 - 一个用于电价，另一个用于跳跃过程
    - 而且没有进一步简化，这就构成了一个相当大的有限差分问题。基于蒙特卡罗的线性规划方法减轻了计算负担，但将导致摆动期权价格的上限。下图显示了相应的结果。
- en: '[![](img/0c6d2bb1fca32e8d09603afc6719b15b.png "plot")](https://hpcquantlib.wordpress.com/wp-content/uploads/2011/06/plot4.png)
    [](https://hpcquantlib.wordpress.com/wp-content/uploads/2011/06/plot3.png)  [](https://hpcquantlib.wordpress.com/wp-content/uploads/2011/06/plot2.png)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](img/0c6d2bb1fca32e8d09603afc6719b15b.png "plot")](https://hpcquantlib.wordpress.com/wp-content/uploads/2011/06/plot4.png)
    [](https://hpcquantlib.wordpress.com/wp-content/uploads/2011/06/plot3.png)  [](https://hpcquantlib.wordpress.com/wp-content/uploads/2011/06/plot2.png)'
- en: The code is available [here](http://hpc-quantlib.de/src/fwdswing.zip). It depends
    on the [GNU Linear Programming Kit](http://www.gnu.org/software/glpk/), the [Boost
    Thread](http://www.boost.org) library for parallelization and at the time of writing
    on the latest [QuantLib](http://www.quantlib.org) version from the [SVN trunk](http://sourceforge.net/p/quantlib/code/HEAD/tree/).
    If you want to generate the plot directly out of the C++ program you also need
    [R](http://www.r-project.org/), [RCPP](http://cran.r-project.org/web/packages/Rcpp/index.html)
    and [RInside](http://cran.r-project.org/web/packages/RInside/index.html). To utilize
    all CPU cores please use the -DNTHREADS=(number of CPU cores)  compiler switch.
    In addition to run the program you have to download the forward curve German power
    from the [Kyos web page](http://www.kyos.com/?content=65) and convert it into
    a text file EEX_2010-2013.txt of the folliwing format
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 代码在[这里](http://hpc-quantlib.de/src/fwdswing.zip)。它依赖于[GNU线性规划套件](http://www.gnu.org/software/glpk/)，用于并行化的[Boost线程](http://www.boost.org)库，以及在撰写本文时最新的[QuantLib](http://www.quantlib.org)版本来自[SVN主干](http://sourceforge.net/p/quantlib/code/HEAD/tree/)。如果您想直接从C++程序生成图形，还需要[R](http://www.r-project.org/)、[RCPP](http://cran.r-project.org/web/packages/Rcpp/index.html)和[RInside](http://cran.r-project.org/web/packages/RInside/index.html)。为了利用所有CPU核心，请使用-DNTHREADS=(CPU核心数量)编译器开关。此外，要运行该程序，您必须从[Kyos网页](http://www.kyos.com/?content=65)下载德国电力远期曲线，并将其转换为以下格式的文本文件EEX_2010-2013.txt
- en: 4-Oct-2010 36.73 32.09 27.32 23.22 25.71 35.60 47.32 …
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 2010年10月4日 36.73 32.09 27.32 23.22 25.71 35.60 47.32 …
- en: 5-Oct-2010 38.12 31.12 22.76 25.65 27.87 34.60 50.01 …
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 2010年10月5日 38.12 31.12 22.76 25.65 27.87 34.60 50.01 …
- en: '[1] T. Kluge, [Pricing Swing Options and other Electricity Derivatives](http://eprints.maths.ox.ac.uk/246/1/kluge.pdf)'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] T. Kluge, [电力衍生品定价：摆动期权及其他](http://eprints.maths.ox.ac.uk/246/1/kluge.pdf)'
